<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo cannot get /</title>
      <link href="/posts/7563.html"/>
      <url>/posts/7563.html</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-cannot-get"><a href="#Hexo-cannot-get" class="headerlink" title="Hexo cannot get /"></a>Hexo cannot get /</h1><p>========================</p><p>因为大改了博客，node_modules内的文件被改动过，导致博客的index.html文件生成出现问题。</p><p>执行<code>npm audit fix</code> 查看是否缺失组件，通过<code>npm install hexo-xxx-xxx</code> 安装即可。</p><p>这里我遇到的问题是<code>Cannot get /</code>，缺失了hexo-generator-index组件，应该是我安装其他组件时将其卸载了。之后进行了hexo clean 才发现不能生成index.html这个问题， 因此执行<code>npm install hexo-generator-index</code>便解决了我遇到的问题。</p>]]></content>
      
      
      <categories>
          
          <category> 脚本语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博文 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>默写图DFS算法</title>
      <link href="/posts/31649.html"/>
      <url>/posts/31649.html</url>
      
        <content type="html"><![CDATA[<h1 id="默写图DFS算法"><a href="#默写图DFS算法" class="headerlink" title="默写图DFS算法"></a>默写图DFS算法</h1><p>========================</p><p>所谓默写，就是合上书本，不依靠浏览器、编译器、记事本等外物，仅凭记忆去写下所要求的知识、文字等。本不必如此麻烦，我也不想如此，不过他们太卷了，那就来吧。</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">int</span> visit<span class="token punctuation">[</span>maxSize<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//全局数组，记录结点是否被访问，maxSize为事先定义的数组上限。</span><span class="token keyword">void</span> <span class="token function">DFS</span><span class="token punctuation">(</span>AGraph <span class="token operator">*</span>G<span class="token punctuation">,</span> <span class="token keyword">int</span> v<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// 图G，顶点v</span>    ArcNode <span class="token operator">*</span>p<span class="token punctuation">;</span> <span class="token comment">//定义边</span>    visit<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//记录顶点被访问</span>    <span class="token function">Visit</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//事先定义好的访问顶点的函数</span>    p <span class="token operator">=</span> G<span class="token operator">-&gt;</span>adjlist<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">.</span>firstArc<span class="token punctuation">;</span> <span class="token comment">//将p指向图的第一条边</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>p<span class="token operator">!=</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>visit<span class="token punctuation">[</span>p<span class="token operator">-&gt;</span>adjvex<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//如果顶点未被访问</span>            <span class="token function">DFS</span><span class="token punctuation">(</span>G<span class="token punctuation">,</span> p<span class="token operator">-&gt;</span>adjvex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//递归访问</span>        <span class="token punctuation">}</span>        p<span class="token operator">=</span>p<span class="token operator">-&gt;</span>nextArc<span class="token punctuation">;</span><span class="token comment">//p指向v的下一条边</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="默写结果"><a href="#默写结果" class="headerlink" title="默写结果"></a>默写结果</h2><p><code>完全正确</code></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><code>DFS</code>属于核心且简单的内容，而且也很多变，所以还是需要领悟其真正的奥义才能灵活运用。另外，<code>图的DFS遍历</code>与<code>二叉树的先序遍历</code>类似，可以理理二者之间的相似与不同之处。<br>上述算法主要针对<code>连通图</code>，针对<code>非连通图</code>可以写一个循环，遍历未被访问的顶点，然后对该点进行上述的DFS算法,相当于是将<code>非连通图</code>拆成若干个<code>连通图</code>，然后一一进行DFS算法。</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span>Agraph <span class="token operator">*</span>g<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>g<span class="token operator">-&gt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>visit<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">DFS</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C++ </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> DFS </tag>
            
            <tag> 默写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>默写层次遍历</title>
      <link href="/posts/37157.html"/>
      <url>/posts/37157.html</url>
      
        <content type="html"><![CDATA[<h1 id="默写层次遍历"><a href="#默写层次遍历" class="headerlink" title="默写层次遍历"></a>默写层次遍历</h1><p>========================</p><p>所谓默写，就是合上书本，不依靠浏览器、编译器、记事本等外物，仅凭记忆去写下所要求的知识、文字等。本不必如此麻烦，我也不想如此，不过他们太卷了，那就来吧。</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">level</span><span class="token punctuation">(</span>BTNode <span class="token operator">*</span>p<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// BTNode为二叉树结点</span>    <span class="token keyword">int</span> front<span class="token punctuation">,</span>rear<span class="token punctuation">;</span>    BTNode <span class="token operator">*</span>que<span class="token punctuation">[</span>maxSize<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//maxSize为事先定义的循环队列上限；定义循环队列，记录将要访问的层次上的结点</span>    front<span class="token operator">=</span>rear<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    BTNode <span class="token operator">*</span>q<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>p<span class="token operator">!=</span><span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        rear <span class="token operator">=</span> <span class="token punctuation">(</span>rear <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> maxSize<span class="token punctuation">;</span>        que<span class="token punctuation">[</span>rear<span class="token punctuation">]</span> <span class="token operator">=</span> p<span class="token punctuation">;</span> <span class="token comment">//头结点入队</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>front<span class="token operator">!=</span>rear<span class="token punctuation">)</span> <span class="token punctuation">{</span>            front <span class="token operator">=</span> <span class="token punctuation">(</span>front <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> maxSize<span class="token punctuation">;</span>            q <span class="token operator">=</span> que<span class="token punctuation">[</span>front<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//头结点出队</span>            <span class="token function">Visit</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//Visit()函数为事先定义的访问二叉树结点的函数，举例：cout&lt;&lt;q-&gt;data;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>q<span class="token operator">-&gt;</span>lchild <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//结点左子树不为空</span>                rear <span class="token operator">=</span> <span class="token punctuation">(</span>rear <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> maxSize<span class="token punctuation">;</span>                que<span class="token punctuation">[</span>rear<span class="token punctuation">]</span> <span class="token operator">=</span> q<span class="token operator">-&gt;</span>lchild<span class="token punctuation">;</span> <span class="token comment">//左子树根节点入队</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>q<span class="token operator">-&gt;</span>rchild <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//结点右子树不为空</span>                rear <span class="token operator">=</span> <span class="token punctuation">(</span>rear <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> maxSize<span class="token punctuation">;</span>                que<span class="token punctuation">[</span>rear<span class="token punctuation">]</span> <span class="token operator">=</span> q<span class="token operator">-&gt;</span>rchild<span class="token punctuation">;</span> <span class="token comment">//右子树根节点入队</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="默写结果"><a href="#默写结果" class="headerlink" title="默写结果"></a>默写结果</h2><p><code>完全正确</code></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>层次遍历属于核心且简单的内容，将程序整个记下来，也是为了0失误，自己现场想的话很容易出错，这样做对记忆力有一定的要求，不过我只会精准记忆核心内容，其他的采用泛式记忆或模糊记忆即可。</p>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C++ </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 默写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日60秒读懂世界</title>
      <link href="/posts/19234.html"/>
      <url>/posts/19234.html</url>
      
        <content type="html"><![CDATA[<img src="https://v2.alapi.cn/api/zaobao?token=bqYVMcni4hTa7tCL&amp;format=image" width="85%"> ]]></content>
      
      
      <categories>
          
          <category> 新闻 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 新闻 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SDUTOJ1730（记忆化搜索）：数字三角形</title>
      <link href="/posts/49201.html"/>
      <url>/posts/49201.html</url>
      
        <content type="html"><![CDATA[<h1 id="SDUTOJ1730（记忆化搜索）：数字三角形"><a href="#SDUTOJ1730（记忆化搜索）：数字三角形" class="headerlink" title="SDUTOJ1730（记忆化搜索）：数字三角形"></a>SDUTOJ1730（记忆化搜索）：数字三角形</h1><p>========================</p><p>题目如下：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220327SDUTOJ1730%EF%BC%88%E8%AE%B0%E5%BF%86%E5%8C%96%E6%90%9C%E7%B4%A2%EF%BC%89%EF%BC%9A%E6%95%B0%E5%AD%97%E4%B8%89%E8%A7%92%E5%BD%A2/1.png"></p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">数字三角形问题Description给定一个由n行数字组成的数字三角形如下图所示。试设计一个算法，计算出从三角形的顶至底的一条路径，使该路径经过的数字总和最大。 对于给定的由n行数字组成的数字三角形，计算从三角形的顶至底的路径经过的数字和的最大值。Input输入数据的第1行是数字三角形的行数n，1≤n≤100。接下来n行是数字三角形各行中的数字。所有数字在0..99之间。Output输出数据只有一个整数，表示计算出的最大值。SampleInput 573 88 1 02 7 4 44 5 2 6 5Output 30<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">//题目较为简单，记录即可。</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>心得： 这是一道比较经典的动规及记忆化搜索题，难度中等。</code></p><h2 id="解法一"><a href="#解法一" class="headerlink" title="解法一"></a>解法一</h2><p>数组递推</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bitset&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cmath&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdlib&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstring&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;deque&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;functional&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;map&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;queue&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;set&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stack&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N<span class="token operator">=</span><span class="token number">111</span><span class="token punctuation">;</span><span class="token keyword">int</span> dp<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> n<span class="token punctuation">;</span>    <span class="token keyword">int</span> res<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> i<span class="token punctuation">,</span>j<span class="token punctuation">;</span>    cin<span class="token operator">&gt;&gt;</span>n<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>i<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            cin<span class="token operator">&gt;&gt;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    dp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span> i<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//边界情况</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>i<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> res<span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span>dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//求各个路径结果的最大值</span>    cout<span class="token operator">&lt;&lt;</span>res<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="解法二（深度优先，超时解法）"><a href="#解法二（深度优先，超时解法）" class="headerlink" title="解法二（深度优先，超时解法）"></a>解法二（深度优先，超时解法）</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220327SDUTOJ1730%EF%BC%88%E8%AE%B0%E5%BF%86%E5%8C%96%E6%90%9C%E7%B4%A2%EF%BC%89%EF%BC%9A%E6%95%B0%E5%AD%97%E4%B8%89%E8%A7%92%E5%BD%A2/2.jpeg"></p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token comment">//c用来记录累加的结果</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">==</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">&gt;</span>ans<span class="token punctuation">)</span> ans<span class="token operator">=</span>c   <span class="token comment">//取最后累加结果的最大值  ans用来存储</span>        <span class="token keyword">return</span> <span class="token punctuation">;</span>    <span class="token punctuation">}</span>     <span class="token function">dfs</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>y<span class="token punctuation">,</span>c<span class="token operator">+</span>a<span class="token punctuation">[</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">dfs</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>c<span class="token operator">+</span>a<span class="token punctuation">[</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过<code>深度优搜索（dfs）</code>画出<code>递归树</code>来模拟执行过程<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220327SDUTOJ1730%EF%BC%88%E8%AE%B0%E5%BF%86%E5%8C%96%E6%90%9C%E7%B4%A2%EF%BC%89%EF%BC%9A%E6%95%B0%E5%AD%97%E4%B8%89%E8%A7%92%E5%BD%A2/3.jpeg"></p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span>  <span class="token comment">//超时算法</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N<span class="token operator">=</span><span class="token number">1e5</span><span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> ans<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">,</span><span class="token keyword">int</span> c<span class="token punctuation">,</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">==</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>c<span class="token operator">&gt;</span>ans<span class="token punctuation">)</span> ans<span class="token operator">=</span>c<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">dfs</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>y<span class="token punctuation">,</span>c<span class="token operator">+</span>a<span class="token punctuation">[</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">dfs</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>c<span class="token operator">+</span>a<span class="token punctuation">[</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> n<span class="token punctuation">;</span>    cin<span class="token operator">&gt;&gt;</span>n<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>i<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            cin<span class="token operator">&gt;&gt;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>     <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span>ans<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>深度优先搜索其实质就是<code>二叉树的先序遍历</code>（没学过的直接用递推或者递归的算法求解）<br>我们发现有些点被重复搜索了好几遍这就耗费了很多的时间，实际上也是这样的这种算法的时间复杂度为O(2^n)指数级复杂度肯定要超时的，这时我们就希望有一种算法能够在第一次搜索的过程中就记录下来之后用的时候就不需要继续搜索了，这就引出我们的<code>记忆化搜索</code>。</p><h2 id="解法三（记忆化搜索）"><a href="#解法三（记忆化搜索）" class="headerlink" title="解法三（记忆化搜索）"></a>解法三（记忆化搜索）</h2><p>我们发现从上向下累加和是不能重复的，但从下向下的累加是可以重复用的这也是记忆化搜索的前提。记忆化搜索：对递归树做了剪枝，搜索过的子树不再重复搜索，直接返回储存值。</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N<span class="token operator">=</span><span class="token number">1500</span><span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> f<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">//记录从上到下的累加和 </span><span class="token keyword">int</span> ans<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//记忆搜索， 避免进一步递归 </span>    <span class="token keyword">if</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> f<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">//由于开全局数组初始化都为0不为零就相当于已经搜索过就记录下来 </span>    <span class="token keyword">if</span><span class="token punctuation">(</span>x<span class="token operator">==</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>   <span class="token comment">//边界条件 </span>    f<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>    f<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token operator">+</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token function">dfs</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">dfs</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> f<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    cin<span class="token operator">&gt;&gt;</span>n<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>i<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            cin<span class="token operator">&gt;&gt;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>     <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span>f<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其实找准动态规划与贪心的区别后，理解起来就不那么难了，动态规划的关键词就是状态和状态转移方程，找好这两个问题就可以解决了，然后dfs深搜，和记搜有时候牵扯到后面的二叉树，先不用理解的太深，代码就多一行记住后以后就会慢慢的理解了。其实递推的方法求数塔问题是也是有用数组记录了值，和记忆化搜索有些相似，大家可以结合理解，加油！<br>题目链接：<a href="https://acm.sdut.edu.cn/onlinejudge3/problems/1730">https://acm.sdut.edu.cn/onlinejudge3/problems/1730</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C++ </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> SDUTOJ </tag>
            
            <tag> DFS </tag>
            
            <tag> Memory Search </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SDUTOJ2080（动态规划）：最长公共子序列</title>
      <link href="/posts/11317.html"/>
      <url>/posts/11317.html</url>
      
        <content type="html"><![CDATA[<h1 id="SDUTOJ2080（动态规划）：最长公共子序列"><a href="#SDUTOJ2080（动态规划）：最长公共子序列" class="headerlink" title="SDUTOJ2080（动态规划）：最长公共子序列"></a>SDUTOJ2080（动态规划）：最长公共子序列</h1><p>========================</p><p>题目如下：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220326SDUTOJ2080%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89%EF%BC%9A%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/1.png"></p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">最长公共子序列问题Description给定两个序列 X={x1,x2,…,xm} 和 Y={y1,y2,…,yn}，找出X和Y的最长公共子序列。Input输入数据有多组，每组有两行 ，每行为一个长度不超过500的字符串（输入全是大写英文字母（A,Z）），表示序列X和Y。Output每组输出一行，表示所求得的最长公共子序列的长度，若不存在公共子序列，则输出0。SampleInput ABCBDABBDCABAOutput 4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">//比较简单，这里做记录即可</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>心得： 这是一道比较经典的动规题，难度低。</code></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">状态表示：我们用dp[i][j]表示数字A[1,i]与B[1,j] 的最长公共子序列长度。分析：当s1[i]=s2[j]时 dp[i][j]=d[i-1][j-1]+1; 因为相同时肯定是最长公共子序列长度+1；当s1[i]!=s2[j]时 dp[i][j]=max(dp[i][j-1],dp[i-1][j]) 举个例子：ABC AABD C可得dp[4][4]=dp[3][4];有一点小问题：有一些人认为不用考虑s1[i]==s2[j]的这种情况，因为dp[i-1][j]=dp[i-2][j]+dp[i-1][j-1] 也就是说else后面的这一种情况全部都可以包括，但我不这么认为，原因如下：如果只有else后面的语句得出的结果是0，我们建立表格时发现整个表格全部为零，我结合if里的语句简单的分析了一下，else语句的dp数组建立的表格确实能包括dp[i][j]但是从问题的角度来分析，s1[i]=s2[j]这种情况并没有被包括，就和贪心一样指一种情况对结果有一定的贡献所以不能舍弃（一点小的见解，仅供参考）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N<span class="token operator">=</span><span class="token number">505</span><span class="token punctuation">;</span><span class="token keyword">int</span> dp<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">char</span> s1<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span>s2<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> n<span class="token punctuation">,</span>m<span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s %s"</span><span class="token punctuation">,</span>s1<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>s2<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        n<span class="token operator">=</span><span class="token function">strlen</span><span class="token punctuation">(</span>s1<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        m<span class="token operator">=</span><span class="token function">strlen</span><span class="token punctuation">(</span>s2<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//数组统一往后移动一位是考虑到边界问题</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>m<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span> dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>s1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span>s2<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>                    <span class="token punctuation">{</span>                     dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span>                 <span class="token keyword">else</span>                  <span class="token punctuation">{</span>                     dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>题目链接：<a href="https://acm.sdut.edu.cn/onlinejudge3/problems/2080">https://acm.sdut.edu.cn/onlinejudge3/problems/2080</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C++ </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> SDUTOJ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SDUTOJ1299（动态规划）：最长上升子序列</title>
      <link href="/posts/48626.html"/>
      <url>/posts/48626.html</url>
      
        <content type="html"><![CDATA[<h1 id="SDUTOJ1299（动态规划）：最长上升子序列"><a href="#SDUTOJ1299（动态规划）：最长上升子序列" class="headerlink" title="SDUTOJ1299（动态规划）：最长上升子序列"></a>SDUTOJ1299（动态规划）：最长上升子序列</h1><p>========================</p><p>题目如下：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220326SDUTOJ1299%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89%EF%BC%9A%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/1.png"></p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">最长上升子序列Description一个数的序列bi，当b1 &lt; b2 &lt; ... &lt; bS的时候，我们称这个序列是上升的。对于给定的一个序列(a1, a2, ..., aN)，我们可以得到一些上升的子序列(ai1, ai2, ..., aiK)，这里1&lt;= i1 &lt; i2 &lt; ... &lt; iK &lt;= N。比如，对于序列(1, 7, 3, 5, 9, 4, 8)，有它的一些上升子序列，如(1, 7), (3, 4, 8)等等。这些子序列中最长的长度是4，比如子序列(1, 3, 5, 8)。你的任务，就是对于给定的序列，求出最长上升子序列的长度。Input输入的第一行是序列的长度N (1 &lt;= N &lt;= 1000)。第二行给出序列中的N个整数，这些整数的取值范围都在0到10000。Output最长上升子序列的长度。SampleInput 71 7 3 5 9 4 8Output 4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">//比较简单，这里做记录即可</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>心得： 这是一道比较经典的动规题，难度低。</code></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">我们要求最长上升子序列的长度，自然要挨个数字来寻找，这时我们用dp[i]来表示用i个数字结尾的最长上升子序列的长度。样例 1 7 3 5 9 4 8dp[i] 1 2 2 3 3 …dp[2]：dp[2]=dp[1]+1;dp[3]:dp[3]=dp[1]+1;dp[4]:dp[4]=dp[1]+1;dp[4]=dp[3]+1;这时我们发现了什么规律呢？没错从第一位数字开始寻找，找到一个比当前的数小的数就+1更新一下，直到遍历到当前数字。我们就得到状态转移方程dp[i]=max( dp[j] + 1, dp[i] ) 0&lt;j&lt;i;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> n<span class="token punctuation">;</span>    <span class="token keyword">int</span> res<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    cin<span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>    dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">//注意这里为什么要让a[0]=-1?还是说让a[0]小于某个数就行？  继续往下看</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        cin<span class="token operator">&gt;&gt;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>i<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&lt;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token comment">//这里我们第一次发现了a数组的比较  j从0开始也就发现了上面关于a[0]的问题</span>            <span class="token comment">//我们注意到a[i]任意一个数是大于等于0的而a[0]是负数  结合下面的代码我们发现其目的就是在于解决最小上升子序列的长度为1的情况</span>                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        res<span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    cout<span class="token operator">&lt;&lt;</span>res<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>题目链接：<a href="https://acm.sdut.edu.cn/onlinejudge3/problems/1299">https://acm.sdut.edu.cn/onlinejudge3/problems/1299</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C++ </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> SDUTOJ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>POJ3254（状态压缩dp）：玉米地</title>
      <link href="/posts/22809.html"/>
      <url>/posts/22809.html</url>
      
        <content type="html"><![CDATA[<h1 id="POJ3254（状态压缩dp）：玉米地"><a href="#POJ3254（状态压缩dp）：玉米地" class="headerlink" title="POJ3254（状态压缩dp）：玉米地"></a>POJ3254（状态压缩dp）：玉米地</h1><p>========================</p><p>题目如下：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220320POJ3254%EF%BC%88%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9dp%EF%BC%89%EF%BC%9A%E7%8E%89%E7%B1%B3%E5%9C%B0/1.png"></p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">Corn FieldsTime Limit: 2000MS        Memory Limit: 65536KTotal Submissions: 26638        Accepted: 13894DescriptionFarmer John has purchased a lush new rectangular pasture composed of M by N (1 ≤ M ≤ 12; 1 ≤ N ≤ 12) square parcels. He wants to grow some yummy corn for the cows on a number of squares. Regrettably, some of the squares are infertile and can't be planted. Canny FJ knows that the cows dislike eating close to each other, so when choosing which squares to plant, he avoids choosing squares that are adjacent; no two chosen squares share an edge. He has not yet made the final choice as to which squares to plant.Being a very open-minded man, Farmer John wants to consider all possible options for how to choose the squares for planting. He is so open-minded that he considers choosing no squares as a valid option! Please help Farmer John determine the number of ways he can choose the squares to plant.InputLine 1: Two space-separated integers: M and NLines 2..M+1: Line i+1 describes row i of the pasture with N space-separated integers indicating whether a square is fertile (1 for fertile, 0 for infertile)OutputLine 1: One integer: the number of ways that FJ can choose the squares modulo 100,000,000.Sample Input2 31 1 10 1 0Sample Output9HintNumber the squares as follows:1 2 3  4  There are four ways to plant only on one squares (1, 2, 3, or 4), three ways to plant on two squares (13, 14, or 34), 1 way to plant on three squares (134), and one way to plant on no squares. 4+3+1+1=9.SourceUSACO 2006 November Gold<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">//没写出来</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>心得： 这是一道比较经典的状态压缩动规题，难度高。</code></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">可以发现这个题有如下特征，规模较小，每个方格只有两种状态，可以种玉米和不可以种玉米；仍然考虑用状压dp；定义状态：定义状态dp[i][state]表示能到达第i行，且第i行的所有的种玉米和不种玉米的情况为state时的所有状态数。种玉米代表1，不种玉米代表0；分析这个状态定义，发现这个状态定义把整个问题分成了n个阶段(代表行数)，并且这n个阶段遵循无后效性；状态转移：当前阶段只受前一阶段的影响，当前阶段只能影响到后一阶段。所以状态转移就是把握住当前状态是如何影响后一阶段的。在这个题中，我们会发现：如果当前阶段的某列土地种了玉米，那么下个阶段的这列土地就不能种玉米。另外，如果当前阶段某列土地的前一列土地种了玉米，那么这一列就不能再种玉米了。需要注意的是，如果当前阶段的某一列可以种玉米，你可以有两种选择，种或不种。按一个方向求解：可以看出这个状态定义是按行数分了n个阶段，所以我们应该按照行数来进行求解，根据状态定义，结果是把最后一行的所有可达到的状态的方法数加和即可。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">mmset</span><span class="token expression"><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span> <span class="token function">memset</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span></span></span> <span class="token keyword">const</span> <span class="token keyword">int</span> INF <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">12</span> <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">;</span><span class="token keyword">int</span>   dp<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">[</span>INF<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> data<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>m<span class="token punctuation">;</span>        <span class="token comment">//行列 </span> <span class="token comment">/*2 31 1 10 1 0Sample Output9*/</span>  <span class="token comment">/*i代表当前行 j代表当前列state代表当前行(阶段)的状态 next代表下一行(阶段)的可到达状态flag代表是上一列是否种了玉米，如果种了玉米，flag =  1,否则等于0； */</span> <span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span><span class="token keyword">int</span> j<span class="token punctuation">,</span><span class="token keyword">int</span> state<span class="token punctuation">,</span><span class="token keyword">int</span> next<span class="token punctuation">,</span><span class="token keyword">int</span> flag<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">,</span><span class="token operator">&amp;</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token function">mmset</span><span class="token punctuation">(</span>dp<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//初始化 </span>        dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                    <span class="token comment">/*            遍历每个阶段的所有可达到状态，并搜索这种状态所能到达所有状态 。            这是状态转移的过程         */</span>         <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> state <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> state <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span> state<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>state<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>state<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment">/*            求解，对最后一行所有可达到的状态的方法数加和，并存在变量ans中;         */</span>         <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> state <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> state <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span> state<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>state<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                ans<span class="token operator">=</span><span class="token punctuation">(</span>ans<span class="token operator">+</span>dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>state<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">100000000</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span><span class="token keyword">int</span> j<span class="token punctuation">,</span><span class="token keyword">int</span> state<span class="token punctuation">,</span><span class="token keyword">int</span> next<span class="token punctuation">,</span><span class="token keyword">int</span> flag<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>j <span class="token operator">==</span> m<span class="token punctuation">)</span>     <span class="token punctuation">{</span>        dp<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>next<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>next<span class="token punctuation">]</span> <span class="token operator">+</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>state<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">100000000</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/*    下面这段代码有点绕，可以种玉米是指客观条件,    但种不种玉米是主观意愿。     */</span>     <span class="token keyword">else</span>    <span class="token punctuation">{</span>        <span class="token comment">//表示可以种玉米 </span>        <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>state <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> flag<span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>         <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>flag <span class="token operator">==</span> <span class="token number">0</span><span class="token operator">||</span>flag <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token comment">//不种玉米 </span>            <span class="token punctuation">{</span>                 <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>state<span class="token punctuation">,</span>next<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>flag <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token comment">//种玉米 </span>            <span class="token punctuation">{</span>                <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>state<span class="token punctuation">,</span>next <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>j<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment">//不可以种玉米 </span>        <span class="token keyword">else</span>        <span class="token punctuation">{</span>            <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>state<span class="token punctuation">,</span>next<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>题目链接：<a href="http://poj.org/problem?id=3254">http://poj.org/problem?id=3254</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C++ </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> 记忆化 </tag>
            
            <tag> POJ </tag>
            
            <tag> 状态压缩 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>POJ2411（状态压缩dp）：方格覆盖</title>
      <link href="/posts/37129.html"/>
      <url>/posts/37129.html</url>
      
        <content type="html"><![CDATA[<h1 id="POJ2411（状态压缩dp）：方格覆盖"><a href="#POJ2411（状态压缩dp）：方格覆盖" class="headerlink" title="POJ2411（状态压缩dp）：方格覆盖"></a>POJ2411（状态压缩dp）：方格覆盖</h1><p>========================</p><p>题目如下：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220320POJ2411%EF%BC%88%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9dp%EF%BC%89%EF%BC%9A%E6%96%B9%E6%A0%BC%E8%A6%86%E7%9B%96/1.png"></p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">Mondriaan's DreamTime Limit: 3000MS        Memory Limit: 65536KTotal Submissions: 27144        Accepted: 14765DescriptionSquares and rectangles fascinated the famous Dutch painter Piet Mondriaan. One night, after producing the drawings in his 'toilet series' (where he had to use his toilet paper to draw on, for all of his paper was filled with squares and rectangles), he dreamt of filling a large rectangle with small rectangles of width 2 and height 1 in varying ways.Expert as he was in this material, he saw at a glance that he'll need a computer to calculate the number of ways to fill the large rectangle whose dimensions were integer values, as well. Help him, so that his dream won't turn into a nightmare!InputThe input contains several test cases. Each test case is made up of two integer numbers: the height h and the width w of the large rectangle. Input is terminated by h=w=0. Otherwise, 1&lt;=h,w&lt;=11.OutputFor each test case, output the number of different ways the given rectangle can be filled with small rectangles of size 2 times 1. Assume the given large rectangle is oriented, i.e. count symmetrical tilings multiple times.Sample Input1 21 31 42 22 32 42 114 110 0Sample Output10123514451205SourceUlm Local 2000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">//没写出来</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>心得： 这是一道比较经典的状态压缩动规题，难度高。</code></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">这个题规模比较小，而且每个方格只有两种状态，分别是被覆盖和未被覆盖；所以我们考虑用状态压缩dp；定义状态：我们首先定义状态：dp[j][state]，表示能到达第j列，且第j列所有方格的覆盖情况为state时的所有方法数；这样我们通过这个状态把这个问题分为j个阶段(j代表列数),因为第j列放置的情况最多只能影响到j+1列。比如第j列放置一个或多个1*2的方格。这样一种情况就会影响到j+1列；但是他最多影响到第j+1列，之后就不能再影响了。这就是无后效性；无后效性是保证能动态规划的关键。状态转移：当第i列第j行状态为0时，表示没有覆盖；当为1时，说明被覆盖了；如果当前格没有被覆盖，说明我们至少可以放一个1*2的方格，如果当前列的下一行也没有被覆盖，那么我们可以放一个2*1的方格；如果被覆盖， 那么我们继续往当前列的下一行遍历 ，直到把这一列遍历完； 在这个过程中 ，我们能求出下一列的合法状态(也就是可以到达的状态)，这是一个搜索的过程，至于为什么要搜索，请看下面：我们把当前列每一种状态都进行搜索，看能不能找到从这种状态到其他状态的一种路径；如果存在，说明其他状态是可以到达的。所以我们其实并不需要对每一种状态进行搜索，只需要对可以到达的状态进行搜索即可；按一个方向求出该问题的解：当前阶段总是影响下一阶段，所以我们应该按照阶段的方向进行求解，在这个题中是按列的方向求解；题目要求全部填满，所以答案应该是dp[m+1][0];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">mmset</span><span class="token expression"><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span> <span class="token function">memset</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token keyword">const</span> <span class="token keyword">int</span> INF <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">12</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">long</span> <span class="token keyword">long</span> dp<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2100</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>m<span class="token punctuation">;</span><span class="token comment">/*1 21 31 42 22 32 42 114 110 0Sample Output10123514451205*/</span>  <span class="token comment">/*搜索从第j列的state状态开始，它能到达第j+1列的哪些状态；  i代表第i行，next代表它能到达第j+1列的next状态 */</span><span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span><span class="token keyword">int</span> j<span class="token punctuation">,</span><span class="token keyword">int</span> state<span class="token punctuation">,</span><span class="token keyword">int</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                        <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">,</span><span class="token operator">&amp;</span>m<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n<span class="token operator">+</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">&gt;</span> m<span class="token punctuation">)</span>    <span class="token comment">//交换两个变量 </span>        <span class="token punctuation">{</span>            n <span class="token operator">=</span> n <span class="token operator">^</span> m<span class="token punctuation">;</span>            m <span class="token operator">=</span> n <span class="token operator">^</span> m<span class="token punctuation">;</span>            n <span class="token operator">=</span> n <span class="token operator">^</span> m<span class="token punctuation">;</span>         <span class="token punctuation">}</span>        <span class="token function">mmset</span><span class="token punctuation">(</span>dp<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//初始化 </span>        dp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token comment">//状态转移 </span>        <span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> state <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> state <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span> state<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token comment">//对能达到的状态进行搜索，看该状态能不能达到其他状态；</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>state<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>                     <span class="token punctuation">{</span>                    <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>j<span class="token punctuation">,</span>state<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>         <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%lld\n"</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//输出答案 </span>                    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>  <span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span><span class="token keyword">int</span> j<span class="token punctuation">,</span><span class="token keyword">int</span> state<span class="token punctuation">,</span> <span class="token keyword">int</span> next<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> n<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment">/*        注意dp[i][j]代表的含义，就知道为什么        dp[j+1][next] += dp[j][state]        */</span>        dp<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>next<span class="token punctuation">]</span> <span class="token operator">+=</span> dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>state<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">return</span><span class="token punctuation">;</span>                                    <span class="token punctuation">}</span>    <span class="token keyword">else</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>state<span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> i<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token comment">//当该格子没被覆盖说明可以放一个1*2的木板 </span>        <span class="token punctuation">{</span>            <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>j<span class="token punctuation">,</span>state<span class="token punctuation">,</span>next <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">/*        当该格子没被覆盖且它下面的格子也没被覆盖         说明可以当一个2*1的木板        */</span>         <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> n <span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>state <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>state <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                                                                                    <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">,</span>j<span class="token punctuation">,</span>state<span class="token punctuation">,</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>state <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token comment">//当该格子被覆盖时，说明这个格子什么都不能放 </span>        <span class="token punctuation">{</span>            <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>j<span class="token punctuation">,</span>state<span class="token punctuation">,</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>题目链接：<a href="http://poj.org/problem?id=2411">http://poj.org/problem?id=2411</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C++ </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> 记忆化 </tag>
            
            <tag> POJ </tag>
            
            <tag> 状态压缩 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-theme-matery配置指南</title>
      <link href="/posts/63716.html"/>
      <url>/posts/63716.html</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-theme-matery配置指南"><a href="#hexo-theme-matery配置指南" class="headerlink" title="hexo-theme-matery配置指南"></a>hexo-theme-matery配置指南</h1><p><a href="README.md">🇺🇸English Document</a> | <a href="http://blinkfox.com/">国内访问示例 (http://blinkfox.com)</a> | <a href="https://blinkfox.github.io/">Github 部署演示示例 (https://blinkfox.github.io)</a> </p><p>QQ 交流群1（已满）: <a href="https://jq.qq.com/?_wv=1027&amp;k=5zMDYHT"><code>926552981</code></a> | QQ 交流群2（已满）: <a href="https://jq.qq.com/?_wv=1027&amp;k=53q2Ayp"><code>971887688</code></a> | QQ 交流群3（推荐）: <a href="https://qm.qq.com/cgi-bin/qm/qr?k=fC1-kU-_aTn4q-JQq4GsYKr4WcKdgfGa&amp;jump_from=webapi"><code>670694035</code></a></p><blockquote><p>这是一个采用 <code>Material Design</code> 和响应式设计的 Hexo 博客主题。</p></blockquote><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/">Gitalk</a>、<a href="https://imsun.github.io/gitment/">Gitment</a>、<a href="https://valine.js.org/">Valine</a> 和 <a href="https://disqus.com/">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li><li>支持 <a href="http://www.daovoice.io/">DaoVoice</a>、<a href="https://www.tidio.com/">Tidio</a> 在线聊天功能。</li></ul><h2 id="贡献者"><a href="#贡献者" class="headerlink" title="贡献者"></a>贡献者</h2><p>感谢下面列出的贡献者，没有他们，hexo-theme-matery 不会这么完美。</p><ul><li><a href="https://github.com/HarborZeng">@HarborZeng</a></li><li><a href="https://github.com/shw2018">@shw2018</a></li><li><a href="https://github.com/L1cardo">@L1cardo</a></li><li><a href="https://github.com/Five-great">@Five-great</a></li></ul><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>本主题<strong>推荐你使用 Hexo 5.0.0 及以上的版本</strong>。如果，你已经有一个自己的 <a href="https://hexo.io/zh-cn/">Hexo</a> 博客了，建议你将 Hexo 升级到最新稳定的版本。</p><p>点击 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p><p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>git clone</code> 命令来下载:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的  <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><h4 id="config-yml-文件的其它修改建议"><a href="#config-yml-文件的其它修改建议" class="headerlink" title="_config.yml 文件的其它修改建议:"></a><code>_config.yml</code> 文件的其它修改建议:</h4><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h3 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> categories<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> tags<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 18:23:38</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"about"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> about<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新建留言板-contact-页（可选的）"><a href="#新建留言板-contact-页（可选的）" class="headerlink" title="新建留言板 contact 页（可选的）"></a>新建留言板 contact 页（可选的）</h3><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"contact"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> contact<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p></blockquote><h3 id="新建友情链接-friends-页（可选的）"><a href="#新建友情链接-friends-页（可选的）" class="headerlink" title="新建友情链接 friends 页（可选的）"></a>新建友情链接 friends 页（可选的）</h3><p><code>friends</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token string">"friends"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> friends<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-12-12 21:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"码酱"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"我不是大佬，只是在追寻大佬的脚步"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://luokangyuan.com/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"闪烁之狐"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blinkfox.github.io/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/avatar.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ja_rome"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"平凡的脚步也可以走出伟大的行程"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://me.csdn.net/jlh912008548"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新建-404-页"><a href="#新建-404-页" class="headerlink" title="新建 404 页"></a>新建 404 页</h3><p>如果在你的博客 <code>source</code> 目录下还没有 <code>404.md</code> 文件，那么你就需要新建一个</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page <span class="token number">404</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/404/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token number">404</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"404"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"404"</span><span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token string">"Oops～，我崩溃了！找不到你想要的页面 :("</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="菜单导航配置"><a href="#菜单导航配置" class="headerlink" title="菜单导航配置"></a>菜单导航配置</h3><h4 id="配置基本菜单导航的名称、路径url和图标icon"><a href="#配置基本菜单导航的名称、路径url和图标icon" class="headerlink" title="配置基本菜单导航的名称、路径url和图标icon."></a>配置基本菜单导航的名称、路径url和图标icon.</h4><p>1.菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>)<br>2.图标icon 可以在<a href="https://fontawesome.com/icons">Font Awesome</a> 中查找   </p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="二级菜单配置方法"><a href="#二级菜单配置方法" class="headerlink" title="二级菜单配置方法"></a>二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作</p><ol><li>在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)     </li><li>在<code>children</code>下创建二级菜单的 名称name,路径url和图标icon.      </li><li>注意每个二级菜单模块前要加 <code>-</code>.     </li><li>注意缩进格式  </li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle<span class="token punctuation">-</span>o  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book  <span class="token key atrule">Medias</span><span class="token punctuation">:</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>list    <span class="token key atrule">children</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Music        <span class="token key atrule">url</span><span class="token punctuation">:</span> /music        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>music      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Movies        <span class="token key atrule">url</span><span class="token punctuation">:</span> /movies        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>film      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Books        <span class="token key atrule">url</span><span class="token punctuation">:</span> /books        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>book      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Galleries        <span class="token key atrule">url</span><span class="token punctuation">:</span> /galleries        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>从 Hexo5.0 版本开始自带了 <code>prismjs</code> 代码语法高亮的支持，本主题对此进行了改造支持。</p><p>如果你的博客中曾经安装过 <code>hexo-prism-plugin</code> 的插件，那么你须要执行 <code>npm uninstall hexo-prism-plugin</code> 来卸载掉它，否则生成的代码中会有 <code>&amp;#123;</code> 和 <code>&amp;#125;</code> 的转义字符。</p><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并将 <code>prismjs.enable</code> 的值设置为 <code>true</code>，主要配置如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">auto_detect</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span>  <span class="token key atrule">wrap</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">hljs</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prismjs</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">preprocess</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>主题中默认的 <code>prismjs</code> 主题是 <code>Tomorrow Night</code>，如果你想定制自己的主题，可以前往 <a href="https://prismjs.com/download.html">prismjs 下载页面</a> 定制下载自己喜欢的主题 <code>css</code> 文件，然后将此 css 主题文件取名为 <code>prism.css</code>，替换掉 <code>hexo-theme-matery</code> 主题文件夹中的 <code>source/libs/prism/prism.css</code> 文件即可。</p><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="中文链接转拼音（建议安装）"><a href="#中文链接转拼音（建议安装）" class="headerlink" title="中文链接转拼音（建议安装）"></a>中文链接转拼音（建议安装）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment"># default: '-'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3 id="文章字数统计插件（建议安装）"><a href="#文章字数统计插件（建议安装）" class="headerlink" title="文章字数统计插件（建议安装）"></a>文章字数统计插件（建议安装）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">postInfo</span><span class="token punctuation">:</span>  <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 设置文章字数统计为 true.</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 设置站点文章总字数统计为 true.</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 阅读时长.</span>  <span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 阅读次数.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="添加emoji表情支持（可选的）"><a href="#添加emoji表情支持（可选的）" class="headerlink" title="添加emoji表情支持（可选的）"></a>添加emoji表情支持（可选的）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  customEmojis<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。</p><h3 id="添加-RSS-订阅支持（可选的）"><a href="#添加-RSS-订阅支持（可选的）" class="headerlink" title="添加 RSS 订阅支持（可选的）"></a>添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="添加-DaoVoice-在线聊天功能（可选的）"><a href="#添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="添加 DaoVoice 在线聊天功能（可选的）"></a>添加 <a href="http://www.daovoice.io/">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href="http://www.daovoice.io/">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="添加-Tidio-在线聊天功能（可选的）"><a href="#添加-Tidio-在线聊天功能（可选的）" class="headerlink" title="添加 Tidio 在线聊天功能（可选的）"></a>添加 <a href="https://www.tidio.com/">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href="https://www.tidio.com/">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;% if (theme.socialLink.github) { %&gt;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&lt;%= theme.socialLink.github %&gt;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tooltipped<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">data-tooltip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>访问我的GitHub<span class="token punctuation">"</span></span> <span class="token attr-name">data-position</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-delay</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fab fa-github<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>&lt;% } %&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: <code>fab fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><blockquote><p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>5.11.0</code>。</p></blockquote><h3 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="配置音乐播放器（可选的）"><a href="#配置音乐播放器（可选的）" class="headerlink" title="配置音乐播放器（可选的）"></a>配置音乐播放器（可选的）</h3><p>要支持音乐播放，在主题的 <code>_config.yml</code> 配置文件中激活music配置即可：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 是否在首页显示音乐</span><span class="token key atrule">music</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span>             <span class="token comment"># 非吸底模式有效</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> 听听音乐  <span class="token key atrule">server</span><span class="token punctuation">:</span> netease   <span class="token comment"># require music platform: netease, tencent, kugou, xiami, baidu</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> playlist    <span class="token comment"># require song, playlist, album, search, artist</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">503838841</span>     <span class="token comment"># require song id / playlist id / album id / search keyword</span>  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>      <span class="token comment"># 开启吸底模式</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>   <span class="token comment"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span>       <span class="token comment"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'random'</span>   <span class="token comment"># 音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span>   <span class="token comment"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7</span>       <span class="token comment"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 列表默认折叠</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>server</code>可选<code>netease</code>（网易云音乐），<code>tencent</code>（QQ音乐），<code>kugou</code>（酷狗音乐），<code>xiami</code>（虾米音乐），</p><p><code>baidu</code>（百度音乐）。</p><p><code>type</code>可选<code>song</code>（歌曲），<code>playlist</code>（歌单），<code>album</code>（专辑），<code>search</code>（搜索关键字），<code>artist</code>（歌手）</p><p><code>id</code>获取方法示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，浏览器地址栏后面会有一串数字，<code>playlist</code>的<code>id</code></p><p>即为这串数字。</p></blockquote><h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>hide</td><td><code>false</code></td><td>隐藏文章，如果<code>hide</code>值为<code>true</code>，则文章不会在首页显示</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 赵奇<span class="token key atrule">img</span><span class="token punctuation">:</span> /source/images/xxx.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">hide</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /images/1.jpg<span class="token key atrule">password</span><span class="token punctuation">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92<span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要<span class="token key atrule">categories</span><span class="token punctuation">:</span> Markdown<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Typora  <span class="token punctuation">-</span> Markdown<span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="自定制修改"><a href="#自定制修改" class="headerlink" title="自定制修改"></a>自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul><p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h3 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span><span class="token selector">.bg-color</span> <span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #4cbf30 0%<span class="token punctuation">,</span> #0f9d58 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rainbow</span> <span class="token punctuation">{</span>   <span class="token comment">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@keyframes</span> rainbow</span> <span class="token punctuation">{</span>    <span class="token comment">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url(/medias/banner/'</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><h2 id="版本变更记录"><a href="#版本变更记录" class="headerlink" title="版本变更记录"></a>版本变更记录</h2><p>参见 <a href="https://github.com/blinkfox/hexo-theme-matery/blob/master/CHANGELOG.md">CHANGELOG.md</a></p>]]></content>
      
      
      <categories>
          
          <category> 脚本语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博文 </tag>
            
            <tag> hexo </tag>
            
            <tag> 配置指南 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-theme-fluid配置指南</title>
      <link href="/posts/63715.html"/>
      <url>/posts/63715.html</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-theme-fluid配置指南"><a href="#hexo-theme-fluid配置指南" class="headerlink" title="hexo-theme-fluid配置指南"></a>hexo-theme-fluid配置指南</h1><h2 id="主题简介"><a href="#主题简介" class="headerlink" title="主题简介"></a>主题简介</h2><p>Fluid 是基于 Hexo 的一款 Material Design 风格的主题，由 <a href="https://github.com/fluid-dev">Fluid-dev</a> 负责开发与维护。</p><p>主题 GitHub: <a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></p><p>预览网站：<a href="https://hexo.fluid-dev.com/">Fluid’s blog</a>    <a href="https://zkqiang.cn/">zkqiang’s blog</a></p><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><h3 id="搭建-Hexo-博客"><a href="#搭建-Hexo-博客" class="headerlink" title="搭建 Hexo 博客"></a>搭建 Hexo 博客</h3><p>如果你还没有 Hexo 博客，请按照 <a href="https://hexo.io/zh-cn/docs/">Hexo 官方文档</a> 进行安装、建站。</p><h3 id="获取最新版本"><a href="#获取最新版本" class="headerlink" title="获取最新版本"></a>获取最新版本</h3><h4 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h4><p>Hexo 5.0.0 版本以上，推荐通过 npm 直接安装，进入博客目录执行命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save hexo-theme-fluid<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在博客目录下创建 <code>_config.fluid.yml</code>，将主题的 <a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">_config.yml</a> 内容复制过去。</p><h4 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h4><p>下载 <a href="https://github.com/fluid-dev/hexo-theme-fluid/releases">最新 release 版本</a> 解压到 themes 目录，并将解压出的文件夹重命名为 <code>fluid</code>。</p><h3 id="指定主题"><a href="#指定主题" class="headerlink" title="指定主题"></a>指定主题</h3><p>如下修改 Hexo 博客目录中的 <code>_config.yml</code>：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">theme</span><span class="token punctuation">:</span> fluid  <span class="token comment"># 指定主题</span><span class="token key atrule">language</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN  <span class="token comment"># 指定语言，会影响主题显示的语言，按需修改</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="创建「关于页」"><a href="#创建「关于页」" class="headerlink" title="创建「关于页」"></a>创建「关于页」</h3><p>首次使用主题的「关于页」需要手动创建：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page about<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>创建成功后修改 <code>/source/about/index.md</code>，添加 <code>layout</code> 属性。</p><p>修改后的文件示例如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 标题<span class="token key atrule">layout</span><span class="token punctuation">:</span> about<span class="token punctuation">---</span>这里写关于页的正文，支持 Markdown<span class="token punctuation">,</span> HTML<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>:::warning<br><code>layout: about</code> 必须存在，并且不能修改成其他值，否则不会显示头像等样式。<br>:::</p><h2 id="更新主题"><a href="#更新主题" class="headerlink" title="更新主题"></a>更新主题</h2><h4 id="方式一-1"><a href="#方式一-1" class="headerlink" title="方式一"></a>方式一</h4><blockquote><p>适用于通过 Npm 安装主题。</p></blockquote><p>在博客目录下执行命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> update --save hexo-theme-fluid<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="方式二-1"><a href="#方式二-1" class="headerlink" title="方式二"></a>方式二</h4><blockquote><p>适用于通过 Release 压缩包安装主题，且没有自行修改任何代码的情况。</p></blockquote><ol><li><p>先将原文件夹重命名为别的名称，例如 <code>fluid-bkp</code>，用于升级失败进行回退；</p></li><li><p>按照安装步骤，重新下载 <a href="https://github.com/fluid-dev/hexo-theme-fluid/releases">release</a> 并解压重命名为 <code>fluid</code>；</p></li><li><p>如果某些配置发生了变化（改名或弃用），release 的说明里会特别提示，同步修改原配置文件即可。 </p></li></ol><h4 id="方式三"><a href="#方式三" class="headerlink" title="方式三"></a>方式三</h4><blockquote><p>适用于自定义了一些代码，或想体验其他分支的情况，以 dev 分支为例。</p></blockquote><ol><li><p>确定自己的 fluid 目录已经开启 git，并且所有改动都已 commit；</p></li><li><p>把 fluid 仓库的 develop 分支拉取到自己当前的分支上（也可新建一个分支再拉取）：</p></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> pull https://github.com/fluid-dev/hexo-theme-fluid.git develop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>解决代码冲突，保留自己修改的部分（如何解决冲突可自行搜索）。</li></ol><h2 id="版本号释义"><a href="#版本号释义" class="headerlink" title="版本号释义"></a>版本号释义</h2><p>本项目的版本号为 <code>X.Y.Z</code> 格式，但与常见的<a href="https://semver.org/lang/zh-CN/">语义化版本号</a>规范有部分区别，具体释义如下：</p><ul><li><code>X</code>: 产品层面的重新设计，包含重大框架重构，会涉及大范围功能变更与配置变更，更新前必须阅读相关文档</li><li><code>Y</code>: 包含中大型新功能，及无法向下兼容的功能变更与配置变更，更新该版本号可能会需要修改配置或者移除一些原功能</li><li><code>Z</code>: 不仅包含 BUG 修复、小型新功能，还会包含可以向下兼容的原功能更新与配置变更，原则上更新该版本号无需额外动作</li></ul><h2 id="开源协议"><a href="#开源协议" class="headerlink" title="开源协议"></a>开源协议</h2><p><a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/LICENSE">GPL-V3</a></p><h2 id="关于指南"><a href="#关于指南" class="headerlink" title="关于指南"></a>关于指南</h2><p>:::tip<br>致主题的新用户：</p><ul><li><p>本指南经过数个版本打磨，绝大部分的功能都有详细说明，请仔细阅读，节约自己和他人的时间；</p></li><li><p>本指南中提到的：”<strong>博客配置</strong>“ 指的 Hexo 博客目录下的 <code>_config.yml</code>，”<strong>主题配置</strong>“ 指的是 <code>theme/fluid/_config.yml</code> 或者 <code>_config.fluid.yml</code> ，注意区分；</p></li><li><p>本指南中提到的 <code>source</code> 目录都指的是博客目录下的 <code>source</code> 文件夹，不推荐修改主题内 <code>source</code> 目录；</p></li><li><p>每次无论 <code>hexo g</code> 或 <code>hexo s</code>，都最好先使用 <code>hexo clean</code> 清除本地缓存；</p></li><li><p>页面结果以本地 <code>hexo s</code> 为准，部署后的异常大部分是线上缓存原因，在确认没有报错的情况下，等待若干时间后即可正常；</p></li><li><p>由于主题的不同版本会存在配置差异，本指南以最新版本为准。<br>:::</p></li></ul><p>本指南不包括所有的配置说明，几乎每个配置在<strong>主题配置</strong>中都有注释，可配合指南共同参考使用。</p><p>另外本指南仅包含主题范围内的使用说明，如果是 Hexo 的使用或者 Hexo 插件的使用，请查阅各自的文档。</p><p>若存在其他主题相关的疑问请在 <a href="https://github.com/fluid-dev/hexo-theme-fluid/issues/new">issues</a> 留言。</p><h2 id="全局"><a href="#全局" class="headerlink" title="全局"></a>全局</h2><h3 id="覆盖配置"><a href="#覆盖配置" class="headerlink" title="覆盖配置"></a>覆盖配置</h3><p>:::tip<br>覆盖配置可以使<strong>主题配置</strong>放置在 fluid 目录之外，避免在更新主题时丢失自定义的配置。</p><p>通过 Npm 安装主题的用户可忽略，其他用户建议学习使用。<br>:::</p><p>Hexo 5.0.0 版本以上的用户，在博客目录下创建 <code>_config.fluid.yml</code> 文件，将主题的 <a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">_config.yml</a> 全部配置（或部分配置）复制过去。</p><p>以后如果修改任何主题配置，都只需修改 <code>_config.fluid.yml</code> 的配置即可。</p><p>注意：</p><ul><li>只要存在于 <code>_config.fluid.yml</code> 的配置都是高优先级，修改原 <code>_config.yml</code> 是无效的。</li><li>每次更新主题可能存在配置变更，请注意更新说明，可能需要手动对 <code>_config.fluid.yml</code> 同步修改。</li><li>想查看覆盖配置有没有生效，可以通过 <code>hexo g --debug</code> 查看命令行输出。</li><li>如果想将某些配置覆盖为空，注意不要把主键删掉，不然是无法覆盖的，比如：</li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">about</span><span class="token punctuation">:</span>  <span class="token key atrule">icons</span><span class="token punctuation">:</span>  <span class="token comment"># 不要把 icon 注释掉，否则无法覆盖配置</span>    <span class="token comment"># - { class: 'iconfont icon-github-fill', link: 'https://github.com' }</span>    <span class="token comment"># - { class: 'iconfont icon-wechat-fill', qrcode: '/img/favicon.png' }</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><details>  <summary>Hexo 低于 5.0.0 版本点击这里</summary><p>必须确保 Hexo 版本不低于 3.0.0，使用方式：</p><ol><li>进入博客目录的 <code>source/_data</code> 目录（如不存在则创建）；</li><li>在 <code>_data</code> 文件夹下创建 <code>fluid_config.yml</code> 文件，将主题的 <a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">_config.yml</a> 全部配置（或部分配置）复制到 <code>fluid_config.yml</code> 中；</li><li>以后配置都在 <code>fluid_config.yml</code> 中修改，配置会在 <code>hexo g</code> 时自动覆盖。</li></ol></details><h3 id="静态资源"><a href="#静态资源" class="headerlink" title="静态资源"></a>静态资源</h3><p>所有静态资源文件的 Url 可以通过<strong>主题配置</strong>中的 <code>static_prefix</code> 配置项修改。</p><p>比如需要指定公共 CDN 的 JQuery 库，只需将原配置改为：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">static_prefix</span><span class="token punctuation">:</span>  <span class="token comment"># ...</span>  <span class="token key atrule">jquery</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h3><ul><li><p>已集成 hexo-generator-search 插件，若已安装其他搜索插件请关闭，以避免生成多余的索引文件。</p></li><li><p>默认在根目录生成并使用 <code>local-search.xml</code>。</p></li></ul><h3 id="页面顶部大图"><a href="#页面顶部大图" class="headerlink" title="页面顶部大图"></a>页面顶部大图</h3><ul><li>图片来源</li></ul><p>主题配置中，每个页面都有名为 <code>banner_img</code> 的属性，可以使用本地图片的相对路径，也可以为外站链接，比如：</p><p>指向本地图片：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">banner_img</span><span class="token punctuation">:</span> /img/bg/example.jpg   <span class="token comment"># 对应存放在 /source/img/bg/example.jpg</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>指向外站链接：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">banner_img</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//static.zkqiang.cn/example.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>:::tip<br>如果是本地图片，目录文件夹可自定义，但必须在 source 目录下，博客与主题的 source 目录最终会合并，因此优先选择博客的 source。</p><p>图片大小建议压缩到 1MB 以内，否则会严重拖慢页面加载。<br>:::</p><ul><li>高度</li></ul><p>鉴于每个人的喜好不同，开放对页面 <code>banner_img</code> 高度的控制。</p><p><strong>主题配置</strong>中，每个页面对应的 <code>banner_img_height</code> 属性，有效值为 0 - 100。100 即为全屏，个人建议 70 以上。</p><ul><li>蒙版透明度</li></ul><p><strong>主题配置</strong>中，每个页面对应的 <code>banner_mask_alpha</code> 属性，有效值为 0 - 1.0， 0 是完全透明（无蒙版），1 是完全不透明</p><p>::: tip<br>每篇文章可单独设置 Banner，具体见文章页设置</p><p>本主题不支持固定背景（fixed），原因：</p><ol><li>与目前代码结构有较大冲突，需要大量修改</li><li><code>fixed</code> 在移动端兼容性很差<br>:::</li></ol><h3 id="博客标题"><a href="#博客标题" class="headerlink" title="博客标题"></a>博客标题</h3><p>页面左上角的博客标题，默认使用<strong>博客配置</strong>中的 <code>title</code>，这个配置同时控制着网页在浏览器标签中的标题。</p><p>如需单独区别设置，可在<strong>主题配置</strong>中设置：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">navbar</span><span class="token punctuation">:</span>  <span class="token key atrule">blog_title</span><span class="token punctuation">:</span> 博客标题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="导航菜单"><a href="#导航菜单" class="headerlink" title="导航菜单"></a>导航菜单</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">navbar</span><span class="token punctuation">:</span>  <span class="token key atrule">menu</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">'home'</span><span class="token punctuation">,</span> <span class="token key atrule">link</span><span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token key atrule">icon</span><span class="token punctuation">:</span> <span class="token string">'iconfont icon-home-fill'</span> <span class="token punctuation">}</span>    <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">'tag'</span><span class="token punctuation">,</span> <span class="token key atrule">link</span><span class="token punctuation">:</span> <span class="token string">'/tags/'</span><span class="token punctuation">,</span> <span class="token key atrule">icon</span><span class="token punctuation">:</span> <span class="token string">'iconfont icon-tags-fill'</span> <span class="token punctuation">}</span>    <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">'about'</span><span class="token punctuation">,</span> <span class="token key atrule">link</span><span class="token punctuation">:</span> <span class="token string">'/about/'</span><span class="token punctuation">,</span> <span class="token key atrule">icon</span><span class="token punctuation">:</span> <span class="token string">'iconfont icon-user-fill'</span><span class="token punctuation">,</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">'联系我'</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>key</code>: 用于关联有<a href="/guide/#%E8%AF%AD%E8%A8%80%E9%85%8D%E7%BD%AE">语言配置</a>，如不存在关联则显示 key 本身的值</li><li><code>link</code>: 跳转链接</li><li><code>icon</code>: 图标的 css class，可以省略（即没有图标），主题内置图标详见<a href="/icon/">这里</a></li><li><code>name</code>: 强制使用此名称显示（不再按语言配置显示），可省略</li></ul><p>另外支持二级菜单（下拉菜单），配置写法如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token punctuation">{</span>      <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">'文档'</span><span class="token punctuation">,</span>      <span class="token key atrule">icon</span><span class="token punctuation">:</span> <span class="token string">'iconfont icon-books'</span><span class="token punctuation">,</span>      <span class="token key atrule">submenu</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">'主题博客'</span><span class="token punctuation">,</span> <span class="token key atrule">link</span><span class="token punctuation">:</span> <span class="token string">'https://hexo.fluid-dev.com/'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">'配置指南'</span><span class="token punctuation">,</span> <span class="token key atrule">link</span><span class="token punctuation">:</span> <span class="token string">'https://hexo.fluid-dev.com/docs/guide/'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">'图标用法'</span><span class="token punctuation">,</span> <span class="token key atrule">link</span><span class="token punctuation">:</span> <span class="token string">'https://hexo.fluid-dev.com/docs/icon/'</span> <span class="token punctuation">}</span>      <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="懒加载"><a href="#懒加载" class="headerlink" title="懒加载"></a>懒加载</h3><p>懒加载又称延迟加载。开启后，当图片或评论插件滚动到可见范围内才会加载，可以大幅提高打开网页的速度。</p><p>该功能默认开启，可以在<strong>主题配置</strong>中修改参数：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">lazyload</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">loading_img</span><span class="token punctuation">:</span> /img/loading.gif  <span class="token key atrule">onlypost</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">offset_factor</span><span class="token punctuation">:</span> <span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>loading_img</code>: 指定加载时的占位图片</p><p><code>onlypost</code>: 为 true 时，懒加载仅在文章页生效，如果自定义页面需要使用，可以在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 里指定 <code>lazyload: true</code></p><p><code>offset_factor</code>: 触发加载的偏移倍数，基数是视窗高度（即提前 N 屏高度触发加载），可根据部署环境的请求速度调节</p><h3 id="全局字体"><a href="#全局字体" class="headerlink" title="全局字体"></a>全局字体</h3><p>所有页面统一字体的字号和字族可以通过<strong>主题配置</strong>中的下列配置项设置：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">font</span><span class="token punctuation">:</span>  <span class="token comment"># 主题字体配置</span>  <span class="token key atrule">font_size</span><span class="token punctuation">:</span> 16px        <span class="token comment"># 全局字号</span>  <span class="token key atrule">font_family</span><span class="token punctuation">:</span>           <span class="token comment"># 全局字体族</span>  <span class="token key atrule">code_font_size</span><span class="token punctuation">:</span> 85%    <span class="token comment"># 代码的字号</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>关于字体族（<code>font-family</code>）如果不了解可以看<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/font-family">这篇文章</a>先了解一下。</p><p>需要注意：</p><ul><li>最好使用系统自带的字体，否则需要通过<a href="/guide/#%E8%87%AA%E5%AE%9A%E4%B9%89-js-css-html">自定义功能</a>额外引入 <code>@font-face</code>，字体一般较大，不建议引入；</li><li>应当至少添加一个通用的字体族名（如 serif，具体见上方链接文章）。</li></ul><p>如果想设置单独的页面，可以直接在 markdown 里通过 style 标签实现：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">---title: example---<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">  <span class="token comment">/* 设置整个页面的字体 */</span>  <span class="token selector">html, body, .markdown-body</span> <span class="token punctuation">{</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> KaiTi<span class="token punctuation">,</span><span class="token string">"Microsoft YaHei"</span><span class="token punctuation">,</span>Georgia<span class="token punctuation">,</span> sans<span class="token punctuation">,</span> serif<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment">/* 只设置 markdown 字体 */</span>  <span class="token selector">.markdown-body</span> <span class="token punctuation">{</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> KaiTi<span class="token punctuation">,</span><span class="token string">"Microsoft YaHei"</span><span class="token punctuation">,</span>Georgia<span class="token punctuation">,</span> sans<span class="token punctuation">,</span> serif<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>  <span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="网页统计"><a href="#网页统计" class="headerlink" title="网页统计"></a>网页统计</h3><p>目前支持多种统计网站，开启后按需填入 Key 或 ID 即可。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">web_analytics</span><span class="token punctuation">:</span>  <span class="token comment"># 网页访问统计</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 默认为false，启用网页统计改为true即可</span>  <span class="token key atrule">baidu</span><span class="token punctuation">:</span>  <span class="token comment"># 百度统计的Key，参见 https://tongji.baidu.com/sc-web/10000033910/home/site/getjs?siteId=13751376 代码获取中 hm.js? 后边的字符串</span>  <span class="token key atrule">google</span><span class="token punctuation">:</span>  <span class="token comment"># Google统计的Tracking ID，参见 https://analytics.google.com/analytics/web/</span>  <span class="token key atrule">tencent</span><span class="token punctuation">:</span>  <span class="token comment"># 腾讯统计的H5 App id，参见 https://mta.qq.com/h5/manage/ctr_app_manage (开启高级功能才有cid)</span>    <span class="token key atrule">sid</span><span class="token punctuation">:</span>    <span class="token key atrule">cid</span><span class="token punctuation">:</span>  <span class="token key atrule">woyaola</span><span class="token punctuation">:</span>  <span class="token comment"># 51.la站点统计ID，参见 https://www.51.la/user/site/index</span>  <span class="token key atrule">cnzz</span><span class="token punctuation">:</span>  <span class="token comment"># 友盟/cnzz站点统计web_id，参见 https://web.umeng.com/main.php?c=site&amp;a=show</span>  <span class="token key atrule">leancloud</span><span class="token punctuation">:</span>  <span class="token comment"># LeanCloud 计数统计，可用于 PV UV 展示，如果 web_analytics.enable 没有开启，PV UV 展示只会查询，不会增加</span>    <span class="token key atrule">app_id</span><span class="token punctuation">:</span>    <span class="token key atrule">app_key</span><span class="token punctuation">:</span>    <span class="token key atrule">server_url</span><span class="token punctuation">:</span>  <span class="token comment"># REST API 服务器地址，国际版不填</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="展示-PV-与-UV-统计"><a href="#展示-PV-与-UV-统计" class="headerlink" title="展示 PV 与 UV 统计"></a>展示 PV 与 UV 统计</h3><p>页脚可以展示 PV 与 UV 统计数据，目前支持两种数据来源：<a href="https://www.leancloud.cn/">LeanCloud</a> 与 <a href="http://busuanzi.ibruce.info/">不蒜子</a>。</p><p>相关<strong>主题配置</strong>如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">footer</span><span class="token punctuation">:</span>  <span class="token key atrule">statistics</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">source</span><span class="token punctuation">:</span> <span class="token string">"busuanzi"</span>  <span class="token comment"># 可选 leancloud | busuanzi  根据自己需求选择</span>    <span class="token key atrule">pv_format</span><span class="token punctuation">:</span> <span class="token string">"总访问量 {} 次"</span>  <span class="token comment"># 显示的文本，{}是数字的占位符（必须包含)，下同</span>    <span class="token key atrule">uv_format</span><span class="token punctuation">:</span> <span class="token string">"总访客数 {} 人"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>:::tip<br>不蒜子不需要申请账号，直接开启即可，但有时候会响应缓慢拖慢整个页面加载。</p><p>不蒜子在 localhost 域名下显示的不是真正的数据，因此无需在意。</p><p>LeanCloud 使用前需要申请账号（国内需要身份认证），然后在 <code>web_analytics</code> 配置项中将 <code>leancloud</code> API 相关参数填上才能生效。</p><p>LeanCloud 在 localhost 域名下不会增加数据。</p><p>如果参数填写错误或者接口异常，不会显示数据，请在浏览器控制台排查具体原因。<br>:::</p><h3 id="语言配置"><a href="#语言配置" class="headerlink" title="语言配置"></a>语言配置</h3><p>不同语言会影响一些主题自带的文字。</p><p>设置语言是在<strong>博客配置</strong>中，需要对应 <code>fluid/languages/</code> 目录内的配置文件名:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">language</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>你可以在主题 <a href="https://github.com/fluid-dev/hexo-theme-fluid/tree/master/languages">languages</a> 目录里查看支持哪些语言，只要上面的配置的值和文件名相同即可。</p><p>:::warning</p><p>下面的覆盖配置功能需要 Fluid 1.9.0-beta 版本</p><p>:::</p><p>你也可以使用类似于覆盖配置的方式去自定义语言，可按如下操作：</p><ol><li>进入博客目录的 <code>source/_data</code> 目录（如不存在则创建），创建 <code>languages</code> 文件夹；</li><li>在 <code>_languages</code> 文件夹下创建 <code>xxx.yml</code> 文件（<code>xxx</code> 替换为对应语言的代码，例如 <code>zh-CN</code>）</li><li>主题 <a href="https://github.com/fluid-dev/hexo-theme-fluid/tree/master/languages">languages</a> 目录下对应语言的配置内容复制到 <code>xxx.yml</code> 中；</li><li>以后配置都在 <code>xxx.yml</code> 中修改，配置会在 <code>hexo g</code> 时自动覆盖。</li></ol><p>当然你可以按这个方法创建一份其他语言的配置。</p><h3 id="强制全局-HTTPS"><a href="#强制全局-HTTPS" class="headerlink" title="强制全局 HTTPS"></a>强制全局 HTTPS</h3><p>当你的域名升级到 HTTPS 后，可能之前存在部分图片等资源使用的是 HTTP，这时混用出现网页报错，造成图片无法显示。</p><p>控制台里也会出现报错：<code>Mixed Content: The page at 'https://xxx' was loaded over HTTPS</code>。</p><p>这种情况可以在<strong>主题配置</strong>中开启此配置：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">force_https</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可将所有请求强制升级为 HTTPS（如是外部资源，需要本身支持 HTTPS）。</p><h3 id="二级站点路径"><a href="#二级站点路径" class="headerlink" title="二级站点路径"></a>二级站点路径</h3><p>如果你的博客部署在二级路径（如: xxx.com/blog/），需要修改<strong>博客配置</strong>中：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//xxx.com/blog<span class="token key atrule">root</span><span class="token punctuation">:</span> /blog/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="自定义-JS-CSS-HTML"><a href="#自定义-JS-CSS-HTML" class="headerlink" title="自定义 JS / CSS / HTML"></a>自定义 JS / CSS / HTML</h3><p>如果你想引入外部的 JS、CSS（比如 IconFont）或 HTML，可以通过以下<strong>主题配置</strong>，具体见注释：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 指定自定义 js 文件路径，路径是相对 source 目录</span><span class="token key atrule">custom_js</span><span class="token punctuation">:</span> /js/custom.js<span class="token comment"># 指定自定义 css 文件路径，路径是相对 source 目录</span><span class="token key atrule">custom_css</span><span class="token punctuation">:</span> /css/custom.css<span class="token comment"># 自定义 &lt;head&gt; 节点中的 HTML 内容</span><span class="token key atrule">custom_head</span><span class="token punctuation">:</span> <span class="token string">'&lt;meta name="key" content="value"&gt;'</span><span class="token comment"># 自定义底部 HTML 内容（位于 footer 上方），也可用于外部引入 js css 这些操作，注意不要和 post.custom 配置冲突</span><span class="token key atrule">custom_html</span><span class="token punctuation">:</span> <span class="token string">'&lt;link rel="stylesheet" href="//at.alicdn.com/t/font_1067060_qzomjdt8bmp.css"&gt;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>另外 <code>custom_js</code> 和 <code>custom_css</code> 都可以指定多个路径：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">custom_css</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> /css/custom.css  <span class="token punctuation">-</span> //at.alicdn.com/t/font_1736178_ijqayz9ro8k.css<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="暗色模式"><a href="#暗色模式" class="headerlink" title="暗色模式"></a>暗色模式</h3><p>主题暗色模式，开启后菜单中会出现切换按钮</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">dark_mode</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">default</span><span class="token punctuation">:</span> auto<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><code>default</code> 是暗色默认的模式，可选参数：auto / light / dark</p><p>选择 auto 时优先遵循 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/@media/prefers-color-scheme">prefers-color-scheme</a>，如果不支持则按用户本地时间 18 点到次日 6 点之间进入暗色模式。</p><p>无论选择任何模式，当用户手动切换后会在用户本地保存选项，该用户不再按照默认模式。</p><h3 id="OpenGraph"><a href="#OpenGraph" class="headerlink" title="OpenGraph"></a>OpenGraph</h3><p><a href="https://ogp.me/">OpenGraph</a> 是 Facebook 发布的一套网页元信息标记协议，可以让任何页面成为社交平台中的富媒体标签。</p><p>本主题基于 <a href="https://hexo.io/docs/helpers.html#open-graph">Hexo 内置方法</a>实现了该功能，并且默认开启，但如果想在 Facebook 等平台更好地使用，需要在<strong>主题配置</strong>完善如下配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">open_graph</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">twitter_card</span><span class="token punctuation">:</span> summary_large_image  <span class="token key atrule">twitter_id</span><span class="token punctuation">:</span>  <span class="token key atrule">twitter_site</span><span class="token punctuation">:</span>  <span class="token key atrule">google_plus</span><span class="token punctuation">:</span>  <span class="token key atrule">fb_admins</span><span class="token punctuation">:</span>  fb_app_id<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>另外你可以在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 设置字段来指定单个页面的 OpenGraph 属性：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">og_img</span><span class="token punctuation">:</span> /img/og.png<span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="首页"><a href="#首页" class="headerlink" title="首页"></a>首页</h2><h3 id="Slogan-打字机"><a href="#Slogan-打字机" class="headerlink" title="Slogan(打字机)"></a>Slogan(打字机)</h3><p>首页大图中的标题文字，可在<strong>主题配置</strong>中设定是否开启：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">index</span><span class="token punctuation">:</span>  <span class="token key atrule">slogan</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">text</span><span class="token punctuation">:</span> 这是一条 Slogan    <span class="token key atrule">api</span><span class="token punctuation">:</span>      <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>      <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">"https://v1.hitokoto.cn/"</span>      <span class="token key atrule">method</span><span class="token punctuation">:</span> <span class="token string">"GET"</span>      <span class="token key atrule">headers</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>      <span class="token key atrule">keys</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"hitokoto"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果 <code>text</code> 为空则按<strong>博客配置</strong>的 <code>subtitle</code> 显示。</p><p>另外支持通过 API 接口获取内容，如果请求失败则按 text 字段显示：</p><p><code>url</code>: API 地址，必须返回的是一个 JSON 格式</p><p><code>method</code>: 请求方法，可选 <code>GET</code>、<code>POST</code>、<code>PUT</code></p><p><code>headers</code>: 请求头，如果接口需要传一些验证的头部信息，在这里设置</p><p><code>keys</code>: 从请求结果获取字符串的取值字段，程序会根据列表中的字段依次取值，最终需要获得到一个字符串</p><p>例如 API 返回的内容为：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span>    <span class="token punctuation">{</span>        <span class="token property">"data"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">"Fluid"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token string">"An elegant theme"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        <span class="token property">"data"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">"Test"</span><span class="token punctuation">,</span>            <span class="token property">"content"</span><span class="token operator">:</span> <span class="token string">"Test content"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>设置 <code>keys: ["data", "content"]</code>，程序会如下执行：</p><ol><li>由于返回体是列表，程序会首先获取第一个元素（不是列表则跳过此步骤）</li><li>通过第一个 key <code>data</code> 获取值，发现不是一个字符串，继续执行</li><li>通过第二个 key <code>content</code> 获取值，发现是一个字符串，返回内容；如果不是字符串则获取失败，使用 text 值</li></ol><p>:::warning<br>如果 API 没有请求成功，请打开浏览器的控制台（console）检查是否报错，其中如果有包含 <code>No Access-Control-Allow-Origin header</code> 的报错，说明该 API 有跨域限制，这必须从 API 后端服务来解决。<br>:::</p><p>标题文字默认开启了打字机动效，相关配置如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">fun_features</span><span class="token punctuation">:</span>  <span class="token key atrule">typing</span><span class="token punctuation">:</span> <span class="token comment"># 为 subtitle 添加打字机效果</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">typeSpeed</span><span class="token punctuation">:</span> <span class="token number">70</span> <span class="token comment"># 打印速度</span>    <span class="token key atrule">cursorChar</span><span class="token punctuation">:</span> <span class="token string">"_"</span> <span class="token comment"># 游标字符</span>    <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 是否循环播放效果</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>:::tip<br>请求 API 的功能必须同时开启打字机动效才能生效<br>:::</p><h3 id="文章摘要"><a href="#文章摘要" class="headerlink" title="文章摘要"></a>文章摘要</h3><p>开关自动摘要（默认开启）：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">index</span><span class="token punctuation">:</span>  <span class="token key atrule">auto_excerpt</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>若要手动指定摘要，使用 <code>&lt;!-- more --&gt;</code> MD文档里划分，如：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">正文的一部分作为摘要<span class="token comment">&lt;!-- more --&gt;</span>余下的正文<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>或者在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 里设置 <code>excerpt</code> 字段，如：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 这是标题<span class="token key atrule">excerpt</span><span class="token punctuation">:</span> 这是摘要<span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>:::tip<br>优先级: 手动摘要 &gt; 自动摘要</p><p>如果关闭自动摘要，并且没有设置手动摘要，摘要区域空白</p><p>无论哪种摘要都最多显示 3 行，当屏幕宽度不足时会隐藏部分摘要。<br>:::</p><h3 id="文章跳转方式"><a href="#文章跳转方式" class="headerlink" title="文章跳转方式"></a>文章跳转方式</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">index</span><span class="token punctuation">:</span>  <span class="token key atrule">post_url_target</span><span class="token punctuation">:</span> _self<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>可选值：</p><ol><li>_blank：新标签页打开</li><li>_self：当前标签页打开</li></ol><h3 id="文章信息"><a href="#文章信息" class="headerlink" title="文章信息"></a>文章信息</h3><p>可配置隐藏包括发布时间、分类、标签。</p><p>经过测试，如果首页的文章列表中没有略缩图和摘要，标题+文章信息的显示方式会使页面过于拥挤，所以给出此项配置供喜欢首页只显示文章标题的同学使用。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">index</span><span class="token punctuation">:</span>  <span class="token key atrule">post_meta</span><span class="token punctuation">:</span>    <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">category</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">tag</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="隐藏文章"><a href="#隐藏文章" class="headerlink" title="隐藏文章"></a>隐藏文章</h3><p>如果想把某些文章隐藏起来，不在首页和其他分类里展示，可以在文章开头 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 中配置 <code>hide: true</code> 属性。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 文章标题<span class="token key atrule">index_img</span><span class="token punctuation">:</span> /img/example.jpg<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2019-10-10 10:00:00</span><span class="token key atrule">hide</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token punctuation">---</span>以下是文章内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>:::tip<br>隐藏会使文章在分类和标签类里都不显示</p><p>隐藏后依然可以通过文章链接访问<br>:::</p><h3 id="文章排序"><a href="#文章排序" class="headerlink" title="文章排序"></a>文章排序</h3><p>如果想手动将某些文章固定在首页靠前的位置，可以在安装 <code>hexo-generator-index</code> &gt;= 2.0.0 版本的情况下，在文章开头 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 中配置 <code>sticky</code> 属性：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 文章标题<span class="token key atrule">index_img</span><span class="token punctuation">:</span> /img/example.jpg<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2019-10-10 10:00:00</span><span class="token key atrule">sticky</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">---</span>以下是文章内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>sticky</code> 数值越大，该文章越靠前，达到类似于置顶的效果，其他未设置的文章依然按默认排序。</p><p>当文章设置了 <code>sticky</code> 后，主题会默认在首页文章标题前增加一个图标，来标识这是一个置顶文章，你可以通过<strong>主题配置</strong>去关闭或修改这个功能：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">index</span><span class="token punctuation">:</span>  <span class="token key atrule">post_sticky</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> <span class="token string">'iconfont icon-top'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><code>icon</code> 可以通过<a href="/icon/">自定义图标</a>修改为其他图标。</p><h2 id="文章页"><a href="#文章页" class="headerlink" title="文章页"></a>文章页</h2><h3 id="文章在首页的封面图"><a href="#文章在首页的封面图" class="headerlink" title="文章在首页的封面图"></a>文章在首页的封面图</h3><p>对于单篇文章，在文章开头 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 中配置 <code>index_img</code> 属性。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 文章标题<span class="token key atrule">tags</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>Hexo<span class="token punctuation">,</span> Fluid<span class="token punctuation">]</span><span class="token key atrule">index_img</span><span class="token punctuation">:</span> /img/example.jpg<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2019-10-10 10:00:00</span><span class="token punctuation">---</span>以下是文章内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>和 Banner 配置相同，<code>/img/example.jpg</code> 对应的是存放在 <code>/source/img/example.jpg</code> 目录下的图片（目录也可自定义，但必须在 source 目录下）。</p><p>也可以使用外链 Url 的绝对路径。</p><p>如果想统一给文章设置一个默认图片（文章不设置 <code>index_img</code> 则默认使用这张图片），可在<strong>主题配置</strong>中设置：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">post</span><span class="token punctuation">:</span>  <span class="token key atrule">default_index_img</span><span class="token punctuation">:</span> /img/example.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>当 <code>default_index_img</code> 和 <code>index_img</code> 都为空时，该文章在首页将不显示图片。</p><h3 id="文章页顶部大图"><a href="#文章页顶部大图" class="headerlink" title="文章页顶部大图"></a>文章页顶部大图</h3><p>默认显示<strong>主题配置</strong>中的 <code>post.banner_img</code>，如需要设置单个文章的 Banner，在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 中指定 <code>banner_img</code> 属性。</p><p>本地图片存放位置同上。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 文章标题<span class="token key atrule">tags</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>Hexo<span class="token punctuation">,</span> Fluid<span class="token punctuation">]</span><span class="token key atrule">index_img</span><span class="token punctuation">:</span> /img/example.jpg<span class="token key atrule">banner_img</span><span class="token punctuation">:</span> /img/post_banner.jpg<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2019-10-10 10:00:00</span><span class="token punctuation">---</span>以下是文章内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="文章内容图片"><a href="#文章内容图片" class="headerlink" title="文章内容图片"></a>文章内容图片</h3><p>本地图片存放位置同上。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">![](/img/example.jpg)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="日期-字数-阅读时长-阅读数"><a href="#日期-字数-阅读时长-阅读数" class="headerlink" title="日期/字数/阅读时长/阅读数"></a>日期/字数/阅读时长/阅读数</h3><p>显示在文章页大标题下的文章信息，除了作者和阅读次数，其他功能都是默认开启的。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">post</span><span class="token punctuation">:</span>  <span class="token key atrule">meta</span><span class="token punctuation">:</span>    <span class="token key atrule">author</span><span class="token punctuation">:</span>  <span class="token comment"># 作者，优先根据 front-matter 里 author 字段，其次是 hexo 配置中 author 值</span>      <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">date</span><span class="token punctuation">:</span>  <span class="token comment"># 文章日期，优先根据 front-matter 里 date 字段，其次是 md 文件日期</span>      <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token key atrule">format</span><span class="token punctuation">:</span> <span class="token string">"dddd, MMMM Do YYYY, h:mm a"</span>  <span class="token comment"># 格式参照 ISO-8601 日期格式化</span>    <span class="token key atrule">wordcount</span><span class="token punctuation">:</span>  <span class="token comment"># 字数统计</span>      <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token key atrule">format</span><span class="token punctuation">:</span> <span class="token string">"{} 字"</span>  <span class="token comment"># 显示的文本，{}是数字的占位符（必须包含)，下同</span>    <span class="token key atrule">min2read</span><span class="token punctuation">:</span>  <span class="token comment"># 阅读时间</span>      <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token key atrule">format</span><span class="token punctuation">:</span> <span class="token string">"{} 分钟"</span>    <span class="token key atrule">views</span><span class="token punctuation">:</span>  <span class="token comment"># 阅读次数</span>      <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>      <span class="token key atrule">source</span><span class="token punctuation">:</span> <span class="token string">"leancloud"</span>  <span class="token comment"># 统计数据来源，可选：leancloud | busuanzi   注意不蒜子会间歇抽风</span>      <span class="token key atrule">format</span><span class="token punctuation">:</span> <span class="token string">"{} 次"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>:::tip<br>日期格式必须遵循 ISO-8601 规范，否则无法正常显示；</p><p>其他格式必须包括 <code>{}</code> 符号代替数字，文字可自由设置。<br>:::</p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">code</span><span class="token punctuation">:</span>  <span class="token key atrule">copy_btn</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">highlight</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">lib</span><span class="token punctuation">:</span> <span class="token string">"highlightjs"</span>    <span class="token key atrule">highlightjs</span><span class="token punctuation">:</span>      <span class="token key atrule">style</span><span class="token punctuation">:</span> <span class="token string">'Github Gist'</span>      <span class="token key atrule">bg_color</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">prismjs</span><span class="token punctuation">:</span>      <span class="token key atrule">style</span><span class="token punctuation">:</span> <span class="token string">"default"</span>      <span class="token key atrule">preprocess</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>copy_btn</code>: 是否开启复制代码的按钮</p><p><code>line_number</code>: 是否开启行号</p><p><code>highlight</code>: 是否开启代码高亮</p><p><code>lib</code>: 选择生成高亮的库，可选项: highlightjs、prismjs，对应下面两组配置，高亮的配置说明具体见<strong>主题配置</strong>中的注释</p><h3 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h3><p>开启评论需要在<strong>主题配置</strong>中开启并指定评论模块：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">post</span><span class="token punctuation">:</span>  <span class="token key atrule">comments</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> disqus<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后在下方还要设置对应评论模块的参数，比如 disqus 对应设置：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">disqus</span><span class="token punctuation">:</span>  <span class="token key atrule">shortname</span><span class="token punctuation">:</span> fluid<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>当前支持的评论插件如下：</p><ul><li><a href="https://valine.js.org/configuration.html">Valine</a> :基于 LeanCloud</li><li><a href="https://waline.js.org/">Waline</a> : 从 Valine 衍生而来，额外增加了服务端和多种功能</li><li><a href="https://github.com/gitalk/gitalk">Gitalk</a> : 基于 GitHub Issues</li><li><a href="https://utteranc.es/">Utterances</a> : 基于 GitHub Issues</li><li><a href="https://disqus.com/">Disqus</a> : 基于第三方的服务</li><li><a href="http://changyan.kuaizhan.com/">畅言</a> : 基于第三方的服务</li><li><a href="https://www.livere.com/">来必力(Livere)</a> : 基于第三方的服务</li><li><a href="https://remark42.com/">Remark42</a> : 需要自托管服务端</li><li><a href="https://twikoo.js.org/">Twikoo</a> : 基于腾讯云开发</li><li><a href="https://cusdis.com/">Cusdis</a> : 基于第三方服务或自托管服务</li></ul><p>使用方式和参数设置请点击上面链接查看各自的文档。</p><p>若想自己添加新的评论插件，可通过<a href="/guide/#%E8%87%AA%E5%AE%9A%E4%B9%89-js-css-html">自定义功能</a>加入 <code>&lt;script&gt;</code>，并判断是否存在 <code>#comments</code> 元素进行挂载。</p><p>:::tip<br>国内用户推荐使用 Valine、Waline 或者 twikoo</p><p>如果设置后评论模块没有显示，说明配置没有完成，或者配置有误出现报错（请在浏览器控制台查看具体报错）<br>:::</p><p>如果想在某个文章页关闭评论，或者想在某个自定义页面开启评论，可以通过在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 设置 <code>comment: bool</code> 来控制评论开关，或者通过 <code>comment: 'type'</code> 来开启指定的评论插件。</p><p>例如在关于页开启并指定评论插件：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 关于页<span class="token key atrule">layout</span><span class="token punctuation">:</span> about<span class="token key atrule">index_img</span><span class="token punctuation">:</span> /img/example.jpg<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2019-10-10 10:00:00</span><span class="token key atrule">comment</span><span class="token punctuation">:</span> <span class="token string">'valine'</span><span class="token punctuation">---</span>以下是正文内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><p>主题内置了脚注语法支持，可以在文章末尾自动生成带有锚点的脚注，该功能在<strong>主题配置</strong>中默认开启：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">post</span><span class="token punctuation">:</span>  <span class="token key atrule">footnote</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">header</span><span class="token punctuation">:</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>脚注语法如下：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">这是一句话[^1]<span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">^1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> 这是对应的脚注</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>更优雅的使用方式，是将脚注写在文末，比如：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">正文<span class="token title important"><span class="token punctuation">##</span> 参考</span><span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">^1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> 参考资料1</span><span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">^2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> 参考资料2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当然你也可以通过修改上方配置项 <code>header</code> 来自动加入节标题，如下所示：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">post</span><span class="token punctuation">:</span>  <span class="token key atrule">footnote</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">header</span><span class="token punctuation">:</span> <span class="token string">'&lt;h2&gt;参考&lt;/h2&gt;'</span>  <span class="token comment"># 等同于手动写 `## 参考`</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Tag-插件"><a href="#Tag-插件" class="headerlink" title="Tag 插件"></a>Tag 插件</h3><h4 id="便签"><a href="#便签" class="headerlink" title="便签"></a>便签</h4><p>在 markdown 中加入如下的代码来使用便签：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note success %}文字 或者 <span class="token code-snippet code keyword">`markdown`</span> 均可{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>或者使用 HTML 形式：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>note note-primary<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可选便签：</p><p class="note note-primary">primary</p><p class="note note-secondary">secondary</p><p class="note note-success">success</p><p class="note note-danger">danger</p><p class="note note-warning">warning</p><p class="note note-info">info</p><p class="note note-light">light</p><p>:::warning<br>使用时 <code>{% note primary %}` 和 `{% endnote %}</code> 需单独一行，否则会出现问题<br>:::</p><h4 id="行内标签"><a href="#行内标签" class="headerlink" title="行内标签"></a>行内标签</h4><p>在 markdown 中加入如下的代码来使用 Label：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% label primary @text %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者使用 HTML 形式：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>label label-primary<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Label<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可选 Label：</p><p><span class="label label-primary">primary</span><br><span class="label label-default">default</span><br><span class="label label-info">info</span><br><span class="label label-success">success</span><br><span class="label label-warning">warning</span><br><span class="label label-danger">danger</span></p><p>:::warning<br>若使用 <code>{% label primary @text %}</code>，text 不能以 @ 开头<br>:::</p><h4 id="勾选框"><a href="#勾选框" class="headerlink" title="勾选框"></a>勾选框</h4><p>在 markdown 中加入如下的代码来使用 Checkbox：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{%  text, checked?, incline? %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>text：显示的文字<br>checked：默认是否已勾选，默认 false<br>incline: 是否内联（可以理解为后面的文字是否换行），默认 false</p><p>示例：</p><div>  <input type="checkbox" disabled="" checked="">  普通示例 </div><div>  <input type="checkbox" disabled="" checked="">  默认选中, true </div><input type="checkbox" disabled="">  内联示例, false, true  后面文字不换行<div>  <input type="checkbox" disabled="">  false  也可以只传入一个参数，文字写在后边（这样不支持外联）</div><h4 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h4><p>你可以在 markdown 中加入如下的代码来使用 Button：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% btn url, text, title %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者使用 HTML 形式：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>text<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>url：跳转链接<br>text：显示的文字<br>title：鼠标悬停时显示的文字（可选）</p><p><a class="btn" href="javascript:;" title="title">text</a></p><h4 id="组图"><a href="#组图" class="headerlink" title="组图"></a>组图</h4><p>如果想把多张图片按一定布局组合显示，你可以在 markdown 中按如下格式：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% gi total n1-n2-... %}  ![](url)  ![](url)  ![](url)  ![](url)  ![](url){% endgi %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>total：图片总数量，对应中间包含的图片 url 数量<br>n1-n2-…：每行的图片数量，可以省略，默认单行最多 3 张图，求和必须相等于 total，否则按默认样式</p><p>如下图为 <code>{% gi 5 3-2 %}</code> 示例，代表共 5 张图，第一行 3 张图，第二行 2 张图。</p><p><img src="/posts/63715.htm/.vuepress/public/group_image.png" alt="Group Images"></p><h3 id="LaTeX-数学公式"><a href="#LaTeX-数学公式" class="headerlink" title="LaTeX 数学公式"></a>LaTeX 数学公式</h3><p>:::tip<br>Hexo 5.0 以上，可尝试 Hexo 官方的 <a href="https://github.com/hexojs/hexo-math">hexo-math</a> 插件，支持更多定制化参数，使用方式参照仓库内的文档，以下介绍的是主题内置的 LaTeX 功能。<br>:::</p><p>当需要使用 <a href="https://www.latex-project.org/help/documentation/">LaTeX</a> 语法的数学公式时，可手动开启本功能，需要完成三步操作：</p><p><strong>1. 设置主题配置</strong></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">post</span><span class="token punctuation">:</span>  <span class="token key atrule">math</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">specific</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    <span class="token key atrule">engine</span><span class="token punctuation">:</span> mathjax<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>specific</code>: 建议开启。当为 true 时，只有在文章 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 里指定 <code>math: true</code> 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度。</p><p><code>engine</code>: 公式引擎，目前支持 <code>mathjax</code> 或 <code>katex</code>。</p><p><strong>2. 更换 Markdown 渲染器</strong></p><p>由于 Hexo 默认的 Markdown 渲染器不支持复杂公式，所以必须更换渲染器。</p><p>先卸载原有渲染器：</p><p><code>npm uninstall hexo-renderer-marked --save</code></p><p>然后根据上方配置不同的 <code>engine</code>，推荐更换如下渲染器：</p><p>mathjax:<code>npm install hexo-renderer-pandoc --save</code> <strong>并且还需<a href="https://github.com/jgm/pandoc/blob/master/INSTALL.md">安装 Pandoc</a></strong></p><p>katex: <code>npm install @upupming/hexo-renderer-markdown-it-plus --save</code></p><p><strong>3. 安装完成后执行 <code>hexo clean</code></strong></p><p>书写公式的格式：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">$$E=mc^2$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>:::warning</p><p>如果公式没有被正确渲染，请仔细检查是否符合上面三步操作。</p><p>不可以同时安装多个渲染插件，包括 <code>hexo-math</code> 或者 <code>hexo-katex</code> 这类插件，请注意检查 <code>package.json</code>。</p><p>如果更换公式引擎，对应渲染器也要一并更换。</p><p>另外不同的渲染器，可能会导致一些 Markdown 语法不支持。</p><p>自定义页面默认不加载渲染，如需使用，需在 Front-matter 中指定 <code>math: true</code></p><p>:::</p><p>:::tip</p><p>不同的公式引擎有不同的优缺点。</p><p><strong>MathJax</strong></p><p>优点</p><ul><li>对 LaTeX 语法支持全面</li><li>右键点击公式有扩展功能</li></ul><p>缺点</p><ul><li>需要加载 JS，页面加载会比较慢</li></ul><p><strong>KaTeX</strong></p><p>优点</p><ul><li>没有 JS 不会影响页面加载</li></ul><p>缺点</p><ul><li>小部分 LaTeX 不支持</li></ul><p>:::</p><h3 id="Mermaid-流程图"><a href="#Mermaid-流程图" class="headerlink" title="Mermaid 流程图"></a>Mermaid 流程图</h3><p>当需要使用 <a href="http://mermaid-js.github.io/mermaid/#/">Mermaid</a> 渲染流程图时，可手动开启本功能：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">post</span><span class="token punctuation">:</span>  <span class="token key atrule">mermaid</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">specific</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>    options<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>specific</code>: 建议开启。当为 true 时，只有在文章 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 里指定 <code>mermaid: true</code> 才会在文章页启动流程图渲染，以便在页面不包含流程图时提高加载速度。</p><p><code>options</code>: 官方 API 的配置项，具体可见 <a href="http://mermaid-js.github.io/mermaid/#/mermaidAPI">mermaidAPI.js</a></p><p>:::tip<br>自定义页面默认不加载，如需使用，需在 Front-matter 中指定 <code>mermaid: true</code><br>:::</p><p>使用 Mermaid 可以通过内置的 Tag 书写：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% mermaid %}ganttdateFormat  YYYY-MM-DDtitle Adding GANTT diagram to mermaidsection A sectionCompleted task            :done,    des1, 2014-01-06,2014-01-08Active task               :active,  des2, 2014-01-09, 3dFuture task               :         des3, after des2, 5dFuture task2               :         des4, after des3, 5d{% endmermaid %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也可以通过代码块书写：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">```mermaidclassDiagramClass01 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>|--</span> <span class="token attr-name">AveryLongClass</span> <span class="token attr-name">:</span> <span class="token attr-name">Cool</span><span class="token attr-name">Class03</span> <span class="token attr-name">*--</span> <span class="token attr-name">Class04</span><span class="token attr-name">Class05</span> <span class="token attr-name">o--</span> <span class="token attr-name">Class06</span><span class="token attr-name">Class07</span> <span class="token attr-name">..</span> <span class="token attr-name">Class08</span><span class="token attr-name">Class09</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span> C2 : Where am i?Class09 --* C3Class09 --|&gt; Class07Class07 : equals()Class07 : Object[] elementDataClass01 : size()Class01 : int chimpClass01 : int gorillaClass08 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>--</span><span class="token punctuation">&gt;</span></span> C2: Cool label<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">## 归档页具体见配置文件注释## 分类页具体见配置文件注释[添加分类的方法](https://hexo.io/zh-cn/docs/front-matter)## 标签页标签是以词云的形式展示，标签的大小和颜色会根据标签下的文章数量变化，相关配置如下：```yamltag:  tagcloud:    min_font: 15    max_font: 30    unit: px  # 字号单位    start_color: "#BBBBEE"    end_color: "#337ab7"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其他配置具体见配置文件注释</p><p><a href="https://hexo.io/zh-cn/docs/front-matter">添加标签的方法</a></p><h2 id="关于页"><a href="#关于页" class="headerlink" title="关于页"></a>关于页</h2><h3 id="创建关于页"><a href="#创建关于页" class="headerlink" title="创建关于页"></a>创建关于页</h3><p>首次使用主题的「关于页」需要手动创建：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new page about<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>创建成功后修改 <code>/source/about/index.md</code>，添加 <code>layout</code> 属性。</p><p>修改后的文件示例如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 标题<span class="token key atrule">layout</span><span class="token punctuation">:</span> about<span class="token punctuation">---</span>这里可以写正文，支持 Markdown<span class="token punctuation">,</span> HTML<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>:::warning<br><code>layout: about</code> 必须存在，并且不能修改成其他值，否则不会显示头像等样式。<br>:::</p><h3 id="关于信息"><a href="#关于信息" class="headerlink" title="关于信息"></a>关于信息</h3><p>在关于页介绍自己的基础信息，可以在<strong>主题配置</strong>中设置：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">about</span><span class="token punctuation">:</span>  <span class="token key atrule">avatar</span><span class="token punctuation">:</span> /img/avatar.png  <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"Fluid"</span>  <span class="token key atrule">intro</span><span class="token punctuation">:</span> <span class="token string">"An elegant theme for Hexo"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="社交页图标"><a href="#社交页图标" class="headerlink" title="社交页图标"></a>社交页图标</h3><p>在<strong>主题配置</strong>中设置：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">about</span><span class="token punctuation">:</span>  <span class="token key atrule">icons</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">class</span><span class="token punctuation">:</span> <span class="token string">'iconfont icon-github-fill'</span><span class="token punctuation">,</span> <span class="token key atrule">link</span><span class="token punctuation">:</span> <span class="token string">'https://github.com'</span><span class="token punctuation">,</span> <span class="token key atrule">tip</span><span class="token punctuation">:</span> <span class="token string">'GitHub'</span> <span class="token punctuation">}</span>    <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">class</span><span class="token punctuation">:</span> <span class="token string">'iconfont icon-douban-fill'</span><span class="token punctuation">,</span> <span class="token key atrule">link</span><span class="token punctuation">:</span> <span class="token string">'https://douban.com'</span><span class="token punctuation">,</span> <span class="token key atrule">tip</span><span class="token punctuation">:</span> <span class="token string">'豆瓣'</span> <span class="token punctuation">}</span>    <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">class</span><span class="token punctuation">:</span> <span class="token string">'iconfont icon-wechat-fill'</span><span class="token punctuation">,</span> <span class="token key atrule">qrcode</span><span class="token punctuation">:</span> <span class="token string">'/img/favicon.png'</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>class</code>: 图标的 css class，主题内置图标详见<a href="/icon/">这里</a></li><li><code>link</code>: 跳转链接</li><li><code>tip</code>: 鼠标悬浮在图标上显示的提示文字</li><li><code>qrcode</code>: 二维码图片，当使用此字段后，点击不再跳转，而是悬浮二维码</li></ul><p>:::tip<br>关闭 icons 时注意不要把 <code>icons</code> 这个 key 也一起注释，否则会被<a href="/guide/#%E8%A6%86%E7%9B%96%E9%85%8D%E7%BD%AE">覆盖配置</a>填充上默认值，请按照如下设置：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">about</span><span class="token punctuation">:</span>  <span class="token key atrule">icons</span><span class="token punctuation">:</span>    <span class="token comment"># - { class: 'iconfont icon-github-fill', link: 'https://github.com', tip: 'GitHub' }</span>    <span class="token comment"># - { class: 'iconfont icon-douban-fill', link: 'https://douban.com', tip: '豆瓣' }</span>    <span class="token comment"># - { class: 'iconfont icon-wechat-fill', qrcode: '/img/favicon.png' }</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>:::</p><h3 id="评论-1"><a href="#评论-1" class="headerlink" title="评论"></a>评论</h3><p>开启评论的方式是通过在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 设置 <code>comment: bool</code> 来控制评论开关，或者通过 <code>comment: 'type'</code> 来开启指定的评论插件。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 标题<span class="token key atrule">layout</span><span class="token punctuation">:</span> about<span class="token key atrule">comment</span><span class="token punctuation">:</span> <span class="token string">'valine'</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="友情链接页"><a href="#友情链接页" class="headerlink" title="友情链接页"></a>友情链接页</h2><p>友情链接页用于展示好友的博客入口，默认关闭，开启需要先在 <code>navbar</code> 项中将 <code>links</code> 的注释(#号)删掉：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">navbar</span><span class="token punctuation">:</span>  <span class="token key atrule">menu</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token punctuation">{</span> <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">'links'</span><span class="token punctuation">,</span> <span class="token key atrule">link</span><span class="token punctuation">:</span> <span class="token string">'/links/'</span><span class="token punctuation">,</span> <span class="token key atrule">icon</span><span class="token punctuation">:</span> <span class="token string">'iconfont icon-link-fill'</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后找到 <code>links</code> 的配置项，对页面内容进行配置：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">links</span><span class="token punctuation">:</span>  <span class="token key atrule">items</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token punctuation">{</span>      <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'Fluid Docs'</span><span class="token punctuation">,</span>      <span class="token key atrule">intro</span><span class="token punctuation">:</span> <span class="token string">'主题使用指南'</span><span class="token punctuation">,</span>      <span class="token key atrule">link</span><span class="token punctuation">:</span> <span class="token string">'https://hexo.fluid-dev.com/docs/'</span><span class="token punctuation">,</span>      <span class="token key atrule">avatar</span><span class="token punctuation">:</span> <span class="token string">'/img/favicon.png'</span>    <span class="token punctuation">}</span>  <span class="token key atrule">default_avatar</span><span class="token punctuation">:</span> /img/avatar.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>title</code>: 友链站的标题</li><li><code>intro</code>: 站点或博主的简介，可省略</li><li><code>link</code>: 跳转链接</li><li><code>avatar</code>: 头像图片，可省略</li><li><code>default_avatar</code>: 成员的默认头像（仅在指定了头像并且加载失败时生效）</li></ul><p>友链页也可以使用自定义区域和评论，使用方式类似于文章页，具体见配置项与相关注释。</p><h2 id="自定义页面"><a href="#自定义页面" class="headerlink" title="自定义页面"></a>自定义页面</h2><h3 id="创建页面"><a href="#创建页面" class="headerlink" title="创建页面"></a>创建页面</h3><p>如果想单独生成一个页面，步骤和创建「关于页」类似。</p><ol><li>首先用命令行创建页面：</li></ol><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">$ hexo new page example<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>创建成功后编辑博客目录下 <code>/source/example/index.md</code>：</li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> example<span class="token key atrule">subtitle</span><span class="token punctuation">:</span> 若不填默认是 title<span class="token punctuation">---</span>这里写正文，支持 Markdown<span class="token punctuation">,</span> HTML<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>正文默认没有 Markdown 样式，如果希望和文章相同的样式，可以加上：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>markdown-body<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>正文<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>页面的参数配置可以在<strong>主题配置</strong>中统一设置：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">page</span><span class="token punctuation">:</span>  <span class="token key atrule">banner_img</span><span class="token punctuation">:</span> /img/default.png  <span class="token key atrule">banner_img_height</span><span class="token punctuation">:</span> <span class="token number">70</span>  <span class="token key atrule">banner_mask_alpha</span><span class="token punctuation">:</span> <span class="token number">0.3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>也可以直接在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 里单独设置：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> example<span class="token key atrule">banner_img</span><span class="token punctuation">:</span> /img/default.png<span class="token key atrule">banner_img_height</span><span class="token punctuation">:</span> <span class="token number">60</span><span class="token key atrule">banner_mask_alpha</span><span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">---</span>这里可以写正文<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="评论-2"><a href="#评论-2" class="headerlink" title="评论"></a>评论</h3><p>自定义页面也可以开启评论插件，和关于页的方式相同，通过在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter</a> 设置 <code>comment: bool</code> 来控制评论开关，或者通过 <code>comment: 'type'</code> 来开启指定的评论插件：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> example<span class="token key atrule">comment</span><span class="token punctuation">:</span> <span class="token string">'valine'</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="404-页"><a href="#404-页" class="headerlink" title="404 页"></a>404 页</h2><p>404 页是在访问不存在的博客链接时，出现的错误提示页面。</p><p>开启此页面需要在博客的部署环境上配置：</p><ul><li>如果博客部署在云服务器，需要 Nginx 配置文件设置 <code>error_page 404 = /404.html</code>；</li><li>如果部署在 GitHub Pages 上，不需要额外配置，但必须绑定顶级域名才生效；</li><li>其他 OSS 等平台，请参考各平台关于 404 页的配置文档，但并不是所有平台都支持跳转 Html。</li></ul><p>主题包含默认的404页面，你也可以将自定义的 <code>404.html</code> 放置在博客的 <code>source</code> 目录下。</p><h2 id="内置社交图标"><a href="#内置社交图标" class="headerlink" title="内置社交图标"></a>内置社交图标</h2><p>主题内置了一些社交类图标，均来自 <a href="https://www.iconfont.cn/">Iconfont</a>，由于不支持公开展示，因此只能通过图片：</p><p><img src="/posts/63715.htm/.vuepress/public/iconfont.png" alt="内置图标"></p><p>将 <code>icon-</code> 开头的那行填入 css class 即可，例如 <code>iconfont icon-wechat-fill</code>。</p><p>以上主要用在关于页中，当然你也可以通过插入 HTML 的方式用到主题的任何地方。</p><h2 id="自定义图标"><a href="#自定义图标" class="headerlink" title="自定义图标"></a>自定义图标</h2><p><a href="https://www.iconfont.cn/">Iconfont</a>支持用户创建项目来管理和使用图标库，在 <code>图标管理-我的项目</code> 中即可管理和创建项目。将所需图标添加至购物车，再通过购物车添加至所创建的项目中。在项目中可以下载至本地与生成在线链接，Iconfont 支持在阿里云的 CDN 中生成 CSS 或 JS 文件用来调用。</p><p>生成在线链接后，有两种引入方式：</p><ol><li><p>将链接替换到<strong>主题配置</strong>的 <code>iconfont</code> 配置项中，但注意替换后<strong>原内置的图标库将全部失效</strong></p></li><li><p>通过 <a href="/guide/#%E8%87%AA%E5%AE%9A%E4%B9%89-js-css-html">自定义 CSS</a> 引入，这样不会替换内置图标库</p></li></ol><p>引入之后，图标第二行的 class 填入配置中的 css class 即可，例如 <code>iconfont icon-email</code>（<strong>注意 <code>iconfont</code> 不能删掉</strong>）。</p><p>在每次有删减项目中图标库目录时，需要点击重新生成链接并替换到配置链接。</p><h2 id="Hexo-注入代码"><a href="#Hexo-注入代码" class="headerlink" title="Hexo 注入代码"></a>Hexo 注入代码</h2><p><a href="https://hexo.io/zh-cn/api/injector.html">Hexo 注入器</a>是 Hexo 5 版本自身加入的一项新功能，所以在所有 Hexo 主题都是支持这个功能的。</p><p>注入器可以将 HTML 片段注入生成页面的 <code>&lt;head&gt;</code> 和 <code>&lt;body&gt;</code> 节点中。</p><p>编写注入代码，需要在博客的根目录下创建 <code>scripts</code> 文件夹，然后在里面任意命名创建一个 js 文件即可。</p><p>例如创建一个 <code>/blog/scripts/example.js</code>，内容为：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">hexo<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>injector<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'body_end'</span><span class="token punctuation">,</span> <span class="token string">'&lt;script src="/jquery.js"&gt;&lt;/script&gt;'</span><span class="token punctuation">,</span> <span class="token string">'default'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上述代码会在生成的页面 <code>&lt;/body&gt;</code> 注入加载 <code>jquery.js</code> 的代码。</p><p><code>register</code> 函数可接受三个参数，第一个参数是代码片段注入的位置，接受以下值：  </p><ul><li><code>head_begin</code>: 注入在 <code>&lt;head&gt;</code> 之后（默认）  </li><li><code>head_end</code>: 注入在 <code>&lt;/head&gt;</code> 之前  </li><li><code>body_begin</code>: 注入在 <code>&lt;body&gt;</code> 之后  </li><li><code>body_end</code>: 注入在 <code>&lt;/body&gt;</code> 之前  </li></ul><p>第二个参数是注入的片段，可以是字符串，也可以是一个返回值为字符串的函数。</p><p>第三个参数是注入的页面类型，接受以下值：</p><ul><li><code>default</code>: 注入到每个页面（默认值）  </li><li><code>home</code>: 只注入到主页（<code>is_home()</code> 为 <code>true</code> 的页面）  </li><li><code>post</code>: 只注入到文章页面（<code>is_post()</code> 为 <code>true</code> 的页面）  </li><li><code>page</code>: 只注入到独立页面（<code>is_page()</code> 为 <code>true</code> 的页面）  </li><li><code>archive</code>: 只注入到归档页面（<code>is_archive()</code> 为 <code>true</code> 的页面）  </li><li><code>category</code>: 只注入到分类页面（<code>is_category()</code> 为 <code>true</code> 的页面）  </li><li><code>tag</code>: 只注入到标签页面（<code>is_tag()</code> 为 <code>true</code> 的页面）  </li><li>或是其他自定义 layout 名称，例如在Fluid 主题中 <code>about</code> 对应关于页、<code>links</code> 对应友联页  </li></ul><h2 id="Fluid-注入代码"><a href="#Fluid-注入代码" class="headerlink" title="Fluid 注入代码"></a>Fluid 注入代码</h2><p>:::warning</p><p>该功能需要 Fluid 1.9.0-beta 版本</p><p>:::</p><p>Fluid 主题也提供了一套注入代码功能，相较于 Hexo 注入功能更细致更丰富，并且支持注入 <code>ejs</code> 代码。</p><p>如果你想充分修改主题，又不想直接修改源码影响日后更新，本主题提供了代码注入功能，可以将代码无侵入式加入到主题里。</p><p>你可以直接注入 HTML 片段，不过建议你了解一下 <a href="https://ejs.bootcss.com/">EJS 模板引擎</a>，这样你就可以像主题里的 <code>ejs</code> 文件一样编写自己的组件再注入进去。</p><p>进入博客目录下 <code>scripts</code> 文件夹（如不存在则创建），在里面创建任意名称的 js 文件，在文件中写入如下内容：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">hexo<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>filter<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'theme_inject'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">injects</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  injects<span class="token punctuation">.</span>header<span class="token punctuation">.</span><span class="token function">file</span><span class="token punctuation">(</span><span class="token string">'default'</span><span class="token punctuation">,</span> <span class="token string">'source/_inject/test1.ejs'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'value'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  injects<span class="token punctuation">.</span>footer<span class="token punctuation">.</span><span class="token function">raw</span><span class="token punctuation">(</span><span class="token string">'default'</span><span class="token punctuation">,</span> <span class="token string">'&lt;script async src="https://xxxxxx" crossorigin="anonymous"&gt;&lt;/script&gt;'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>header</code> 和 <code>footer</code> 是注入点的名称，表示代码注入到页面的什么位置；</li><li><code>file</code> 方法表示注入的是文件，第一个参数下面介绍，第二个参数则是文件的路径，第三个参数是传入文件的参数（可省略），第四个参数是顺序（可省略）；</li><li><code>raw</code> 方法表示注入的是原生代码，第一个参数下面介绍，第二个参数则是一句原生的 HTML 语句；</li><li><code>default</code> 表示注入的键名，可以使用任意键名，同一个注入点下的相同键名会使注入的内容覆盖，而不同键名则会让内容依次排列（默认按执行先后顺序，可通过 <code>file</code> 第四个参数指定），这里 default 为主题默认键名，通常会替换掉主题默认的组件；</li></ul><p>主题目前提供的注入点如下：</p><table><thead><tr><th>注入点名称</th><th>注入范围</th><th>存在 <code>default</code> 键</th></tr></thead><tbody><tr><td>head</td><td><code>&lt;head&gt;</code> 标签中的结尾</td><td>无</td></tr><tr><td>header</td><td><code>&lt;header&gt;</code> 标签中所有内容</td><td>有</td></tr><tr><td>bodyBegin</td><td><code>&lt;body&gt;</code> 标签中的开始</td><td>无</td></tr><tr><td>bodyEnd</td><td><code>&lt;body&gt;</code> 标签中的结尾</td><td>无</td></tr><tr><td>footer</td><td><code>&lt;footer&gt;</code> 标签中所有内容</td><td>有</td></tr><tr><td>postMetaTop</td><td>文章页 <code>&lt;header&gt;</code> 标签中 meta 部分内容</td><td>有</td></tr><tr><td>postMetaBottom</td><td>文章页底部 meta 部分内容</td><td>有</td></tr><tr><td>postMarkdownBegin</td><td><code>&lt;div class="markdown-body"&gt;</code> 标签中的开始</td><td>无</td></tr><tr><td>postMarkdownEnd</td><td><code>&lt;div class="markdown-body"&gt;</code> 标签中的结尾</td><td>无</td></tr><tr><td>postLeft</td><td>文章页左侧边栏</td><td>有</td></tr><tr><td>postRight</td><td>文章页右侧边栏</td><td>有</td></tr><tr><td>postCopyright</td><td>文章页版权信息</td><td>有</td></tr><tr><td>postRight</td><td>文章页右侧边栏</td><td>无</td></tr><tr><td>postComments</td><td>文章页评论</td><td>有</td></tr><tr><td>pageComments</td><td>自定义页评论</td><td>有</td></tr><tr><td>linksComments</td><td>友链页评论</td><td>有</td></tr></tbody></table><h2 id="Hexo-插件"><a href="#Hexo-插件" class="headerlink" title="Hexo 插件"></a>Hexo 插件</h2><p>:::warning<br>所有插件仅作为推荐，并且不能保证完全与 Fluid 兼容使用（Fluid 开发组会尽力适配，但实际上大部分不兼容是我们无法单方面解决的），请仔细阅读它们的文档，以免造成不良后果。<br>:::</p><p><a href="https://github.com/chenzhutian/hexo-all-minifier">hexo-all-minifier</a> : 压缩 Hexo 生成的文件</p><p><a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> : 通过 Hex 算法生成永久的文章链接</p><p><a href="https://github.com/MoePlayer/hexo-tag-dplayer">hexo-tag-dplayer</a> : 可以在文章中插入视频 Tag</p><p><a href="https://github.com/stevenjoezhang/live2d-widget">live2d-widget</a> : 在网页上加入 Live2D 看板娘</p><p><a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> : 生成 Atom 1.0 or RSS 2.0 feed</p><p><a href="https://github.com/jaredly/hexo-admin">hexo-admin</a> : 为 Hexo 搭建可视化管理页面</p><p><inarticleadsense :data-ad-client="$themeConfig.ads.client" :data-ad-slot="$themeConfig.ads.inSlot" is-new-ads-code="yes"></inarticleadsense></p><h2 id="使用-jsDelivr-服务"><a href="#使用-jsDelivr-服务" class="headerlink" title="使用 jsDelivr 服务"></a>使用 jsDelivr 服务</h2><p>插入来自 GitHub 仓库的图片，由于网络情况可能会出现加载慢和无法加载的情况，我们可以使用 <a href="https://www.jsdelivr.com/">jsDelivr</a> 来加速图片文件等媒体文件的加载。</p><p>通常情况下，可以新建一个仓库来存放这些文件，目前已知的有图片、视频和引用的相关文件可以使用，GitHub 仓库最大上传文件为 25M，请注意文件大小。</p><p>使用方法（文件的绝对地址）</p><pre class="line-numbers language-none"><code class="language-none">https://cdn.jsdelivr.net/gh/user/repo@version/file<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>相关实例（博客仓库下 master 分支里 favicon 图片文件）</p><pre class="line-numbers language-none"><code class="language-none">https://cdn.jsdelivr.net/gh/fluid-dev/hexo-theme-fluid@master/source/img/favicon.png<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="加快网页加载"><a href="#加快网页加载" class="headerlink" title="加快网页加载"></a>加快网页加载</h2><ul><li><p>对于所有用户，将各种第三方库配置公共 CDN 是最有效的方式，可以通过<strong>主题配置</strong>中的 <code>static_prefix</code> 配置来链接（默认使用 jsDelivr CDN）；</p></li><li><p>如果你的域名已备案，可以使用<a href="https://s.qiniu.com/N7beiu">七牛云</a>、阿里云、腾讯云等大厂的 OSS 服务并绑定域名，将生成后的 public 目录下全部上传到 OSS，然后你不仅可以无服务器部署博客，加载速度也将无可比拟；</p></li><li><p>没有备案，也可以通过香港及海外地区的云，或者私有 CDN 等方式进行加速，推荐一份 <a href="https://www.julydate.com/post/60859300">CDN 使用指南</a>。</p></li><li><p>如果图片是存在 source 目录中，建议搭配 <a href="https://github.com/chenzhutian/hexo-all-minifier">hexo-all-minifier</a> 插件，可自动对图片进行压缩；</p></li><li><p>如果是存放在外部的图片，建议先使用 <a href="https://tinypng.com/">tinypng</a> 进行压缩。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 脚本语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博文 </tag>
            
            <tag> hexo </tag>
            
            <tag> 配置指南 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode第887题（动态规划）：鸡蛋掉落</title>
      <link href="/posts/15584.html"/>
      <url>/posts/15584.html</url>
      
        <content type="html"><![CDATA[<h1 id="LeetCode第887题（动态规划）：鸡蛋掉落"><a href="#LeetCode第887题（动态规划）：鸡蛋掉落" class="headerlink" title="LeetCode第887题（动态规划）：鸡蛋掉落"></a>LeetCode第887题（动态规划）：鸡蛋掉落</h1><p>========================</p><p>题目如下：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220217LeetCode%E7%AC%AC887%E9%A2%98%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89%EF%BC%9A%E9%B8%A1%E8%9B%8B%E6%8E%89%E8%90%BD/1.png"></p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">LeetCode第887题（动态规划）：鸡蛋掉落You are given k identical eggs and you have access to a building with n floors labeled from 1 to n.You know that there exists a floor f where 0 &lt;= f &lt;= n such that any egg dropped at a floor higher than f will break, and any egg dropped at or below floor f will not break.Each move, you may take an unbroken egg and drop it from any floor x (where 1 &lt;= x &lt;= n). If the egg breaks, you can no longer use it. However, if the egg does not break, you may reuse it in future moves.Return the minimum number of moves that you need to determine with certainty what the value of f is. Example 1:Input: k = 1, n = 2Output: 2Explanation: Drop the egg from floor 1. If it breaks, we know that f = 0.Otherwise, drop the egg from floor 2. If it breaks, we know that f = 1.If it does not break, then we know f = 2.Hence, we need at minimum 2 moves to determine with certainty what the value of f is.Example 2:Input: k = 2, n = 6Output: 3Example 3:Input: k = 3, n = 14Output: 4 Constraints:1 &lt;= k &lt;= 1001 &lt;= n &lt;= 104给你 k 枚相同的鸡蛋，并可以使用一栋从第 1 层到第 n 层共有 n 层楼的建筑。已知存在楼层 f ，满足 0 &lt;= f &lt;= n ，任何从 高于 f 的楼层落下的鸡蛋都会碎，从 f 楼层或比它低的楼层落下的鸡蛋都不会破。每次操作，你可以取一枚没有碎的鸡蛋并把它从任一楼层 x 扔下（满足 1 &lt;= x &lt;= n）。如果鸡蛋碎了，你就不能再次使用它。如果某枚鸡蛋扔下后没有摔碎，则可以在之后的操作中 重复使用 这枚鸡蛋。请你计算并返回要确定 f 确切的值 的 最小操作次数 是多少？ 示例 1：输入：k = 1, n = 2输出：2解释：鸡蛋从 1 楼掉落。如果它碎了，肯定能得出 f = 0 。 否则，鸡蛋从 2 楼掉落。如果它碎了，肯定能得出 f = 1 。 如果它没碎，那么肯定能得出 f = 2 。 因此，在最坏的情况下我们需要移动 2 次以确定 f 是多少。 示例 2：输入：k = 2, n = 6输出：3示例 3：输入：k = 3, n = 14输出：4 提示：1 &lt;= k &lt;= 1001 &lt;= n &lt;= 104<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">//没写出来</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>心得： 这是一道比较经典的动规题，难度高，甚至看完答案后也不好写</code></p><h2 id="官方解答"><a href="#官方解答" class="headerlink" title="官方解答"></a>官方解答</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220217LeetCode%E7%AC%AC887%E9%A2%98%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89%EF%BC%9A%E9%B8%A1%E8%9B%8B%E6%8E%89%E8%90%BD/2.png"></p><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    unordered_map<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">&gt;</span> memo<span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">dp</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>memo<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>n <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">+</span> k<span class="token punctuation">)</span> <span class="token operator">==</span> memo<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> ans<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                ans <span class="token operator">=</span> n<span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">int</span> lo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> hi <span class="token operator">=</span> n<span class="token punctuation">;</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span>lo <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> hi<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token punctuation">(</span>lo <span class="token operator">+</span> hi<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>                    <span class="token keyword">int</span> t1 <span class="token operator">=</span> <span class="token function">dp</span><span class="token punctuation">(</span>k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">int</span> t2 <span class="token operator">=</span> <span class="token function">dp</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> n <span class="token operator">-</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>t1 <span class="token operator">&lt;</span> t2<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        lo <span class="token operator">=</span> x<span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>t1 <span class="token operator">&gt;</span> t2<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        hi <span class="token operator">=</span> x<span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        lo <span class="token operator">=</span> hi <span class="token operator">=</span> x<span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                ans <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token function">dp</span><span class="token punctuation">(</span>k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> lo <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">dp</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> n <span class="token operator">-</span> lo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                   <span class="token function">max</span><span class="token punctuation">(</span><span class="token function">dp</span><span class="token punctuation">(</span>k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> hi <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">dp</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> n <span class="token operator">-</span> hi<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            memo<span class="token punctuation">[</span>n <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">+</span> k<span class="token punctuation">]</span> <span class="token operator">=</span> ans<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> memo<span class="token punctuation">[</span>n <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">+</span> k<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">public</span><span class="token operator">:</span>    <span class="token keyword">int</span> <span class="token function">superEggDrop</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">dp</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    <span class="token keyword">int</span> <span class="token function">superEggDrop</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> dp<span class="token punctuation">[</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> k<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> dp2<span class="token punctuation">[</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>             dp2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> m <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>m<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;</span> m <span class="token operator">&amp;&amp;</span> <span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dp2<span class="token punctuation">[</span>m <span class="token operator">-</span> x<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">,</span> dp2<span class="token punctuation">[</span>m <span class="token operator">-</span> x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    x<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                dp2<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dp2<span class="token punctuation">[</span>m <span class="token operator">-</span> x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> m <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>m<span class="token punctuation">)</span> <span class="token punctuation">{</span>                dp<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">=</span> dp2<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    <span class="token keyword">int</span> <span class="token function">superEggDrop</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        vector<span class="token operator">&lt;</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;&gt;</span> <span class="token function">f</span><span class="token punctuation">(</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token generic-function"><span class="token function">vector</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> k<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>            f<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> k<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>                f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> f<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> f<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>                ans <span class="token operator">=</span> i<span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ans<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>题目链接：<a href="https://leetcode.com/problems/super-egg-drop/">https://leetcode.com/problems/super-egg-drop/</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C++ </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> 记忆化 </tag>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode第72题（动态规划）：编辑距离</title>
      <link href="/posts/48676.html"/>
      <url>/posts/48676.html</url>
      
        <content type="html"><![CDATA[<h1 id="LeetCode第72题（动态规划）：编辑距离"><a href="#LeetCode第72题（动态规划）：编辑距离" class="headerlink" title="LeetCode第72题（动态规划）：编辑距离"></a>LeetCode第72题（动态规划）：编辑距离</h1><p>========================</p><p>题目如下：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220209LeetCode%E7%AC%AC72%E9%A2%98%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89%EF%BC%9A%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB/1.png"></p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">72. 编辑距离Given two strings word1 and word2, return the minimum number of operations required to convert word1 to word2.You have the following three operations permitted on a word:Insert a characterDelete a characterReplace a character Example 1:Input: word1 = "horse", word2 = "ros"Output: 3Explanation: horse -&gt; rorse (replace 'h' with 'r')rorse -&gt; rose (remove 'r')rose -&gt; ros (remove 'e')Example 2:Input: word1 = "intention", word2 = "execution"Output: 5Explanation: intention -&gt; inention (remove 't')inention -&gt; enention (replace 'i' with 'e')enention -&gt; exention (replace 'n' with 'x')exention -&gt; exection (replace 'n' with 'c')exection -&gt; execution (insert 'u') Constraints:0 &lt;= word1.length, word2.length &lt;= 500word1 and word2 consist of lowercase English letters.给你两个单词 word1 和 word2， 请返回将 word1 转换成 word2 所使用的最少操作数  。你可以对一个单词进行如下三种操作：插入一个字符删除一个字符替换一个字符 示例 1：输入：word1 = "horse", word2 = "ros"输出：3解释：horse -&gt; rorse (将 'h' 替换为 'r')rorse -&gt; rose (删除 'r')rose -&gt; ros (删除 'e')示例 2：输入：word1 = "intention", word2 = "execution"输出：5解释：intention -&gt; inention (删除 't')inention -&gt; enention (将 'i' 替换为 'e')enention -&gt; exention (将 'n' 替换为 'x')exention -&gt; exection (将 'n' 替换为 'c')exection -&gt; execution (插入 'u') 提示：0 &lt;= word1.length, word2.length &lt;= 500word1 和 word2 由小写英文字母组成<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    <span class="token keyword">int</span> <span class="token function">minDistance</span><span class="token punctuation">(</span>string word1<span class="token punctuation">,</span> string word2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> word1<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> word2<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        vector<span class="token operator">&lt;</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;&gt;</span> <span class="token function">dp</span><span class="token punctuation">(</span>m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token generic-function"><span class="token function">vector</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//int dp[m+1][n+1];</span>        dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>word1<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> word2<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token function">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> dp<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>心得： 这是一道比较经典的动规题，难度偏中等，主要是找到初始条件，找到dp[i][j] = dp[i-1][j-1]和dp[i][j] = min(min(dp[i-1][j-1], dp[i-1][j]),dp[i][j-1])+1这两个状态转移方程，下面是我摘取的别人的思路。</code></p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">步骤一、定义数组元素的含义由于我们的目的求将 word1 转换成 word2 所使用的最少操作数 。那我们就定义 dp[i] [j]的含义为：当字符串 word1 的长度为 i，字符串 word2 的长度为 j 时，将 word1 转化为 word2 所使用的最少操作次数为 dp[i] [j]。有时候，数组的含义并不容易找，所以还是那句话，我给你们一个套路，剩下的还得看你们去领悟。步骤二：找出关系数组元素间的关系式接下来我们就要找 dp[i] [j] 元素之间的关系了，比起其他题，这道题相对比较难找一点，但是，不管多难找，大部分情况下，dp[i] [j] 和 dp[i-1] [j]、dp[i] [j-1]、dp[i-1] [j-1] 肯定存在某种关系。因为我们的目标就是，从规模小的，通过一些操作，推导出规模大的。对于这道题，我们可以对 word1 进行三种操作插入一个字符删除一个字符替换一个字符由于我们是要让操作的次数最小，所以我们要寻找最佳操作。那么有如下关系式：一、如果我们 word1[i] 与 word2 [j] 相等，这个时候不需要进行任何操作，显然有 dp[i] [j] = dp[i-1] [j-1]。（别忘了 dp[i] [j] 的含义哈）。二、如果我们 word1[i] 与 word2 [j] 不相等，这个时候我们就必须进行调整，而调整的操作有 3 种，我们要选择一种。三种操作对应的关系试如下（注意字符串与字符的区别）：（1）、如果把字符 word1[i] 替换成与 word2[j] 相等，则有 dp[i] [j] = dp[i-1] [j-1] + 1;（2）、如果在字符串 word1末尾插入一个与 word2[j] 相等的字符，则有 dp[i] [j] = dp[i] [j-1] + 1;（3）、如果把字符 word1[i] 删除，则有 dp[i] [j] = dp[i-1] [j] + 1;那么我们应该选择一种操作，使得 dp[i] [j] 的值最小，显然有dp[i] [j] = min(dp[i-1] [j-1]，dp[i] [j-1]，dp[[i-1] [j]]) + 1;于是，我们的关系式就推出来了，步骤三、找出初始值显然，当 dp[i] [j] 中，如果 i 或者 j 有一个为 0，那么还能使用关系式吗？答是不能的，因为这个时候把 i - 1 或者 j - 1，就变成负数了，数组就会出问题了，所以我们的初始值是计算出所有的 dp[0] [0….n] 和所有的 dp[0….m] [0]。这个还是非常容易计算的，因为当有一个字符串的长度为 0 时，转化为另外一个字符串，那就只能一直进行插入或者删除操作了。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>题目链接：<a href="https://leetcode.com/problems/edit-distance/">https://leetcode.com/problems/edit-distance/</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C++ </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> 记忆化 </tag>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode第64题（动态规划）：最小路径和</title>
      <link href="/posts/24103.html"/>
      <url>/posts/24103.html</url>
      
        <content type="html"><![CDATA[<h1 id="LeetCode第64题（动态规划）：最小路径和"><a href="#LeetCode第64题（动态规划）：最小路径和" class="headerlink" title="LeetCode第64题（动态规划）：最小路径和"></a>LeetCode第64题（动态规划）：最小路径和</h1><p>========================</p><p>题目如下：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220130LeetCode%E7%AC%AC64%E9%A2%98%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89%EF%BC%9A%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E5%92%8C/1.png"></p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">64. 最小路径和给定一个包含非负整数的 m x n 网格 grid ，请找出一条从左上角到右下角的路径，使得路径上的数字总和为最小。说明：每次只能向下或者向右移动一步。 示例 1：输入：grid = [[1,3,1],[1,5,1],[4,2,1]]输出：7解释：因为路径 1→3→1→1→1 的总和最小。示例 2：输入：grid = [[1,2,3],[4,5,6]]输出：12 提示：m == grid.lengthn == grid[i].length1 &lt;= m, n &lt;= 2000 &lt;= grid[i][j] &lt;= 100<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    <span class="token keyword">int</span> <span class="token function">minPathSum</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;&gt;</span><span class="token operator">&amp;</span> grid<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> grid<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        vector<span class="token operator">&lt;</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;&gt;</span> <span class="token function">dp</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> <span class="token generic-function"><span class="token function">vector</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> dp<span class="token punctuation">[</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="复杂度分析"><a href="#复杂度分析" class="headerlink" title="复杂度分析"></a>复杂度分析</h3><ul><li>时间复杂度：O(mn)。</li><li>空间复杂度：O(mn)，其中 m 和 n 分别是网格的行数和列数。创建一个二维数组dp，和网格大小相同。<br>空间复杂度可以优化，例如每次只存储上一行的dp 值，则可以将空间复杂度优化到 O(n)。</li></ul><p><code>心得： 这是一道比较经典的动规题，难度偏简单，和第62题有着异曲同工之妙，主要是找到初始条件，找到dp[i][j] = min(dp[i][j-1] + grid[i][j], dp[i-1][j] + grid[i][j])这么一个关系，如果求最大，则用max。这个解法和官方思路是一样的。</code></p><p>我看到一种别人写的Python解法，思路是一样，代码却是简洁不少，但它的用时和内存都超过C++代码。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">minPathSum</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> grid<span class="token punctuation">)</span><span class="token punctuation">:</span>        dp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">'inf'</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>        dp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> row <span class="token keyword">in</span> grid<span class="token punctuation">:</span>            <span class="token keyword">for</span> idx<span class="token punctuation">,</span> num <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">:</span>                dp<span class="token punctuation">[</span>idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> num        <span class="token keyword">return</span> dp<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>题目链接：<a href="https://leetcode-cn.com/problems/minimum-path-sum/">https://leetcode-cn.com/problems/minimum-path-sum/</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C++ </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> 记忆化 </tag>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode第62题（动态规划）：不同路径</title>
      <link href="/posts/22189.html"/>
      <url>/posts/22189.html</url>
      
        <content type="html"><![CDATA[<h1 id="LeetCode第62题（动态规划）：不同路径"><a href="#LeetCode第62题（动态规划）：不同路径" class="headerlink" title="LeetCode第62题（动态规划）：不同路径"></a>LeetCode第62题（动态规划）：不同路径</h1><p>========================</p><p>题目如下：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220130LeetCode%E7%AC%AC62%E9%A2%98%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89%EF%BC%9A%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84/1.png"></p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">62. 不同路径一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为 “Finish” ）。问总共有多少条不同的路径？ 示例 1：输入：m = 3, n = 7输出：28示例 2：输入：m = 3, n = 2输出：3解释：从左上角开始，总共有 3 条路径可以到达右下角。1. 向右 -&gt; 向下 -&gt; 向下2. 向下 -&gt; 向下 -&gt; 向右3. 向下 -&gt; 向右 -&gt; 向下示例 3：输入：m = 7, n = 3输出：28示例 4：输入：m = 3, n = 3输出：6 提示：1 &lt;= m, n &lt;= 100题目数据保证答案小于等于 2 * 109<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="我的代码"><a href="#我的代码" class="headerlink" title="我的代码"></a>我的代码</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    <span class="token keyword">int</span> <span class="token function">uniquePaths</span><span class="token punctuation">(</span><span class="token keyword">int</span> m<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> dp<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">//dp[0][0] = 1;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token comment">//cout&lt;&lt; i &lt;&lt;"  "&lt;&lt; j &lt;&lt;"  "&lt;&lt;dp[i-1][j]&lt;&lt;" "&lt;&lt;dp[i][j-1]&lt;&lt;"  "&lt;&lt;dp[i][j]&lt;&lt;endl;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token comment">//        for(int i=0;i&lt;m;i++){</span><span class="token comment">//            for(int j=0;j&lt;n;j++){</span><span class="token comment">//                //cout&lt;&lt; i &lt;&lt;"  "&lt;&lt; j &lt;&lt;"  "&lt;&lt;dp[i-1][j]&lt;&lt;" "&lt;&lt;dp[i][j-1]&lt;&lt;"  "&lt;&lt;dp[i][j]&lt;&lt;endl;</span><span class="token comment">//            }</span><span class="token comment">//        }</span>        <span class="token comment">//cout &lt;&lt; dp[m-1][n-1];</span>        <span class="token keyword">return</span> dp<span class="token punctuation">[</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="复杂度分析"><a href="#复杂度分析" class="headerlink" title="复杂度分析"></a>复杂度分析</h3><ul><li>时间复杂度：O(mn)。</li><li>空间复杂度：O(mn)，即为存储所有状态需要的空间。注意到 f(i, j)仅与第 i 行和第 i-1 行的状态有关，因此我们可以使用滚动数组代替代码中的二维数组，使空间复杂度降低为 O(n)。此外，由于我们交换行列的值并不会对答案产生影响，因此我们总可以通过交换 m 和 n 使得 m≤n，这样空间复杂度降低至 O(min(m,n))。</li></ul><p><code>心得： 这是一道比较经典的动规题，难度偏简单，主要是找到dp[i][j] = dp[i-1][j] + dp[i][j-1]这样一个关系，那么问题便能迎刃而解。我的解法用了双循环，应该是可以进一步优化的，虽然代码AC了，但还未达到最优时间复杂度。</code></p><h2 id="官方方法二：组合数学"><a href="#官方方法二：组合数学" class="headerlink" title="官方方法二：组合数学"></a>官方方法二：组合数学</h2><h3 id="思路与算法"><a href="#思路与算法" class="headerlink" title="思路与算法"></a>思路与算法</h3><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220130LeetCode%E7%AC%AC62%E9%A2%98%EF%BC%88%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%89%EF%BC%9A%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84/2.png"></p><h5 id="C-代码"><a href="#C-代码" class="headerlink" title="C++代码"></a>C++代码</h5><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span><span class="token keyword">public</span><span class="token operator">:</span>    <span class="token keyword">int</span> <span class="token function">uniquePaths</span><span class="token punctuation">(</span><span class="token keyword">int</span> m<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">long</span> <span class="token keyword">long</span> ans <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> x <span class="token operator">=</span> n<span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> y <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> <span class="token operator">++</span>x<span class="token punctuation">,</span> <span class="token operator">++</span>y<span class="token punctuation">)</span> <span class="token punctuation">{</span>            ans <span class="token operator">=</span> ans <span class="token operator">*</span> x <span class="token operator">/</span> y<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ans<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a>Java代码</h5><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">uniquePaths</span><span class="token punctuation">(</span><span class="token keyword">int</span> m<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">long</span> ans <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> x <span class="token operator">=</span> n<span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> y <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> <span class="token operator">++</span>x<span class="token punctuation">,</span> <span class="token operator">++</span>y<span class="token punctuation">)</span> <span class="token punctuation">{</span>            ans <span class="token operator">=</span> ans <span class="token operator">*</span> x <span class="token operator">/</span> y<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> ans<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="Python3代码"><a href="#Python3代码" class="headerlink" title="Python3代码"></a>Python3代码</h5><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">uniquePaths</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> m<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> n<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> comb<span class="token punctuation">(</span>m <span class="token operator">+</span> n <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="复杂度分析-1"><a href="#复杂度分析-1" class="headerlink" title="复杂度分析"></a>复杂度分析</h3><ul><li><p>时间复杂度：O(min(m,n))。由于我们交换行列的值并不会对答案产生影响，因此我们总可以通过交换 m 和 n 使得 m≤n，这样空间复杂度降低至 O(min(m,n))。</p></li><li><p>空间复杂度：O(1)。</p></li></ul><p><code>心得： 官方这种解法就离谱，，，，，用Python简直就是秒解。</code><br>题目链接：<a href="https://leetcode-cn.com/problems/unique-paths/">https://leetcode-cn.com/problems/unique-paths/</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C++ </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> 记忆化 </tag>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决动态规划问题的思考过程摘录</title>
      <link href="/posts/7211.html"/>
      <url>/posts/7211.html</url>
      
        <content type="html"><![CDATA[<h1 id="解决动态规划问题的思考过程摘录"><a href="#解决动态规划问题的思考过程摘录" class="headerlink" title="解决动态规划问题的思考过程摘录"></a>解决动态规划问题的思考过程摘录</h1><p>========================</p><p>心得： 这里的记忆化颇有意思，dp[i]如果之前计算过，且不为-1，则直接返回dp[i]。如未计算过则计算且只计算一次dp[i]，也就是说，本来递归需要大量重复的计算，却因为之前已经记录了该值而能直接得到结果。给我感觉是提前记录需要重复计算的值，从而提高效率。这种方法配合递归比较细节，着实让人眼前一亮。</p><p>摘录：</p><p>让我们先从一道例题开始</p><p>题目：300.最长上升子序列</p><p>描述：</p><p>给定一个无序的整数数组，找到其中最长上升子序列的长度。</p><p>示例：</p><p>输入: [10,9,2,5,3,7,101,18]<br>输出: 4<br>解释: 最长的上升子序列是 [2,3,7,101]，它的长度是4。</p><h2 id="考虑能否将问题规模减小"><a href="#考虑能否将问题规模减小" class="headerlink" title="考虑能否将问题规模减小"></a>考虑能否将问题规模减小</h2><p>将问题规模减小的方式有很多种，一些典型的减小方式是动态规划分类的依据，例如线性，区间，树形等。这里考虑数组上常用的两种思路：</p><ul><li>每次减少一半：如果每次将问题规模减少一半，原问题有[10,9,2,5]，和[3,7,101,18]，两个子问题的最优解分别为 [2,5] 和 [3,7,101]，但是找不到好的组合方式将两个子问题最优解组合为原问题最优解 [2,5,7,101]。</li><li>每次减少一个：记 f(n) 为以第 nn 个数结尾的最长子序列，每次减少一个，将原问题分为f(n−1), f(n-2), …, f(1)，共 n - 1n−1 个子问题。n - 1 = 7n−1=7 个子问题以及答案如下：</li></ul><ul><li>[10, 9, 2, 5, 3, 7, 101] -&gt; [2, 5, 7, 101]</li><li>[10, 9, 2, 5, 3, 7] -&gt; [2, 5, 7]</li><li>[10, 9, 2, 5, 3] -&gt; [2, 3]</li><li>[10, 9, 2, 5] -&gt; [2, 5]</li><li>[10, 9, 2] -&gt; [2]</li><li>[10, 9] -&gt; [9]</li><li>[10] -&gt; [10]</li></ul><p>已经有 7 个子问题的最优解之后，可以发现一种组合方式得到原问题的最优解：f(6)的结果 [2,5,7], 7 &lt; 187&lt;18，同时长度也是 f(1)~f(7) 中，结尾小于 18 的结果中最长的。f(7)虽然长度为 4 比 f(6)长，但结尾是不小于 18 的，无法组合成原问题的解。<br>以上组合方式可以写成一个式子，即状态转移方程</p><p>f(n)=maxf(i)+1&nbsp;其中&nbsp;i&lt;n&nbsp;且&nbsp;a[i]&lt;a[n]</p><p>这种思考如何通过f(1)…f(n-1)求出 f(n)的过程实际就是在思考状态转移方程怎么写。</p><p>总结： 解决动态规划问题最难的地方有两点：</p><ul><li>如何定义 f(n)</li><li>如何通过 f(1), f(2), … f(n−1) 推导出f(n)，即状态转移方程<h2 id="1-递归"><a href="#1-递归" class="headerlink" title="1. 递归"></a>1. 递归</h2>有了状态转移方程，实际上已经可以直接用递归进行实现了。<pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">int</span> <span class="token function">f</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token operator">&amp;</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        ¦   a <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token function">f</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> j<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> a<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-自顶向下（记忆化）"><a href="#2-自顶向下（记忆化）" class="headerlink" title="2. 自顶向下（记忆化）"></a>2. 自顶向下（记忆化）</h2>递归的解法需要非常多的重复计算，如果有一种办法能避免这些重复计算，可以节省大量计算时间。记忆化就是基于这个思路的算法。在递归地求解子问题 f(1)f(1), f(2)f(2)… 过程中，将结果保存到一个表里，在后续求解子问题中如果遇到求过结果的子问题，直接查表去得到答案而不计算。<pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">int</span> <span class="token function">f</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token operator">&amp;</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token operator">&amp;</span> dp<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        ¦   a <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token function">f</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> j<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">;</span>    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-自底向上（迭代）"><a href="#3-自底向上（迭代）" class="headerlink" title="3. 自底向上（迭代）"></a>3. 自底向上（迭代）</h2>在自顶向下的算法中，由于递归的存在，程序运行时有额外的栈的消耗。</li></ul><p>有了状态转移方程，我们就知道如何从最小的问题规模入手，然后不断地增加问题规模，直到所要求的问题规模为止。在这个过程中，我们同样地可以记忆每个问题规模的解来避免重复的计算。这种方法就是自底向上的方法，由于避免了递归，这是一种更好的办法。</p><p>但是迭代法需要有一个明确的迭代方向，例如线性，区间，树形，状态压缩等比较主流的动态规划问题中，迭代方向都有相应的模式。参考后面的例题。但是有一些问题迭代法方向是不确定的，这时可以退而求其次用记忆化来做。</p><p>链接：<a href="https://leetcode-cn.com/leetbook/read/dynamic-programming-1-plus/xcos8s/">https://leetcode-cn.com/leetbook/read/dynamic-programming-1-plus/xcos8s/</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C++ </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> 记忆化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo进阶之各种优化摘录</title>
      <link href="/posts/36046.html"/>
      <url>/posts/36046.html</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo进阶之各种优化摘录"><a href="#Hexo进阶之各种优化摘录" class="headerlink" title="Hexo进阶之各种优化摘录"></a>Hexo进阶之各种优化摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220121Hexo%E8%BF%9B%E9%98%B6%E4%B9%8B%E5%90%84%E7%A7%8D%E4%BC%98%E5%8C%96%E6%91%98%E5%BD%95/1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 脚本语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
            <tag> 博文 </tag>
            
            <tag> hexo </tag>
            
            <tag> ejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Hexo的matery主题搭建博客并深度优化摘录</title>
      <link href="/posts/46171.html"/>
      <url>/posts/46171.html</url>
      
        <content type="html"><![CDATA[<h1 id="基于Hexo的matery主题搭建博客并深度优化摘录"><a href="#基于Hexo的matery主题搭建博客并深度优化摘录" class="headerlink" title="基于Hexo的matery主题搭建博客并深度优化摘录"></a>基于Hexo的matery主题搭建博客并深度优化摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/strange/1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 脚本语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
            <tag> 博文 </tag>
            
            <tag> hexo </tag>
            
            <tag> ejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git Large File Storage摘录</title>
      <link href="/posts/55425.html"/>
      <url>/posts/55425.html</url>
      
        <content type="html"><![CDATA[<h1 id="git-Large-File-Storage摘录"><a href="#git-Large-File-Storage摘录" class="headerlink" title="git Large File Storage摘录"></a>git Large File Storage摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220120gitLargeFileStorage%E6%91%98%E5%BD%95/gitLargeFileStorage%E6%91%98%E5%BD%95.png"></p>]]></content>
      
      
      <categories>
          
          <category> 版本控制git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo文件名大小写问题摘录</title>
      <link href="/posts/12645.html"/>
      <url>/posts/12645.html</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo文件名大小写问题摘录"><a href="#Hexo文件名大小写问题摘录" class="headerlink" title="Hexo文件名大小写问题摘录"></a>Hexo文件名大小写问题摘录</h1><p>========================<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220119Hexo%E6%96%87%E4%BB%B6%E5%90%8D%E5%A4%A7%E5%B0%8F%E5%86%99%E9%97%AE%E9%A2%98/1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 脚本语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
            <tag> 博文 </tag>
            
            <tag> hexo </tag>
            
            <tag> ejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>动态规划之状态压缩</title>
      <link href="/posts/49630.html"/>
      <url>/posts/49630.html</url>
      
        <content type="html"><![CDATA[<h1 id="动态规划之状态压缩摘录"><a href="#动态规划之状态压缩摘录" class="headerlink" title="动态规划之状态压缩摘录"></a>动态规划之状态压缩摘录</h1><p>========================</p><h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><h4 id="1-状态压缩"><a href="#1-状态压缩" class="headerlink" title="1.状态压缩"></a>1.状态压缩</h4><p><code>状态压缩</code>就是使用某种方法，简明扼要地以最小代价来表示某种状态，通常是用一串01数字（二进制数）来表示各个点的状态。这就要求使用状态压缩的对象的点的状态必须只有两种，0 或 1；当然如果有三种状态用三进制来表示也未尝不可。</p><h4 id="2-使用条件"><a href="#2-使用条件" class="headerlink" title="2.使用条件"></a>2.使用条件</h4><p>从状态压缩的特点来看，这个算法适用的题目符合以下的条件：</p><ul><li><code>解法需要保存一定的状态数据</code>（表示一种状态的一个数据值），每个状态数据通常情况下是可以通过2进制来表示的。这就要求状态数据的每个单元只有两种状态，比如说棋盘上的格子，放棋子或者不放，或者是硬币的正反两面。这样用0或者1来表示状态数据的每个单元，而<code>整个状态数据就是一个一串0和1组成的二进制数</code>。</li><li>解法需要将状态数据实现为一个基本数据类型，比如int，long等等，即所谓的状态压缩。状态压缩的目的一方面是<code>缩小了数据存储的空间</code>，另一方面是在<code>状态对比和状态整体处理时能够提高效率</code>。这样就要求状态数据中的单元个数不能太大，比如用int来表示一个状态的时候，状态的单元个数不能超过32（32位的机器），所以题目一般都是至少有一维的数据范围很小。</li></ul><h4 id="3-状压DP"><a href="#3-状压DP" class="headerlink" title="3.状压DP"></a>3.状压DP</h4><p>状压DP，顾名思义，就是使用状态压缩的动态规划。</p><p>动态规划问题通常有两种，一种是对递归问题的记忆化求解，另一种是把大问题看作是多阶段的决策求解。这里用的便是后一种，这带来一个需求，即存储之前的状态，再由状态及状态对应的值推演出状态转移方程最终得到最优解。</p><h2 id="二、位运算"><a href="#二、位运算" class="headerlink" title="二、位运算"></a>二、位运算</h2><p>一般基础的状压就是将一行的状态压成一个数，这个数的二进制形式反映了这一行的情况。由于使用二进制数来保存被压缩的状态，所以要用到神奇的二进制位运算操作，将一个十进制数转成二进制进行位运算操作再转回十进制数。包括：</p><ul><li>按位与&amp;（有0为0，其实就是且）</li><li>按位或|（有1为1，其实就是或）</li><li>按位取反~（注意负数补码的符号，最前面的第一位是1）</li><li>异或^（相同为0，不同为1）</li><li>左移&lt;&lt;</li><li>右移&gt;&gt;</li></ul><p>常见操作：</p><ul><li>判断x是奇数还是偶数：(x&amp;1)==0</li><li>x乘以一个2的n次方的数：x&lt;&lt;n</li><li>x除以一个2的n次方的数：x&gt;&gt;n</li><li>消去x最后一位的1：x&amp;(x-1)</li><li>求x的相反数： <del>(x-1)或者</del>x+1</li><li>x的异或操作：~x = -x-1</li><li>把x从右边数第n位变1：x|(1&lt;&lt;(n-1))（n从1开始）</li><li>把x从右边数第n位变0：x&amp;(~(1&lt;&lt;(n-1)))（n从1开始）</li><li>取x最后n位的值：x&amp;((1&lt;&lt;n)-1)</li><li>取x前n位的值，后面的全部置为0：x &amp; (~((1 &lt;&lt; (32 - n)) - 1))</li><li>只保留x右边第一个1，其他的全部置为0：x &amp; (-x) 或 x &amp; ~(x - 1)</li><li>判断x的第n位是偶数还是奇数：(x &amp; (1 &lt;&lt; (n - 1))) == 0</li><li>求x的绝对值：(n ^ (n &gt;&gt; 31)) - (n &gt;&gt; 31) 或 (x &gt;&gt; 31) == 0 ? x : (~x + 1) 或 (x + (x &gt;&gt; 31)) ^ (x &gt;&gt; 31)</li><li>求两个数的最大数：(x &amp; ((y - x) &gt;&gt; 31)) | (y &amp; (~(y - x) &gt;&gt; 31))</li><li>返回x的符号：(i &gt;&gt; 31) | (-i &gt;&gt;&gt; 31)（正数为1，负数为-1）</li><li>两数相加：(x | y) + (x &amp; y) 或 (x ^ y) + ((x &amp; y) &lt;&lt; 1)</li><li>两数相减：(x &amp; <del>y) - (</del>x &amp; y)</li><li>求两数的平均数：(x &amp; y) + ((x ^ y) &gt;&gt; 1) 或 (x + y) &gt;&gt; 1</li><li>判断一个数是不是2的次幂：(x != 0) &amp;&amp; (x &amp; (x - 1)) == 0</li><li>x对2的n次方求余：x &amp; (2^n - 1)（这里的^是幂的次方）</li><li>判断x和y的符号是否相同：(a ^ b) &gt;= 0</li><li>if(x == a) x = b; if(x == b) x = a：用异或运算符：x = a ^ b ^ x</li></ul><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220116%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E4%B9%8B%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9/1.png"></p><p>初试化状态的时候要看清条件，什么要，什么不要。<br>一般情况下要预处理前k行（k由题目定）。<br>Dp时题目给的条件和fit函数、state数组都要检查。</p><p>最最重要的一点：</p><blockquote><p>位反（~ )  &gt;  算术  &gt;  位左移、位右移  &gt;  关系运算<br>&gt;位与  &gt;  位或  &gt;  位异或  &gt;  逻辑运算</p></blockquote><p>所以一般位运算最好打括号。</p><h2 id="三、例题引入"><a href="#三、例题引入" class="headerlink" title="三、例题引入"></a>三、例题引入</h2><h4 id="【例1】填满棋盘"><a href="#【例1】填满棋盘" class="headerlink" title="【例1】填满棋盘"></a>【例1】填满棋盘</h4><p>有一个NM(N&lt;=5,M&lt;=1000)的棋盘，现在有12及2*1的小木块无数个，要盖满整个棋盘，有多少种方式？答案只需要mod1,000,000,007即可。</p><p>例如：对于一个22的棋盘，有两种方法，一种是使用2个12的，一种是使用2个2*1的。</p><p><code>【算法分析】</code></p><p>在这道题目中,N和M的范围本应该是一样的，但实际上，N和M的范围却差别甚远，对于这种题目，首先应该想到的就是，正确算法与这两个范围有关！N的范围特别小，因此可以考虑使用状态压缩动态规划的思想，请看下面的图：</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20220116%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E4%B9%8B%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9/2.png"></p><p>本思路来自博客，不过原博没有图，我帮他补个图，再优化一下内容。</p><p>假设第一列已经填满，则第二列的摆设方式，只与第一列对第二列的影响有关。同理，第三列的摆设方式也只与第二列对它的影响有关。那么，使用一个长度为NN的二进制数statestate来表示这个影响，例如：4(00100)就表示了图上第二列的状态。</p><p>因此，本题的状态可以这样表示：</p><p>dp[i][state]表示该填充第 ii 列，第 i-1i−1 列对它的影响是 statestate 的时候的方法数。i&lt;=M,0&lt;=state&lt;2^Ni&lt;=M,0&lt;=state&lt;2<br>N</p><p>对于每一列，情况数也有很多，但由于 NN 很小，所以可以采取搜索的办法去处理。对于每一列，搜索所有可能的放木块的情况，并记录它对下一列的影响，之后更新状态。状态转移方程如下：</p><p>dp[i][state]=∑dp[i-1][pre] 每一个prepre可以通过填放成为statestate</p><p>对于每一列的深度优先搜索，写法如下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">//第i列，枚举到了第j行，当前状态是state，对下一列的影响是nex</span><span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span>ll i<span class="token punctuation">,</span>ll j<span class="token punctuation">,</span>ll state<span class="token punctuation">,</span>ll nex<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">==</span>n<span class="token punctuation">)</span><span class="token comment">//最后一行</span>    <span class="token punctuation">{</span>        dp<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>nex<span class="token punctuation">]</span><span class="token operator">+=</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>state<span class="token punctuation">]</span><span class="token punctuation">;</span>        dp<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>nex<span class="token punctuation">]</span><span class="token operator">%=</span>mod<span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//如果这个位置（第j行）已经被上一列给站了（state的第j位为1），所以就直接跳过</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>state<span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>j<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>state<span class="token punctuation">,</span>nex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//如果这个位置是空的，那么就尝试放一个1*2的棋子</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>state<span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>j<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>state<span class="token punctuation">,</span>nex<span class="token operator">|</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//（使nex的第j位变成1）</span>    <span class="token comment">//如果这个位置以及下一行都空的，那么就放一个2*1的棋子并直接跳到下下行</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span>n<span class="token operator">&amp;&amp;</span>state<span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>j<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>state<span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//注意要特判第j行下面是否还有一行</span>        <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">,</span>state<span class="token punctuation">,</span>nex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最终，答案就是dp[M+1][0]。<br>完整代码</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span><span class="token keyword">const</span> ll N<span class="token operator">=</span><span class="token number">2000</span><span class="token operator">+</span><span class="token number">7</span><span class="token punctuation">;</span><span class="token keyword">const</span> ll mod<span class="token operator">=</span><span class="token number">1000000007</span><span class="token punctuation">;</span>ll n<span class="token punctuation">,</span>m<span class="token punctuation">;</span>ll dp<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//dp[i][state]; 铺满前i-1列的所有方案数</span><span class="token comment">//第i列，枚举到了第j行，当前状态是state，对下一列的影响是nex</span><span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span>ll i<span class="token punctuation">,</span>ll j<span class="token punctuation">,</span>ll state<span class="token punctuation">,</span>ll nex<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">==</span>n<span class="token punctuation">)</span><span class="token comment">//最后一行</span>    <span class="token punctuation">{</span>        dp<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>nex<span class="token punctuation">]</span><span class="token operator">+=</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>state<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//nex一直接受前面的变化直到最后一行当前的可能性已经遍历完了就+上即可</span>        dp<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>nex<span class="token punctuation">]</span><span class="token operator">%=</span>mod<span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>     <span class="token comment">//如果这个位置（第j行）已经被上一列给占了（state的第j位为1），所以就直接跳过</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>j<span class="token punctuation">)</span><span class="token operator">&amp;</span>state<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>state<span class="token punctuation">,</span>nex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//不会对下一列有什么影响</span>     <span class="token comment">//如果这个位置是空的，那么就尝试放一个1*2的棋子</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>j<span class="token punctuation">)</span><span class="token operator">&amp;</span>state<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>state<span class="token punctuation">,</span>nex<span class="token operator">|</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//（使nex的第j位变成1）横着放一个1*2的棋子会对下一列造成影响</span>     <span class="token comment">//如果这个位置以及下一行都空的，那么就放一个2*1的棋子并直接跳到下下行</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span>n<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>j<span class="token punctuation">)</span><span class="token operator">&amp;</span>state<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>state<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//注意要特判第j行下面是否还有一行,以及要加上足够的括号以免因为位运算的优先级问题而导致出bug</span>        <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">,</span>state<span class="token punctuation">,</span>nex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//不会对下一列造成影响</span>     <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%lld %lld"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">,</span><span class="token operator">&amp;</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>m<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token function">memset</span><span class="token punctuation">(</span>dp<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span> dp<span class="token punctuation">)</span><span class="token punctuation">;</span>        dp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//注意初始化</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span><span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token comment">//一共m列//枚举第i列 -&gt; 影响第i+1列</span>        <span class="token punctuation">{</span>            <span class="token comment">//注意1&lt;&lt;n结果是二进制，到for循环中会转换成十进制计算，这里最多也就是2的5次方，即32，可别以为是十进制的100000。</span>            <span class="token comment">//如下为遍历情况：</span><span class="token comment">//            *0 *0 *0 *0     *1 *1 *1 *1</span><span class="token comment">//            *0 *0 *0 *0     *1 *1 *1 *1</span><span class="token comment">//            *0 *0 *0 *0 ... *1 *1 *1 *1</span><span class="token comment">//            *0 *0 *1 *1     *0 *0 *1 *1</span><span class="token comment">//            *0 *1 *0 *1     *0 *1 *0 *1</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">++</span>j<span class="token punctuation">)</span><span class="token comment">//到2^n，遍历一遍，二进制会把所有填充的情况都列举一遍</span>            <span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">//如果存在方案数 -&gt; 则可以推广到i+1列</span>                    <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>j<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%lld\n"</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>要注意多加几个括号，能加就加，以免因为位运算的优先级问题而导致出bug。</p><h4 id="【例2】最小总代价（Vijos-1456）"><a href="#【例2】最小总代价（Vijos-1456）" class="headerlink" title="【例2】最小总代价（Vijos-1456）"></a>【例2】最小总代价（Vijos-1456）</h4><p>题目描述：</p><p>n个人在做传递物品的游戏,编号为1-n。</p><p>游戏规则是这样的：开始时物品可以在任意一人手上，他可把物品传递给其他人中的任意一位；下一个人可以传递给未接过物品的任意一人。</p><p>即物品只能经过同一个人一次，而且每次传递过程都有一个代价；不同的人传给不同的人的代价值之间没有联系；</p><p>求当物品经过所有n个人后，整个过程的总代价是多少。</p><p>输入格式：</p><p>第一行为n,表示共有n个人（16&gt;=n&gt;=2）；</p><p>以下为n*n的矩阵，第i+1行、第j列表示物品从编号为i的人传递到编号为j的人所花费的代价，特别的有第i+1行、第i列为-1（因为物品不能自己传给自己），其他数据均为正整数(&lt;=10000)。</p><p>(对于50%的数据，n&lt;=11)。</p><p>输出格式：</p><p>一个数，为最小的代价总和。</p><p>输入样例：</p><p>2</p><p>-1 9794</p><p>2724 –1</p><p>输出样例：</p><p>2724</p><p><code>【算法分析】</code></p><p>看到2&lt;=n&lt;=16，应想到此题和状态压缩dp有关。每个人只能够被传递一次，因此使用一个n位二进制数state来表示每个人是否已经被访问过了。但这还不够，因为从这样的状态中，并不能清楚地知道现在物品在谁 的手中，因此，需要在此基础上再增加一个状态now，表示物品在谁的手上。</p><p>dp[state][now]表示每个人是否被传递的状态是state，物品在now的手上的时候，最小的总代价。</p><p>初始状态为：dp[1&lt;&lt;i][i]=0；表示一开始物品在i手中。</p><p>所求状态为：min(dp[(1&lt;&lt;n)-1][j]); 0&lt;=j&lt;n</p><p>状态转移方程是：</p><p>dp[state][now]=min(dp[pre][t]+dist[now][t])；</p><p>pre表示的是能够到达state这个状态的一个状态，t能够传递物品给now且只有二进制下第t位与state不同。</p><p>状态的大小是O((2n)*n)，转移复杂度是O(n)。总的时间复杂度是O((2n)<em>n</em>n)。</p><p><code>【代码实现】</code></p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">/*ID:shijieyywdPROG:Vijos-1456LANG:c++*/</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstring&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector&gt;</span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAXN</span> <span class="token expression"><span class="token number">20</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">INF</span> <span class="token expression"><span class="token number">0x3f3f3f3f</span></span></span> <span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">int</span> edges<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> dp<span class="token punctuation">[</span><span class="token number">65546</span><span class="token punctuation">]</span><span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">int</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> b<span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> a<span class="token punctuation">;</span><span class="token keyword">return</span> a <span class="token operator">&lt;</span> b <span class="token operator">?</span> a <span class="token operator">:</span> b<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">freopen</span><span class="token punctuation">(</span><span class="token string">"p1456.in"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> <span class="token constant">stdin</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> t<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>edges<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">memset</span><span class="token punctuation">(</span>dp<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>dp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>dp<span class="token punctuation">[</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> i<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>i <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>dp<span class="token punctuation">[</span>i <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> k<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> k<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> edges<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> k<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> n<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> ans <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> k<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>ans <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> ans<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"0\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="【例3】胜利大逃亡-续-Hdoj-1429"><a href="#【例3】胜利大逃亡-续-Hdoj-1429" class="headerlink" title="【例3】胜利大逃亡(续)(Hdoj-1429)"></a>【例3】胜利大逃亡(续)(Hdoj-1429)</h4><p>题目描述：</p><p>Ignatius再次被魔王抓走了(搞不懂他咋这么讨魔王喜欢)……</p><p>这次魔王汲取了上次的教训，把Ignatius关在一个n*m的地牢里，并在地牢的某些地方安装了带锁的门，钥匙藏在地牢另外的某些地方。刚开始Ignatius被关在(sx,sy)的位置，离开地牢的门在(ex,ey)的位置。Ignatius每分钟只能从一个坐标走到相邻四个坐标中的其中一个。魔王每t分钟回地牢视察一次，若发现Ignatius不在原位置便把他拎回去。经过若干次的尝试，Ignatius已画出整个地牢的地图。现在请你帮他计算能否再次成功逃亡。只要在魔王下次视察之前走到出口就算离开地牢，如果魔王回来的时候刚好走到出口或还未到出口都算逃亡失败。</p><p>输入格式：</p><p>每组测试数据的第一行有三个整数n,m,t(2&lt;=n,m&lt;=20,t&gt;0)。接下来的n行m列为地牢的地图，其中包括:</p><p>. 代表路</p><ul><li>代表墙</li></ul><p>@ 代表Ignatius的起始位置</p><p>^ 代表地牢的出口</p><p>A-J 代表带锁的门,对应的钥匙分别为a-j</p><p>a-j 代表钥匙，对应的门分别为A-J</p><p>每组测试数据之间有一个空行。</p><p>输出格式：</p><p>针对每组测试数据，如果可以成功逃亡，请输出需要多少分钟才能离开，如果不能则输出-1。</p><p>输入样例：</p><p>4 5 17</p><p>@A.B.</p><p>a*.*.</p><p>*..*^</p><p>c..b*</p><p>输出样例：</p><p>16</p><p><code>【算法分析】</code></p><p>初看此题感觉十分像是宽度优先搜索（BFS），但搜索的过程中如何表示钥匙的拥有情况，却是个问题。借鉴状态压缩的思想，使用一个10位的二进制数state来表示此刻对10把钥匙的拥有情况，那么，dp[x][y][state]表示到达(x,y)，钥匙拥有状况为state的最短路径。另外，需要注意到一旦拥有了某一把钥匙，那个有门的位置就如履平地了。</p><p>代码的实现方式可以采用Spfa求最短路的方式。值得一提的是，Spfa算法本来就是一种求解最短路径问题的动态规划算法，本文假设读者已经非常熟悉Spfa等基础算法，在此处不再赘述。</p><p>状态压缩dp可以出现在各种算法中，本题就是典型的搜索算法和状态压缩dp算法结合的题目。另外，很多状态压缩dp本身就是通过搜索算法实现的状态转移。</p><p><code>【代码实现】</code></p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">/*ID:shijieyywdPROG:Hdu-1429LANG:c++*/</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstring&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;queue&gt;</span></span> <span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span> <span class="token keyword">struct</span> <span class="token class-name">Node</span><span class="token punctuation">{</span><span class="token keyword">int</span> x<span class="token punctuation">;</span><span class="token keyword">int</span> y<span class="token punctuation">;</span><span class="token keyword">int</span> step<span class="token punctuation">;</span><span class="token keyword">int</span> key<span class="token punctuation">;</span><span class="token function">Node</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token function">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">,</span> <span class="token keyword">int</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">x</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">y</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">step</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">key</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">,</span> t<span class="token punctuation">;</span><span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> door<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> key<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> Go<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">int</span> sx<span class="token punctuation">,</span> sy<span class="token punctuation">;</span><span class="token keyword">int</span> ex<span class="token punctuation">,</span> ey<span class="token punctuation">;</span><span class="token keyword">int</span> vis<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1049</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">bool</span> <span class="token function">canGo</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> x <span class="token operator">&lt;</span> n <span class="token operator">&amp;&amp;</span> y <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> y <span class="token operator">&lt;</span> m <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>arr<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>vis<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">&amp;</span> door<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> door<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">int</span> <span class="token function">bfs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">memset</span><span class="token punctuation">(</span>vis<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>vis<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>queue<span class="token operator">&lt;</span>Node<span class="token operator">&gt;</span> q<span class="token punctuation">;</span>Node s <span class="token operator">=</span> <span class="token function">Node</span><span class="token punctuation">(</span>sx<span class="token punctuation">,</span> sy<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>vis<span class="token punctuation">[</span>sx<span class="token punctuation">]</span><span class="token punctuation">[</span>sy<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>q<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>Node e <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">front</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>q<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>x <span class="token operator">==</span> ex <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>y <span class="token operator">==</span> ey<span class="token punctuation">)</span> <span class="token keyword">return</span> e<span class="token punctuation">.</span>step<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> nx <span class="token operator">=</span> e<span class="token punctuation">.</span>x <span class="token operator">+</span> Go<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> ny <span class="token operator">=</span> e<span class="token punctuation">.</span>y <span class="token operator">+</span> Go<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">canGo</span><span class="token punctuation">(</span>nx<span class="token punctuation">,</span> ny<span class="token punctuation">,</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>Node nex <span class="token operator">=</span> <span class="token function">Node</span><span class="token punctuation">(</span>nx<span class="token punctuation">,</span> ny<span class="token punctuation">,</span> e<span class="token punctuation">.</span>step <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>key <span class="token operator">|</span> key<span class="token punctuation">[</span>nx<span class="token punctuation">]</span><span class="token punctuation">[</span>ny<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>vis<span class="token punctuation">[</span>nx<span class="token punctuation">]</span><span class="token punctuation">[</span>ny<span class="token punctuation">]</span><span class="token punctuation">[</span>nex<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">~</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d %d %d\n"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>n<span class="token punctuation">,</span> <span class="token operator">&amp;</span>m<span class="token punctuation">,</span> <span class="token operator">&amp;</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">memset</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">memset</span><span class="token punctuation">(</span>door<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>door<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">memset</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">char</span> c<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%c"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">'*'</span><span class="token punctuation">)</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">'@'</span><span class="token punctuation">)</span> sx <span class="token operator">=</span> i<span class="token punctuation">,</span> sy <span class="token operator">=</span> j<span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">'^'</span><span class="token punctuation">)</span> ex <span class="token operator">=</span> i<span class="token punctuation">,</span> ey <span class="token operator">=</span> j<span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;=</span> <span class="token char">'a'</span> <span class="token operator">&amp;&amp;</span> c <span class="token operator">&lt;=</span> <span class="token char">'z'</span><span class="token punctuation">)</span> key<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>c <span class="token operator">-</span> <span class="token char">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;=</span> <span class="token char">'A'</span> <span class="token operator">&amp;&amp;</span> c <span class="token operator">&lt;=</span> <span class="token char">'Z'</span><span class="token punctuation">)</span> door<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>c <span class="token operator">-</span> <span class="token char">'A'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token function">bfs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>ans <span class="token operator">&lt;</span> t <span class="token operator">&amp;&amp;</span> ans<span class="token punctuation">)</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> ans<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"-1\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C++ </tag>
            
            <tag> 动态规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++标准库使用</title>
      <link href="/posts/44130.html"/>
      <url>/posts/44130.html</url>
      
        <content type="html"><![CDATA[<h1 id="C-标准库使用"><a href="#C-标准库使用" class="headerlink" title="C++标准库使用"></a>C++标准库使用</h1><p>========================</p><h2 id="测试了一些标准库提供的数据结构和函数等"><a href="#测试了一些标准库提供的数据结构和函数等" class="headerlink" title="测试了一些标准库提供的数据结构和函数等"></a>测试了一些标准库提供的数据结构和函数等</h2><p>值得一提的是那个自动推导<code>auto</code>用着非常舒服,可自动推导容器内的变量类型、函数的返回值类型等。<br>模板就不用说了，一行胜百行。需要大量重复的工作，还是建议用模板，模板的效率我还没时间去测试，不过不管怎么样，模板真方便。</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">template</span> <span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token keyword">auto</span> <span class="token function">printData</span><span class="token punctuation">(</span><span class="token keyword">const</span> T<span class="token operator">&amp;</span> v<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> i<span class="token operator">:</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>        cout<span class="token operator">&lt;&lt;</span>i<span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以下是.hpp文件和.cpp文件</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">//</span><span class="token comment">//  test.hpp</span><span class="token comment">//  Code</span><span class="token comment">//</span><span class="token comment">//  Created by 张赛东 on 2022/1/6.</span><span class="token comment">//</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">test_hpp</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">test_hpp</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"stdc++.hpp"</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> gg <span class="token operator">=</span> <span class="token keyword">long</span> <span class="token keyword">long</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> testThings<span class="token punctuation">;</span><span class="token keyword">public</span><span class="token operator">:</span>    <span class="token keyword">int</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">func2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/* test_hpp */</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">//</span><span class="token comment">//  test.cpp</span><span class="token comment">//  Code</span><span class="token comment">//</span><span class="token comment">//  Created by 张赛东 on 2022/1/6.</span><span class="token comment">//</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"test.hpp"</span></span><span class="token keyword">bool</span> <span class="token function">cmp</span><span class="token punctuation">(</span>gg a<span class="token punctuation">,</span> gg b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> a<span class="token operator">&lt;</span>b<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token keyword">struct</span> <span class="token class-name">Compare</span> <span class="token punctuation">{</span><span class="token comment">//    gg score;</span><span class="token comment">//    Compare(gg s):score(s){}</span>    <span class="token keyword">bool</span> <span class="token keyword">operator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">const</span> gg<span class="token operator">&amp;</span> s1<span class="token punctuation">,</span> <span class="token keyword">const</span> gg<span class="token operator">&amp;</span> s2<span class="token punctuation">)</span><span class="token keyword">const</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> s1 <span class="token operator">&lt;</span> s2<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">template</span> <span class="token operator">&lt;</span><span class="token keyword">typename</span> <span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token keyword">auto</span> <span class="token function">printData</span><span class="token punctuation">(</span><span class="token keyword">const</span> T<span class="token operator">&amp;</span> v<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//可能改变的话，就需要用引用&amp;, 引用可被修改，值类型固定</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> i<span class="token operator">:</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>        cout<span class="token operator">&lt;&lt;</span>i<span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">auto</span> <span class="token function">lowerBound1</span><span class="token punctuation">(</span>vector<span class="token operator">&lt;</span>gg<span class="token operator">&gt;</span><span class="token operator">&amp;</span> v<span class="token punctuation">,</span> gg left<span class="token punctuation">,</span> gg right<span class="token punctuation">,</span> gg x<span class="token punctuation">,</span> gg a<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>left<span class="token operator">&lt;</span>right<span class="token punctuation">)</span><span class="token punctuation">{</span>        gg mid <span class="token operator">=</span> <span class="token punctuation">(</span>left<span class="token operator">+</span>right<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>v<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token operator">&gt;</span>x<span class="token punctuation">)</span>            right<span class="token operator">=</span>mid<span class="token punctuation">;</span>        <span class="token keyword">else</span>            left<span class="token operator">=</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> left<span class="token operator">&gt;</span>right <span class="token operator">or</span> v<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token operator">&gt;</span>x<span class="token operator">?</span>left<span class="token operator">:</span>a<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token class-name">Test</span><span class="token double-colon punctuation">::</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    vector<span class="token operator">&lt;</span>gg<span class="token operator">&gt;</span>v<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment">//sort(v.begin(),v.end());</span>    <span class="token function">sort</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">rbegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>v<span class="token punctuation">.</span><span class="token function">rend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"V:\n"</span><span class="token punctuation">;</span>    <span class="token comment">//cout&lt;&lt;&amp;v&lt;&lt;"\n";</span><span class="token comment">//    for (gg i: v) {</span><span class="token comment">//        cout&lt;&lt;i&lt;&lt;" ";</span><span class="token comment">//    }</span>    <span class="token function">printData</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">reverse</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//转置了第5（4+1）、6（5+1）个位置，6是开区间所在</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\n"</span><span class="token punctuation">;</span>    <span class="token function">printData</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">sort</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//必须先排序，才能用unique去重，因为unique只看相邻的元素。</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"This is v"</span><span class="token punctuation">;</span>    <span class="token function">printData</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//auto it = unique(v.begin(), v.end());</span>    vector<span class="token operator">&lt;</span>gg<span class="token operator">&gt;</span><span class="token double-colon punctuation">::</span>iterator it <span class="token operator">=</span> <span class="token function">unique</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    v<span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span>it<span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\n"</span><span class="token punctuation">;</span>    <span class="token function">printData</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>        cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\n"</span><span class="token punctuation">;</span>    <span class="token keyword">auto</span> it2 <span class="token operator">=</span> <span class="token function">remove</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    v<span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span>it2<span class="token punctuation">,</span>v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printData</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">reverse</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">partial_sort</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\n"</span><span class="token punctuation">;</span>    <span class="token function">printData</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">reverse</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    v<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span> <span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">nth_element</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">6</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将第6小的数字放到v[6]的位置（即第七个位置）上去，且其前面的数字必小于它，其后面的数字必大于它。</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\nThis is v:"</span><span class="token punctuation">;</span>    <span class="token function">printData</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>        cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\nThis is v:"</span><span class="token punctuation">;</span>    <span class="token comment">//任何二分查找算法都必须排序，没有顺序，还何谈二分。</span>    <span class="token function">sort</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printData</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span> <span class="token string">"\n"</span><span class="token punctuation">;</span>    <span class="token comment">//用v.end()-1比较好，因为v.end()它背后其实也还是有数字的，如:140704480081848，如果你查的数大于所有元素，那么此时会显示v.end()背后的值。</span>    <span class="token comment">//当要读取值时，考虑v.end()-1,其他时候没必要。</span>    cout<span class="token operator">&lt;&lt;</span><span class="token operator">*</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token operator">*</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token operator">*</span>v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token operator">*</span>v<span class="token punctuation">.</span><span class="token function">rbegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">"\n"</span><span class="token punctuation">;</span>    <span class="token comment">//输出第一个大于等于该数的值</span>    cout<span class="token operator">&lt;&lt;</span> <span class="token operator">*</span><span class="token function">lower_bound</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">140704480081848</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span> <span class="token string">" "</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span><span class="token function">lower_bound</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">)</span>    <span class="token comment">//输出第一个大于该数的值</span>    <span class="token operator">&lt;&lt;</span><span class="token string">"\n"</span><span class="token operator">&lt;&lt;</span> <span class="token operator">*</span><span class="token function">upper_bound</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span> <span class="token string">" "</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span><span class="token function">upper_bound</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> cmp<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//输出第一个大于等于该数的值所在位置索引。</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\n"</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"Position:"</span><span class="token operator">&lt;&lt;</span><span class="token function">lowerBound1</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token function">lowerBound1</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//将序列调整为大根堆，即大顶堆。</span>    <span class="token function">make_heap</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\n"</span><span class="token punctuation">;</span>    <span class="token function">printData</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//将大根堆序列调整为升序，即堆排序。</span>    <span class="token function">sort_heap</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\n"</span><span class="token punctuation">;</span>    <span class="token function">printData</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">sort</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token generic-function"><span class="token function">greater</span><span class="token generic class-name"><span class="token operator">&lt;</span>gg<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//如序列已是最大的排列，将序列重排为最小的排列</span>    <span class="token function">next_permutation</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\n"</span><span class="token punctuation">;</span>    <span class="token function">printData</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">sort</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token generic-function"><span class="token function">greater</span><span class="token generic class-name"><span class="token operator">&lt;</span>gg<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\n"</span><span class="token operator">&lt;&lt;</span><span class="token operator">*</span>v<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\nMax:"</span><span class="token operator">&lt;&lt;</span><span class="token operator">*</span><span class="token function">max_element</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\nMin:"</span><span class="token operator">&lt;&lt;</span><span class="token operator">*</span><span class="token function">min_element</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//取值型的最好用v.end()-1。</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\nthe Max:"</span><span class="token operator">&lt;&lt;</span><span class="token operator">*</span><span class="token function">minmax</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token operator">&lt;&lt;</span><span class="token string">"\n\nthe Min:"</span><span class="token operator">&lt;&lt;</span><span class="token operator">*</span><span class="token function">minmax</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>second<span class="token punctuation">;</span>        cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\nthe sum:"</span><span class="token punctuation">;</span>    <span class="token comment">//0表示初始值</span>    cout<span class="token operator">&lt;&lt;</span><span class="token function">accumulate</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token function">accumulate</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            gg v2<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment">//sort(v2,v2+5);</span>    <span class="token comment">//sort(v2, v2+3);</span>    <span class="token function">sort</span><span class="token punctuation">(</span>v2<span class="token punctuation">,</span> v2<span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token generic-function"><span class="token function">greater</span><span class="token generic class-name"><span class="token operator">&lt;</span>gg<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//10是开区间所在，故排序了第1（0+1）、……10（9+1）个位置。</span>    <span class="token function">sort</span><span class="token punctuation">(</span>v2<span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">,</span> v2<span class="token operator">+</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token generic-function"><span class="token function">less</span><span class="token generic class-name"><span class="token operator">&lt;</span>gg<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">sort</span><span class="token punctuation">(</span>v2<span class="token operator">+</span><span class="token number">20</span><span class="token punctuation">,</span> v2<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> cmp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">sort</span><span class="token punctuation">(</span>v2<span class="token operator">+</span><span class="token number">30</span><span class="token punctuation">,</span> v2<span class="token operator">+</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token function">Compare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">sort</span><span class="token punctuation">(</span>v2<span class="token operator">+</span><span class="token number">40</span><span class="token punctuation">,</span> v2<span class="token operator">+</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span>gg<span class="token operator">&amp;</span> a<span class="token punctuation">,</span>gg<span class="token operator">&amp;</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> a<span class="token operator">&gt;</span>b<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">partition</span><span class="token punctuation">(</span>v2<span class="token punctuation">,</span>v2<span class="token operator">+</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span>gg a<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token keyword">return</span> a<span class="token operator">!=</span><span class="token number">3</span> <span class="token operator">&amp;&amp;</span> a<span class="token operator">!=</span><span class="token number">7</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//符合条件的放到序列前方，不符合的放到序列后方</span>        cout<span class="token operator">&lt;&lt;</span><span class="token string">"\nV2:\n"</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> times <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>gg i<span class="token operator">:</span>v2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token operator">++</span>times<span class="token punctuation">;</span>        cout<span class="token operator">&lt;&lt;</span>i<span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>times<span class="token operator">%</span><span class="token number">10</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>            cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\n"</span><span class="token punctuation">;</span>    <span class="token function">printData</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span><span class="token punctuation">;</span>     cout<span class="token operator">&lt;&lt;</span><span class="token string">"\nV3:\n"</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> v3<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token char">'e'</span><span class="token punctuation">,</span><span class="token char">'c'</span><span class="token punctuation">,</span><span class="token char">'b'</span><span class="token punctuation">,</span><span class="token char">'a'</span><span class="token punctuation">,</span><span class="token char">'d'</span><span class="token punctuation">,</span><span class="token char">'g'</span><span class="token punctuation">,</span><span class="token char">'f'</span><span class="token punctuation">,</span><span class="token char">'h'</span><span class="token punctuation">,</span><span class="token char">'j'</span><span class="token punctuation">,</span><span class="token char">'f'</span><span class="token punctuation">,</span><span class="token char">'f'</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//后面的默认为' '，即空字符。</span>    <span class="token function">sort</span><span class="token punctuation">(</span>v3<span class="token punctuation">,</span> v3<span class="token operator">+</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\n"</span><span class="token punctuation">;</span>    <span class="token function">printData</span><span class="token punctuation">(</span>v3<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//如序列已经是最小序列，则重排为最大序列</span>    <span class="token function">prev_permutation</span><span class="token punctuation">(</span>v3<span class="token punctuation">,</span> v3<span class="token operator">+</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\n"</span><span class="token punctuation">;</span>    <span class="token function">printData</span><span class="token punctuation">(</span>v3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//将'u'赋值给指定位置元素，递增后的值赋值给下一个元素</span>    <span class="token function">iota</span><span class="token punctuation">(</span>v3<span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">,</span> v3<span class="token operator">+</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token char">'u'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\n"</span><span class="token punctuation">;</span>    <span class="token function">printData</span><span class="token punctuation">(</span>v3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> v4<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> v5<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment">//向量内积</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\n"</span><span class="token operator">&lt;&lt;</span><span class="token function">inner_product</span><span class="token punctuation">(</span>v4<span class="token punctuation">,</span> v4<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">,</span> v5<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> v6<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment">//这里多输出个地址不知道怎么回事</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\n"</span><span class="token operator">&lt;&lt;</span><span class="token function">partial_sum</span><span class="token punctuation">(</span>v6<span class="token punctuation">,</span> v6<span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">,</span> v6<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printData</span><span class="token punctuation">(</span>v6<span class="token punctuation">)</span><span class="token punctuation">;</span>        vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> v7 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\n"</span><span class="token punctuation">;</span>    <span class="token comment">//前缀和，即前n项和。</span>    <span class="token function">partial_sum</span><span class="token punctuation">(</span>v7<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v7<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v7<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printData</span><span class="token punctuation">(</span>v7<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//前缀和的逆向操作。</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\n"</span><span class="token punctuation">;</span>    <span class="token function">adjacent_difference</span><span class="token punctuation">(</span>v7<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v7<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v7<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printData</span><span class="token punctuation">(</span>v7<span class="token punctuation">)</span><span class="token punctuation">;</span>        cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n\n"</span><span class="token punctuation">;</span>    bitset<span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">&gt;</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token number">257</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span>b<span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span>b<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span>b<span class="token punctuation">.</span><span class="token function">to_ulong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span>b<span class="token punctuation">.</span><span class="token function">to_ullong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">"\n"</span><span class="token punctuation">;</span>        bitset<span class="token operator">&lt;</span><span class="token number">16</span><span class="token operator">&gt;</span> <span class="token function">b2</span><span class="token punctuation">(</span><span class="token number">257</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//整数的二进制表示</span>    cout<span class="token operator">&lt;&lt;</span>b2<span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span>b2<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span>b2<span class="token punctuation">.</span><span class="token function">to_ulong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span>b2<span class="token punctuation">.</span><span class="token function">to_ullong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">"\n"</span>    <span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>b2<span class="token operator">&lt;&lt;</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>b2<span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">"\n"</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>b2<span class="token operator">&lt;&lt;=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>b2<span class="token operator">&gt;&gt;=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">"\n"</span>    <span class="token operator">&lt;&lt;</span>b2<span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token operator">~</span>b2<span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>b2<span class="token operator">&amp;=</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span><span class="token char">'\n'</span>    <span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>b2<span class="token operator">^=</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>b2<span class="token operator">|=</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>b2<span class="token operator">^=</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span><span class="token char">'\n'</span>    <span class="token operator">&lt;&lt;</span>b2<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span>b2<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token operator">~</span>b2<span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>b2<span class="token operator">|=</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span>b2<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token char">'\n'</span><span class="token comment">//count: b2中true即1的位数</span>    <span class="token operator">&lt;&lt;</span>b2<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span>b2<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span>b2<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span>b2<span class="token punctuation">.</span><span class="token function">none</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token char">'\n'</span><span class="token punctuation">;</span>        cout<span class="token operator">&lt;&lt;</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token function">stoi</span><span class="token punctuation">(</span><span class="token string">"1111"</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token function">stod</span><span class="token punctuation">(</span><span class="token string">"10.78"</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token function">stof</span><span class="token punctuation">(</span><span class="token string">"11.766"</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token char">'\n'</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span>showpos<span class="token operator">&lt;&lt;</span><span class="token number">20</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token number">100</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token number">20</span><span class="token operator">-</span><span class="token number">50</span><span class="token operator">&lt;&lt;</span><span class="token char">'\n'</span><span class="token punctuation">;</span><span class="token comment">//展示正负号</span>    cout<span class="token operator">&lt;&lt;</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token function">stoi</span><span class="token punctuation">(</span><span class="token string">"1111"</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token function">stod</span><span class="token punctuation">(</span><span class="token string">"10.78"</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token function">stof</span><span class="token punctuation">(</span><span class="token string">"11.766"</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token char">'\n'</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span>noshowpos<span class="token operator">&lt;&lt;</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token function">stoi</span><span class="token punctuation">(</span><span class="token string">"1111"</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token function">stod</span><span class="token punctuation">(</span><span class="token string">"10.78"</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token function">stof</span><span class="token punctuation">(</span><span class="token string">"11.766"</span><span class="token punctuation">)</span>    <span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token function">stol</span><span class="token punctuation">(</span><span class="token string">"23453"</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token function">stoll</span><span class="token punctuation">(</span><span class="token string">"1043791749713284"</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token char">'\n'</span><span class="token punctuation">;</span>        string str <span class="token operator">=</span> <span class="token string">"00001234"</span><span class="token punctuation">;</span>    str<span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> str<span class="token punctuation">.</span><span class="token function">find_first_not_of</span><span class="token punctuation">(</span><span class="token char">'0'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//第一个不是0的数字。</span>    cout<span class="token operator">&lt;&lt;</span>str<span class="token operator">&lt;&lt;</span><span class="token char">'\n'</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token char">'8'</span> <span class="token operator">-</span> <span class="token char">'0'</span><span class="token operator">&lt;&lt;</span><span class="token char">'\n'</span><span class="token punctuation">;</span>        string str2 <span class="token operator">=</span> <span class="token string">"63433"</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> c<span class="token operator">:</span> str2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        c<span class="token operator">-=</span> <span class="token char">'2'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    cout<span class="token operator">&lt;&lt;</span>str2<span class="token operator">&lt;&lt;</span><span class="token char">'\n'</span><span class="token punctuation">;</span>        cout<span class="token operator">&lt;&lt;</span>fixed<span class="token operator">&lt;&lt;</span><span class="token function">setprecision</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">1e5</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token number">200e5</span><span class="token operator">&lt;&lt;</span><span class="token string">" "</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token number">3e-8</span><span class="token operator">&lt;&lt;</span><span class="token char">'\n'</span><span class="token punctuation">;</span><span class="token comment">//1乘以10的5次方</span>        <span class="token comment">//并查集</span>    vector<span class="token operator">&lt;</span>gg<span class="token operator">&gt;</span> <span class="token function">ufs</span><span class="token punctuation">(</span><span class="token number">1e2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">iota</span><span class="token punctuation">(</span>ufs<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ufs<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//赋值函数</span>    <span class="token function">printData</span><span class="token punctuation">(</span>ufs<span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"\n"</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token class-name">Test</span><span class="token double-colon punctuation">::</span><span class="token function">func2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    string s<span class="token punctuation">;</span>    <span class="token function">getline</span><span class="token punctuation">(</span>cin<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span>s<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C++ </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac上使用C++万能头文件</title>
      <link href="/posts/33854.html"/>
      <url>/posts/33854.html</url>
      
        <content type="html"><![CDATA[<h1 id="Mac上使用C-万能头文件"><a href="#Mac上使用C-万能头文件" class="headerlink" title="Mac上使用C++万能头文件"></a>Mac上使用C++万能头文件</h1><p>========================</p><h2 id="下述代码相当于-include-lt-bits-stdc-h-gt"><a href="#下述代码相当于-include-lt-bits-stdc-h-gt" class="headerlink" title="下述代码相当于#include<bits/stdc++.h>"></a>下述代码相当于#include&lt;bits/stdc++.h&gt;</h2><p>直接将下列文件拷贝或移入工程，引用时，使用<code>#include "stdc++.hpp"</code>,当然你可以自定义该hpp头文件名。</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">//</span><span class="token comment">//  stdc++.hpp</span><span class="token comment">//  Code</span><span class="token comment">//</span><span class="token comment">//  Created by 张赛东 on 2021/1/1.</span><span class="token comment">//</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">stdc___hpp</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">stdc___hpp</span></span><span class="token comment">//下述代码相当于#include&lt;bits/stdc++.h&gt;</span><span class="token comment">// C++ includes used for precompiling -*- C++ -*-</span> <span class="token comment">// Copyright (C) 2003-2014 Free Software Foundation, Inc.</span><span class="token comment">//</span><span class="token comment">// This file is part of the GNU ISO C++ Library.  This library is free</span><span class="token comment">// software; you can redistribute it and/or modify it under the</span><span class="token comment">// terms of the GNU General Public License as published by the</span><span class="token comment">// Free Software Foundation; either version 3, or (at your option)</span><span class="token comment">// any later version.</span> <span class="token comment">// This library is distributed in the hope that it will be useful,</span><span class="token comment">// but WITHOUT ANY WARRANTY; without even the implied warranty of</span><span class="token comment">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span><span class="token comment">// GNU General Public License for more details.</span> <span class="token comment">// Under Section 7 of GPL version 3, you are granted additional</span><span class="token comment">// permissions described in the GCC Runtime Library Exception, version</span><span class="token comment">// 3.1, as published by the Free Software Foundation.</span> <span class="token comment">// You should have received a copy of the GNU General Public License and</span><span class="token comment">// a copy of the GCC Runtime Library Exception along with this program;</span><span class="token comment">// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see</span><span class="token comment">// &lt;http://www.gnu.org/licenses/&gt;.</span> <span class="token comment">/** @file stdc++.h *  This is an implementation file for a precompiled header. */</span> <span class="token comment">// 17.4.1.2 Headers</span> <span class="token comment">// C</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">_GLIBCXX_NO_ASSERT</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cassert&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cctype&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cerrno&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cfloat&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ciso646&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;climits&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;clocale&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cmath&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;csetjmp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;csignal&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdarg&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstddef&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdlib&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstring&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ctime&gt;</span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">__cplusplus <span class="token operator">&gt;=</span> <span class="token number">201103L</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ccomplex&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cfenv&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cinttypes&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdbool&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdint&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ctgmath&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cwchar&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cwctype&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span> <span class="token comment">// C++</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;bitset&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;complex&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;deque&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;exception&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;fstream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;functional&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iomanip&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ios&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iosfwd&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;istream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iterator&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;limits&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;list&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;locale&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;map&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;memory&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;new&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;numeric&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;queue&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;set&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sstream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stack&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdexcept&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;streambuf&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;typeinfo&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;utility&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;valarray&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector&gt;</span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">__cplusplus <span class="token operator">&gt;=</span> <span class="token number">201103L</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;array&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;atomic&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;chrono&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;condition_variable&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;forward_list&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;future&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;initializer_list&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;mutex&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;random&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ratio&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;regex&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;scoped_allocator&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;system_error&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;thread&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;tuple&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;typeindex&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;type_traits&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unordered_map&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unordered_set&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/* stdc___hpp */</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>InterfaceKit：一行代码实现在SwiftUI界面使用UIKit、AppKit和WatchKit的接口！</title>
      <link href="/posts/47700.html"/>
      <url>/posts/47700.html</url>
      
        <content type="html"><![CDATA[<h1 id="InterfaceKit"><a href="#InterfaceKit" class="headerlink" title="InterfaceKit"></a>InterfaceKit</h1><p>========================</p><p><code>一行代码</code>实现在<code>SwiftUI</code>界面使用<code>UIKit、AppKit和WatchKit</code>的接口！</p><h5 id="English-English-Document"><a href="#English-English-Document" class="headerlink" title="English: English Document"></a>English: <a href="https://github.com/adong666666/InterfaceKit/blob/master/README.md">English Document</a></h5><h5 id="代码解释文档：https-github-com-adong666666-InterfaceKitDoc（或此存储库的Docs）"><a href="#代码解释文档：https-github-com-adong666666-InterfaceKitDoc（或此存储库的Docs）" class="headerlink" title="代码解释文档：https://github.com/adong666666/InterfaceKitDoc（或此存储库的Docs）"></a>代码解释文档：<a href="https://github.com/adong666666/InterfaceKitDoc">https://github.com/adong666666/InterfaceKitDoc</a>（或此存储库的<code>Docs</code>）</h5><p>InterfaceKit的基本思想是，我们想要一些用户界面抽象层，它能充分封装直接调用UIKit，AppKit和WatchKit。它应该足够简单，使普通的东西容易，但要足够全面，使复杂的东西也容易。</p><p>您可以在<a href="https://github.com/adong666666/InterfaceKit/blob/master/Vision.zh-Hans.md">愿景</a>中查看有关项目方向的更多信息。</p><pre class="line-numbers language-none"><code class="language-none">                    ┌──────────────┐                    │   SwiftUI    │                    └──────▲───────┘                           │        ┌──────────────────────────┴───────────────────────────┐│                    InterfaceKit                      │└───────▲──────────────────▲───────────────────▲───────┘        │                  │                   │        ┌───────┴──────┐    ┌──────┴───────┐    ┌──────┴───────┐│     UIKit    │    │    AppKit    │    │   WatchKit   │└──────────────┘    └──────────────┘    └──────────────┘<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><a href="#%E5%8A%9F%E8%83%BD">功能</a></li><li><a href="#%E4%BD%BF%E7%94%A8">使用</a></li><li><a href="#%E5%B9%B3%E5%8F%B0">平台</a></li><li><a href="#%E7%A4%BE%E5%8C%BA">社区</a></li><li><a href="#%E7%8A%B6%E6%80%81">状态</a></li><li><a href="#%E5%AE%89%E8%A3%85">安装</a></li><li><a href="#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98">常见问题</a></li><li><a href="#%E4%BF%A1%E7%94%A8">信用</a></li><li><a href="#%E6%8D%90%E7%8C%AE">捐献</a></li><li><a href="#%E8%B4%A1%E7%8C%AE">贡献</a></li><li><a href="#%E8%AE%B8%E5%8F%AF">许可</a></li><li><a href="#%E7%89%88%E6%9C%AC%E5%8E%86%E5%8F%B2">版本历史</a></li></ul><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul><li><input checked="" disabled="" type="checkbox"> 在SwiftUI界面使用UIKit</li><li><input checked="" disabled="" type="checkbox"> 在SwiftUI界面使用AppKit</li><li><input checked="" disabled="" type="checkbox"> 在SwiftUI界面使用WatchKit</li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="常规用法"><a href="#常规用法" class="headerlink" title="常规用法"></a>常规用法</h3><h4 id="对于iOS或tvOS："><a href="#对于iOS或tvOS：" class="headerlink" title="对于iOS或tvOS："></a>对于iOS或tvOS：</h4><ul><li><p>展示UIView</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">InterfaceView</span><span class="token punctuation">(</span><span class="token class-name">MyUIView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>展示UIViewController</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">InterfaceViewController</span><span class="token punctuation">(</span><span class="token class-name">MyUIViewController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="对于macOS："><a href="#对于macOS：" class="headerlink" title="对于macOS："></a>对于macOS：</h4><ul><li><p>展示NSView</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">NSInterfaceView</span><span class="token punctuation">(</span><span class="token class-name">MyNSView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>展示NSViewController</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">NSInterfaceViewController</span><span class="token punctuation">(</span><span class="token class-name">MyNSViewController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="对于watchOS："><a href="#对于watchOS：" class="headerlink" title="对于watchOS："></a>对于watchOS：</h4><ul><li>展示WKInterfaceObject</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">WKInterfaceView</span><span class="token punctuation">(</span><span class="token class-name">MyWKInterfaceObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token keyword">import</span> <span class="token class-name">InterfaceKit</span><span class="token keyword">struct</span> <span class="token class-name">MyInterfaceView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span>        <span class="token class-name">ZStack</span> <span class="token punctuation">{</span>            <span class="token class-name">InterfaceViewController</span><span class="token punctuation">(</span><span class="token class-name">MyViewController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token class-name">InterfaceView</span><span class="token punctuation">(</span><span class="token class-name">MyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token class-name">SwiftUIView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token directive property"><span class="token directive-name">#if</span> DEBUG</span><span class="token keyword">struct</span> <span class="token class-name">MyInterfaceView_Previews</span><span class="token punctuation">:</span> <span class="token class-name">PreviewProvider</span> <span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> previews<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span>        <span class="token class-name">MyInterfaceView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token directive property"><span class="token directive-name">#endif</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配合闭包使用"><a href="#配合闭包使用" class="headerlink" title="配合闭包使用"></a>配合闭包使用</h3><p>展示SwiftuI视图时，您可以执行一些操作。</p><ul><li>示例</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">InterfaceViewController</span><span class="token punctuation">(</span><span class="token class-name">MyUIViewController</span><span class="token punctuation">.</span>shared<span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Hello World"</span></span><span class="token punctuation">)</span>    <span class="token class-name">MyUIViewController</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span>delegate <span class="token operator">=</span> <span class="token class-name">SomeViewControler</span><span class="token punctuation">.</span>shared    <span class="token class-name">MyUIViewController</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span>view<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">0.5</span>    <span class="token class-name">MyUIViewController</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span>view<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token punctuation">.</span>white    <span class="token class-name">MyUIViewController</span><span class="token punctuation">.</span><span class="token function">someFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">networkRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token class-name">JSONParsing</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">downloadFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">showProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">makeToast</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">databaseOperation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">//do something</span>    <span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">navigationBarBackButtonHidden</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">navigationBarHidden</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">navigationBarTitle</span><span class="token punctuation">(</span><span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Title"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> displayMode<span class="token punctuation">:</span> <span class="token punctuation">.</span>large<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="多平台"><a href="#多平台" class="headerlink" title="多平台"></a>多平台</h3><p>InterfaceKit 让多平台编程更加清晰。</p><ul><li>示例</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token keyword">import</span> <span class="token class-name">MapKit</span><span class="token keyword">import</span> <span class="token class-name">InterfaceKit</span><span class="token keyword">let</span> <span class="token constant">kStr</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"Hello World"</span></span><span class="token directive property"><span class="token directive-name">#if</span> os<span class="token punctuation">(</span>iOS<span class="token punctuation">)</span> <span class="token operator">||</span> os<span class="token punctuation">(</span>tvOS<span class="token punctuation">)</span></span>    <span class="token keyword">typealias</span> <span class="token class-name">OSViewController</span> <span class="token operator">=</span> <span class="token class-name">UIViewController</span>    <span class="token keyword">typealias</span> <span class="token class-name">OSView</span> <span class="token operator">=</span> <span class="token class-name">UILabel</span>    <span class="token keyword">typealias</span> <span class="token class-name">OSInterfaceView</span> <span class="token operator">=</span> <span class="token class-name">InterfaceView</span>    <span class="token keyword">typealias</span> <span class="token class-name">OSInterfaceVC</span> <span class="token operator">=</span> <span class="token class-name">InterfaceViewController</span>    <span class="token keyword">let</span> <span class="token constant">kBounds</span> <span class="token operator">=</span> <span class="token class-name">UIScreen</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span>bounds <span class="token keyword">as</span> <span class="token class-name">CGRect</span><span class="token operator">?</span><span class="token directive property"><span class="token directive-name">#elseif</span> os<span class="token punctuation">(</span>macOS<span class="token punctuation">)</span></span>    <span class="token keyword">typealias</span> <span class="token class-name">OSViewController</span> <span class="token operator">=</span> <span class="token class-name">NSViewController</span>    <span class="token keyword">typealias</span> <span class="token class-name">OSView</span> <span class="token operator">=</span> <span class="token class-name">NSTextField</span>    <span class="token keyword">typealias</span> <span class="token class-name">OSInterfaceView</span> <span class="token operator">=</span> <span class="token class-name">NSInterfaceView</span>    <span class="token keyword">typealias</span> <span class="token class-name">OSInterfaceVC</span> <span class="token operator">=</span> <span class="token class-name">NSInterfaceViewController</span>    <span class="token keyword">let</span> <span class="token constant">kBounds</span> <span class="token operator">=</span> <span class="token class-name">NSScreen</span><span class="token punctuation">.</span>main<span class="token operator">?</span><span class="token punctuation">.</span>frame<span class="token directive property"><span class="token directive-name">#endif</span></span><span class="token attribute atrule">@main</span><span class="token keyword">struct</span> <span class="token class-name">EApp</span><span class="token punctuation">:</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">Scene</span> <span class="token punctuation">{</span>        <span class="token class-name">WindowGroup</span> <span class="token punctuation">{</span>            <span class="token class-name">ZStack</span> <span class="token punctuation">{</span>                <span class="token directive property"><span class="token directive-name">#if</span> <span class="token operator">!</span>os<span class="token punctuation">(</span>watchOS<span class="token punctuation">)</span></span>                    <span class="token class-name">OSInterfaceView</span><span class="token punctuation">(</span><span class="token class-name">MKMapView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token class-name">OSInterfaceView</span><span class="token punctuation">(</span><span class="token class-name">MyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token constant">kStr</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>                    <span class="token class-name">OSInterfaceVC</span><span class="token punctuation">(</span><span class="token class-name">MyVC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token directive property"><span class="token directive-name">#else</span></span>                    <span class="token class-name">WKInterfaceView</span><span class="token punctuation">(</span><span class="token class-name">WKInterfaceMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token constant">kStr</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>                <span class="token directive property"><span class="token directive-name">#endif</span></span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token constant">kStr</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>purple<span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token directive property"><span class="token directive-name">#if</span> <span class="token operator">!</span>os<span class="token punctuation">(</span>watchOS<span class="token punctuation">)</span></span><span class="token keyword">class</span> <span class="token class-name">MyVC</span><span class="token punctuation">:</span> <span class="token class-name">OSViewController</span> <span class="token punctuation">{</span>    <span class="token directive property"><span class="token directive-name">#if</span> os<span class="token punctuation">(</span>iOS<span class="token punctuation">)</span> <span class="token operator">||</span> os<span class="token punctuation">(</span>tvOS<span class="token punctuation">)</span></span>        <span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">viewDidLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">let</span> lbl <span class="token operator">=</span> <span class="token class-name">MyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            lbl<span class="token punctuation">.</span>textAlignment <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token keyword">right</span>            view<span class="token punctuation">.</span><span class="token function">addSubview</span><span class="token punctuation">(</span>lbl<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token directive property"><span class="token directive-name">#elseif</span> os<span class="token punctuation">(</span>macOS<span class="token punctuation">)</span></span>        <span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">loadView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> view <span class="token operator">=</span> <span class="token class-name">MyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>    <span class="token directive property"><span class="token directive-name">#endif</span></span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">MyView</span><span class="token punctuation">:</span> <span class="token class-name">OSView</span> <span class="token punctuation">{</span>    <span class="token keyword">override</span> <span class="token keyword">init</span><span class="token punctuation">(</span>frame<span class="token punctuation">:</span> <span class="token class-name">CGRect</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>frame<span class="token punctuation">:</span> <span class="token class-name">CGRect</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token constant">kBounds</span><span class="token operator">!</span><span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">60</span><span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token constant">kBounds</span><span class="token operator">!</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token directive property"><span class="token directive-name">#if</span> os<span class="token punctuation">(</span>iOS<span class="token punctuation">)</span> <span class="token operator">||</span> os<span class="token punctuation">(</span>tvOS<span class="token punctuation">)</span></span>            text <span class="token operator">=</span> <span class="token constant">kStr</span>        <span class="token directive property"><span class="token directive-name">#elseif</span> os<span class="token punctuation">(</span>macOS<span class="token punctuation">)</span></span>            stringValue <span class="token operator">=</span> <span class="token constant">kStr</span>        <span class="token directive property"><span class="token directive-name">#endif</span></span>    <span class="token punctuation">}</span>        <span class="token keyword">required</span> <span class="token keyword">init</span><span class="token operator">?</span><span class="token punctuation">(</span>coder<span class="token punctuation">:</span> <span class="token class-name">NSCoder</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">fatalError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token directive property"><span class="token directive-name">#endif</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="平台"><a href="#平台" class="headerlink" title="平台"></a>平台</h2><ul><li>iOS 13.0+ / macOS 10.15+ / tvOS 13.0+ / watchOS 6.0+</li><li>Xcode 11+</li><li>Swift 5.1+</li></ul><h2 id="交流"><a href="#交流" class="headerlink" title="交流"></a>交流</h2><ul><li>QQ群：1027277979</li><li>您可以和我联系（邮箱：<a href="mailto:3440217568@qq.com">3440217568@qq.com</a>，QQ：3440217568，微信：adongenjoylife，电话：15674119605）。</li><li>如果您发现了一个bug，并且可以提供可靠地重现它的步骤，请打开一个问题。</li><li>如果您有一个特性请求，请打开一个问题。</li><li>如果您想贡献，请提交一个拉取请求。</li></ul><h2 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h2><p>这个项目正在积极开发中。我们认为它可以用于项目开发。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下表显示了您应该根据您的Swift版本使用哪个版本的InterfaceKit。</p><table><thead><tr><th>Swift</th><th>InterfaceKit</th></tr></thead><tbody><tr><td>5.X</td><td>&gt;= 5.4.0</td></tr></tbody></table><p>InterfaceKit支持多种方法在项目中安装框架。</p><h3 id="直接拷贝"><a href="#直接拷贝" class="headerlink" title="直接拷贝"></a>直接拷贝</h3><p>通过运行以下命令来克隆此存储库：</p><pre class="line-numbers language-none"><code class="language-none">git clone https://github.com/adong666666/InterfaceKit.git --depth=1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将github工程中的<code>InterfaceKit</code>文件夹下的Swift文件复制到您的工程中。</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/copy_files.png" alt=""></div><ul><li>如果是iOS或tvOS项目，您可以复制文件<code>UIInterface.swift</code>。</li><li>如果是macOS项目，您可以复制文件<code>NSInterface.swift</code>。</li><li>如果是watchOS项目，您可以复制文件<code>WKInterface.swift</code>。</li></ul><h3 id="CocoaPods安装"><a href="#CocoaPods安装" class="headerlink" title="CocoaPods安装"></a>CocoaPods安装</h3><p><a href="https://cocoapods.org/">CocoaPods</a> 是Cocoa项目的依赖关系管理器。有关使用和安装说明，请访问他们的网站。如果您还没有安装cocoapods则请先执行如下命令：</p><pre class="line-numbers language-none"><code class="language-none">$ gem install cocoapods<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>您需要一个`Podfile`文件来通过CocoaPods整合InterfaceKit到您的Xcode工程中去, 如果您没有Podfile，那么直接创建一个Podfile或使用此存储库在`PodfileExample`文件夹中提供的Podfile。Podfile的内容如下：<pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby"><span class="token comment"># Podfile</span>source <span class="token string-literal"><span class="token string">'https://github.com/CocoaPods/Specs.git'</span></span><span class="token comment"># platform:ios, '13.0'</span>use_frameworks<span class="token operator">!</span>inhibit_all_warnings<span class="token operator">!</span>target <span class="token string-literal"><span class="token string">'YOUR_TARGET_NAME'</span></span> <span class="token keyword">do</span>    pod <span class="token string-literal"><span class="token string">'InterfaceKit'</span></span><span class="token keyword">end</span><span class="token comment"># post_install do |installer_representation|</span><span class="token comment">#   installer_representation.pods_project.targets.each do |target|</span><span class="token comment">#     target.build_configurations.each do |config|</span><span class="token comment">#       config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'</span><span class="token comment">#     end</span><span class="token comment">#   end</span><span class="token comment"># end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用您的项目名称替换<code>YOUR_TARGET_NAME</code>。<br>要使用CocoaPods将InterfaceKit集成到Xcode项目中，请在<code>Podfile</code>中指定它：</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string-literal"><span class="token string">'InterfaceKit'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或许您还没有更新CocoaPods, 那么<code>InterfaceKit</code> 可能不会被找到，您可以运行 <code>pod update</code>来更新CocoaPods，或者直接运行下面的命令行：</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string-literal"><span class="token string">'InterfaceKit'</span></span><span class="token punctuation">,</span> <span class="token symbol">:git</span> <span class="token operator">=&gt;</span> <span class="token string-literal"><span class="token string">'https://github.com/adong666666/InterfaceKit.git'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>如果只是针对iOS或tvOS项目，您可以在<code>Podfile</code>中指定它：</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string-literal"><span class="token string">'InterfaceKit/UIKit'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>如果只是针对macOS项目，您可以在<code>Podfile</code>中指定它：</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string-literal"><span class="token string">'InterfaceKit/AppKit'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>如果只是针对watchOS项目，您可以在<code>Podfile</code>中指定它：</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string-literal"><span class="token string">'InterfaceKit/WatchKit'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>如果您要使用此框架的最新发布的版本，您可以在<code>Podfile</code>中指定它：</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string-literal"><span class="token string">'InterfaceKit'</span></span><span class="token punctuation">,</span> <span class="token symbol">:git</span> <span class="token operator">=&gt;</span> <span class="token string-literal"><span class="token string">'https://github.com/adong666666/InterfaceKit.git'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>如果您要使用此框架的<code>特定的</code>某一个版本，您可以在<code>Podfile</code>中指定它：</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string-literal"><span class="token string">'InterfaceKit'</span></span><span class="token punctuation">,</span> <span class="token symbol">:git</span> <span class="token operator">=&gt;</span> <span class="token string-literal"><span class="token string">'https://github.com/adong666666/InterfaceKit.git'</span></span><span class="token punctuation">,</span> <span class="token symbol">:branch</span> <span class="token operator">=&gt;</span> <span class="token string-literal"><span class="token string">'master'</span></span><span class="token comment">#, commit: "b7e1facdedd8fe16d04ef5f47c4697e89bad9f27", '~&gt; 5.4.0', :tag =&gt; '5.4.0'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p>然后，在<code>Podfile</code>所在的目录中（确保Podfile和xcodeproj文件位于同一目录中），运行以下命令：</p><pre class="line-numbers language-none"><code class="language-none">$ pod install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/PodfileLocation.png" alt=""></div><h3 id="Carthage"><a href="#Carthage" class="headerlink" title="Carthage"></a>Carthage</h3><p><a href="https://github.com/Carthage/Carthage">Carthage</a>是一个分散的依赖关系管理器，它构建依赖关系并为您提供二进制框架。</p><ol><li><p>要使用Carthage将InterfaceKit集成到Xcode项目中，请在此您的<code>Cartfile</code>中指定它（如果没有Cartfile，只需创建一个或使用此存储库在<code>CartfileExample</code>文件夹中提供的Cartfile）：</p><pre class="line-numbers language-ogdl" data-language="ogdl"><code class="language-ogdl">github "adong666666/InterfaceKit" "master"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>然后，在<code>Cartfile</code>目录中（确保Podfile和xcodeproj文件位于同一目录中），运行<code>carthage update --use xcframeworks</code>。<br>或者</p><ul><li>对于iOS工程, 运行<code>carthage update --platform iOS</code>。</li><li>对于macOS工程, 运行<code>carthage update --platform macOS</code>。</li><li>对于tvOS工程, 运行<code>carthage update --platform tvOS</code>。</li><li>对于watchOS工程, 运行<code>carthage update --platform watchOS</code>。 <div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/CartfileLocation.png" alt=""></div></li></ul></li><li><p>在您的应用程序目标<code>“General”</code>设置选项卡的<code>“Frameworks,Libraries,and Embedded Content”</code>部分中，从磁盘上的Carthage/Build文件夹拖放<code>InterfaceKit</code>xcframework（或从xcframework中选择合适的framework）。</p></li></ol><h4 id="Carthage作为静态库"><a href="#Carthage作为静态库" class="headerlink" title="Carthage作为静态库"></a>Carthage作为静态库</h4><p>Carthage默认将InterfaceKit构建为一个动态库。</p><p>如果您希望使用Carthage将InterfaceKit构建为静态库，您可以在使用Carthage构建之前使用下面的脚本手动修改框架类型：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">carthage update InterfaceKit --platform iOS --no-build<span class="token function">sed</span> -i -e <span class="token string">'s/MACH_O_TYPE = mh_dylib/MACH_O_TYPE = staticlib/g'</span> Carthage/Checkouts/InterfaceKit/InterfaceKit/InterfaceKit.xcodeproj/project.pbxprojcarthage build InterfaceKit --platform iOS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Swift-Package-Manager"><a href="#Swift-Package-Manager" class="headerlink" title="Swift Package Manager"></a>Swift Package Manager</h3><p><a href="https://swift.org/package-manager/">Swift Package Manager</a>是一种用于自动分发Swift代码的工具，并集成到<code>Swift</code>编译器中。它处于早期开发阶段，但InterfaceKit仍支持在其支持的平台上使用它。</p><ol><li>设置Swift包后，将InterfaceKit添加为依赖项就像将其添加到<code>package.Swift</code>的<code>dependencies</code>的值一样简单。然后运行<code>swift build</code>。</li></ol><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift">dependencies<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">.</span><span class="token function">package</span><span class="token punctuation">(</span>url<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"https://github.com/adong666666/InterfaceKit.git"</span></span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token function">upToNextMajor</span><span class="token punctuation">(</span>from<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"5.4.0"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>或者</p><ol><li>在Xcode中，选择File &gt; Swift Packages &gt; Add Package Dependency。</li><li>安装提示操作使用这个URL(“<a href="https://github.com/adong666666/InterfaceKit.git%E2%80%9D)%E6%9D%A5%E9%9B%86%E6%88%90%E6%AD%A4%E6%A1%86%E6%9E%B6">https://github.com/adong666666/InterfaceKit.git”)来集成此框架</a>.<div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/SwiftPackageManager.png" alt=""></div></li></ol><h3 id="手动设置"><a href="#手动设置" class="headerlink" title="手动设置"></a>手动设置</h3><p>如果您不想使用上述任何依赖关系管理器，可以手动将InterfaceKit集成到项目中。</p><h4 id="嵌入式框架"><a href="#嵌入式框架" class="headerlink" title="嵌入式框架"></a>嵌入式框架</h4><ul><li>打开Terminal，<code>cd</code>到顶级项目目录，如果您的项目未初始化为git存储库，则运行以下命令：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>通过以下命令来将InterfaceKit添加为git<a href="https://git-scm.com/docs/git-submodule">子模块</a>：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> submodule <span class="token function">add</span> https://github.com/adong666666/InterfaceKit.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>打开<code>InterfaceKit</code>文件夹，将<code>InterfaceKit.xcodeproj</code>拖到应用程序Xcode项目的项目导航器中。</p><blockquote><p>它应该嵌套在应用程序的蓝色项目图标下面。它是否高于或低于所有其他Xcode组并不重要。</p></blockquote></li></ul><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/drag_framework.png" alt=""></div><ul><li><p>在项目导航器中选择<code>InterfaceKit.xcodeproj</code>，并验证部署目标是否与应用程序目标匹配。</p></li><li><p>接下来，在项目导航器（蓝色项目图标）中选择您的应用程序项目，以导航到目标配置窗口，并在侧边栏的“Targets”标题下选择应用程序目标。</p></li><li><p>在该窗口顶部的选项卡栏中，打开<code>“General”</code>面板。</p></li><li><p>单击<code>“Frameworks,Libraries,and Embedded Content”</code>部分下的<code>+</code>按钮。</p></li><li><p>您将看到<code>Workspace</code>下的<code>InterfaceKit</code>文件夹，<code>InterfaceKit</code>文件夹下有<code>InterfaceKit.framework</code>和<code>InterfaceKitTests.xctest</code></p><blockquote><p>点击<code>InterfaceKit.framework</code>，然后点击<code>Add</code></p></blockquote></li></ul><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/add_framework.png" alt=""></div><ul><li><p>就这样！</p><blockquote><p><code>InterfaceKit.framework</code>在复制文件构建阶段自动添加为目标依赖项、链接框架和嵌入式框架，这是在模拟器和设备上构建所需的全部内容。</p></blockquote></li></ul><h3 id="解压，拖拽"><a href="#解压，拖拽" class="headerlink" title="解压，拖拽"></a>解压，拖拽</h3><ol><li><p>解压此存储库提供的<code>InterfaceKit.xcframework.zip</code>文件。</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/unzip.png" alt=""></div></li><li><p>在应用程序目标的<code>“General”</code>设置选项卡上，在<code>“Frameworks,Libraries,and Embedded Content”</code>部分，拖放解压缩后的文件<code>InterfaceKit.xcframework</code>（或从InterfaceKit.xcframework中选择合适的framework）。</p></li></ol><ul><li><p>如果您使用<code>xcfamework</code>，只需拖放<code>InterfaceKit.xcframework</code>。<code>InterfaceKit.xcframework</code>支持所有四种平台（<code>iOS、macOS、tvOS、watchOS</code>）。</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/use_xcframeworks.png" alt=""></div></li><li><p>如果您使用<code>framework</code>，请根据文件夹名称和项目平台从InterfaceKit.xcframework中选择合适的框架。</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/use_frameworks.png" alt=""></div></li></ul><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="为什么使用-InterfaceKit"><a href="#为什么使用-InterfaceKit" class="headerlink" title="为什么使用 InterfaceKit?"></a>为什么使用 InterfaceKit?</h3><p><code>一行代码</code>实现在<code>SwiftUI</code>界面使用<code>UIKit、AppKit和WatchKit</code>的接口！ InterfaceKit 同时支持全部四个平台(<code>iOS, macOS, tvOS, watchOS</code>)。InterfaceKit<code>持续</code>更新。</p><h2 id="信用"><a href="#信用" class="headerlink" title="信用"></a>信用</h2><p>InterfaceKit 由<a href="https://zsd.name/">张赛东</a>持续更新。 您可以关注他 <a href="https://github.com/adong666666">@Github</a> 以及时了解工程的更新与发布。</p><h3 id="安全披露"><a href="#安全披露" class="headerlink" title="安全披露"></a>安全披露</h3><p>如果您认为InterfaceKit存在安全漏洞，请您尽快通过邮箱告知：<a href="mailto:3440217568@qq.com">3440217568@qq.com</a>。</p><h2 id="捐献"><a href="#捐献" class="headerlink" title="捐献"></a>捐献</h2><p>不需要捐献，但仍表示感谢。</p><h2 id="贡献"><a href="#贡献" class="headerlink" title="贡献"></a>贡献</h2><p>您喜欢InterfaceKit吗？真好！我们真的需要您的帮助！</p><p>开源不仅仅是编写代码。您可以帮我们做以下的任何一件事：</p><ul><li>查找（和报告）漏洞。</li><li>新功能建议。</li><li>回答问题。</li><li>文件改进。</li><li>查看拉取请求。</li><li>帮助管理问题优先级。</li><li>修复错误/新功能。</li></ul><p>如果您觉得这些听起来很酷，发送一个请求！第一次贡献之后，我们会将把您设置为此存储库的成员，以便您可以合并请求，您可以<a href="https://github.com/adong666666/InterfaceKit/blob/master/CONTRIBUTING.zh-Hans.md">在我们的投稿人指南中</a>阅读更多的细节。</p><p>InterfaceKit的社区拥有巨大的正能量，维护人员致力于保持事物的精彩。就像 <a href="https://github.com/CocoaPods/CocoaPods/wiki/Communication-&amp;-Design-Rules">在CocoaPods社区</a>, 总是表现出积极的意图；即使一个评论听起来很刻薄，也要让这个人从怀疑中受益。</p><p>请注意，这个项目伴随着贡献者的行为准则而发布。参与此项目即表示您同意遵守<a href="https://github.com/adong666666/InterfaceKit/blob/master/Code%20of%20Conduct.zh-Hans.md">其条款</a>.</p><h3 id="添加新源文件"><a href="#添加新源文件" class="headerlink" title="添加新源文件"></a>添加新源文件</h3><p>如果从InterfaceKIt添加或删除源文件，则需要对此存储库根目录下的<code>InterfaceKIt.xcworkspace</code>项目进行相应的更改。这个项目用于迦太基。别担心，如果您忘记了，在提交拉取请求时会自动收到警告。</p><h3 id="帮助我们改进InterfaceKit的文档"><a href="#帮助我们改进InterfaceKit的文档" class="headerlink" title="帮助我们改进InterfaceKit的文档"></a>帮助我们改进InterfaceKit的文档</h3><p>无论您是核心成员还是第一次尝试它的用户，您都可以通过改进文档对InterfaceKit做出有价值的贡献。帮助我们：</p><ul><li>向我们发送有关您认为混淆或遗漏的内容的反馈</li><li>建议用更好的措辞或方式来解释某些话题</li><li>通过GitHub向我们发送拉取请求</li><li>改进 <a href="https://github.com/adong666666/InterfaceKit/blob/master/README.md">英文文档</a></li></ul><h3 id="上面的话太啰嗦了？-那么直接看下面吧。"><a href="#上面的话太啰嗦了？-那么直接看下面吧。" class="headerlink" title="上面的话太啰嗦了？ 那么直接看下面吧。"></a>上面的话太啰嗦了？ 那么直接看下面吧。</h3><ul><li>分叉此存储库！</li><li>创建您的分支：<code>git checkout -b my-new-feature</code></li><li>提交您的更改：<code>git commit -am 'Add some feature'</code></li><li>推送至该分支：<code>git push origin my-new-feature</code></li><li>发起拉取请求</li><li>其他：<br>详见<a href="https://github.com/adong666666/InterfaceKit/blob/master/CONTRIBUTING.zh-Hans.md">贡献</a>。</li></ul><h2 id="许可"><a href="#许可" class="headerlink" title="许可"></a>许可</h2><p>InterfaceKit是在MIT许可下发布的，详见<a href="https://github.com/adong666666/InterfaceKit/blob/master/LICENSE.zh-Hans.md">许可</a>。</p><h2 id="版本历史"><a href="#版本历史" class="headerlink" title="版本历史"></a>版本历史</h2><p>详见<a href="https://github.com/adong666666/InterfaceKit/blob/master/CHANGELOG.zh-Hans.md">版本历史</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> git </tag>
            
            <tag> framework </tag>
            
            <tag> github </tag>
            
            <tag> carthage </tag>
            
            <tag> cocoapods </tag>
            
            <tag> macOS </tag>
            
            <tag> tvOS </tag>
            
            <tag> watchOS </tag>
            
            <tag> swift package manager </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>InterfaceKit--One line of code to implement interfaces of UIKit,AppKit,and WatchKit in SwiftUI interface!</title>
      <link href="/posts/35069.html"/>
      <url>/posts/35069.html</url>
      
        <content type="html"><![CDATA[<h1 id="InterfaceKit"><a href="#InterfaceKit" class="headerlink" title="InterfaceKit"></a>InterfaceKit</h1><p>========================</p><p><code>One line of code</code> to implement interfaces of <code>UIKit,AppKit,and WatchKit</code> in <code>SwiftUI</code> interface!</p><h5 id="Chinese-Simplified-中文文档"><a href="#Chinese-Simplified-中文文档" class="headerlink" title="Chinese (Simplified): 中文文档"></a>Chinese (Simplified): <a href="https://github.com/adong666666/InterfaceKit/blob/master/README.zh-Hans.md">中文文档</a></h5><h5 id="Code-interpretation-document-https-github-com-adong666666-InterfaceKitDoc-or-this-repository’s-Docs"><a href="#Code-interpretation-document-https-github-com-adong666666-InterfaceKitDoc-or-this-repository’s-Docs" class="headerlink" title="Code interpretation document: https://github.com/adong666666/InterfaceKitDoc(or this repository’s Docs)"></a>Code interpretation document: <a href="https://github.com/adong666666/InterfaceKitDoc">https://github.com/adong666666/InterfaceKitDoc</a>(or this repository’s <code>Docs</code>)</h5><p>The basic idea of InterfaceKit is that we want some user interface abstraction layer that sufficiently encapsulates actually calling UIKit,AppKit,and WatchKit directly. It should be simple enough that common things are easy, but comprehensive enough that complicated things are also easy.</p><p>You can check out more about the project direction in the <a href="https://github.com/adong666666/InterfaceKit/blob/master/Vision.md">vision document</a>.</p><pre class="line-numbers language-none"><code class="language-none">                    ┌──────────────┐                    │   SwiftUI    │                    └──────▲───────┘                           │        ┌──────────────────────────┴───────────────────────────┐│                    InterfaceKit                      │└───────▲──────────────────▲───────────────────▲───────┘        │                  │                   │        ┌───────┴──────┐    ┌──────┴───────┐    ┌──────┴───────┐│     UIKit    │    │    AppKit    │    │   WatchKit   │└──────────────┘    └──────────────┘    └──────────────┘<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><a href="#features">Features</a></li><li><a href="#usage">Usage</a></li><li><a href="#requirements">Requirements</a></li><li><a href="#communication">Communication</a></li><li><a href="#status">Status</a></li><li><a href="#installation">Installation</a></li><li><a href="#faq">FAQ</a></li><li><a href="#credits">Credits</a></li><li><a href="#donations">Donations</a></li><li><a href="#contributing">Contributing</a></li><li><a href="#license">License</a></li><li><a href="#history">History</a></li></ul><h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><ul><li><input checked="" disabled="" type="checkbox"> use interface of UIKit in SwiftUI interface </li><li><input checked="" disabled="" type="checkbox"> use interface of AppKit in SwiftUI interface</li><li><input checked="" disabled="" type="checkbox"> use interface of WatchKit in SwiftUI interface</li></ul><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><h3 id="Universal"><a href="#Universal" class="headerlink" title="Universal"></a>Universal</h3><h4 id="For-iOS-or-tvOS"><a href="#For-iOS-or-tvOS" class="headerlink" title="For iOS or tvOS:"></a>For iOS or tvOS:</h4><ul><li><p>To present UIView.</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">InterfaceView</span><span class="token punctuation">(</span><span class="token class-name">MyUIView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>To present UIViewController.</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">InterfaceViewController</span><span class="token punctuation">(</span><span class="token class-name">MyUIViewController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="For-macOS"><a href="#For-macOS" class="headerlink" title="For macOS:"></a>For macOS:</h4><ul><li><p>To present NSView.</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">NSInterfaceView</span><span class="token punctuation">(</span><span class="token class-name">MyNSView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>To present NSViewController.</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">NSInterfaceViewController</span><span class="token punctuation">(</span><span class="token class-name">MyNSViewController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="For-watchOS"><a href="#For-watchOS" class="headerlink" title="For watchOS:"></a>For watchOS:</h4><ul><li>To present WKInterfaceObject. </li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">WKInterfaceView</span><span class="token punctuation">(</span><span class="token class-name">MyWKInterfaceObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="eg"><a href="#eg" class="headerlink" title="eg."></a>eg.</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token keyword">import</span> <span class="token class-name">InterfaceKit</span><span class="token keyword">struct</span> <span class="token class-name">MyInterfaceView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span>        <span class="token class-name">ZStack</span> <span class="token punctuation">{</span>            <span class="token class-name">InterfaceViewController</span><span class="token punctuation">(</span><span class="token class-name">MyViewController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token class-name">InterfaceView</span><span class="token punctuation">(</span><span class="token class-name">MyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token class-name">SwiftUIView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token directive property"><span class="token directive-name">#if</span> DEBUG</span><span class="token keyword">struct</span> <span class="token class-name">MyInterfaceView_Previews</span><span class="token punctuation">:</span> <span class="token class-name">PreviewProvider</span> <span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> previews<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span>        <span class="token class-name">MyInterfaceView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token directive property"><span class="token directive-name">#endif</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="With-Closure"><a href="#With-Closure" class="headerlink" title="With Closure"></a>With Closure</h3><p>You can do something while presenting SwiftUI view.</p><ul><li>For Example</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">InterfaceViewController</span><span class="token punctuation">(</span><span class="token class-name">MyUIViewController</span><span class="token punctuation">.</span>shared<span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Hello World"</span></span><span class="token punctuation">)</span>    <span class="token class-name">MyUIViewController</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span>delegate <span class="token operator">=</span> <span class="token class-name">SomeViewControler</span><span class="token punctuation">.</span>shared    <span class="token class-name">MyUIViewController</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span>view<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">0.5</span>    <span class="token class-name">MyUIViewController</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span>view<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token punctuation">.</span>white    <span class="token class-name">MyUIViewController</span><span class="token punctuation">.</span><span class="token function">someFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">networkRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token class-name">JSONParsing</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">downloadFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">showProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">makeToast</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">databaseOperation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">//do something</span>    <span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">navigationBarBackButtonHidden</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">navigationBarHidden</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">navigationBarTitle</span><span class="token punctuation">(</span><span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Title"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> displayMode<span class="token punctuation">:</span> <span class="token punctuation">.</span>large<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Multiple-platforms"><a href="#Multiple-platforms" class="headerlink" title="Multiple platforms"></a>Multiple platforms</h3><p>InterfaceKit makes it clearer for multiple platforms programming.</p><ul><li>For Example</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token keyword">import</span> <span class="token class-name">MapKit</span><span class="token keyword">import</span> <span class="token class-name">InterfaceKit</span><span class="token keyword">let</span> <span class="token constant">kStr</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"Hello World"</span></span><span class="token directive property"><span class="token directive-name">#if</span> os<span class="token punctuation">(</span>iOS<span class="token punctuation">)</span> <span class="token operator">||</span> os<span class="token punctuation">(</span>tvOS<span class="token punctuation">)</span></span>    <span class="token keyword">typealias</span> <span class="token class-name">OSViewController</span> <span class="token operator">=</span> <span class="token class-name">UIViewController</span>    <span class="token keyword">typealias</span> <span class="token class-name">OSView</span> <span class="token operator">=</span> <span class="token class-name">UILabel</span>    <span class="token keyword">typealias</span> <span class="token class-name">OSInterfaceView</span> <span class="token operator">=</span> <span class="token class-name">InterfaceView</span>    <span class="token keyword">typealias</span> <span class="token class-name">OSInterfaceVC</span> <span class="token operator">=</span> <span class="token class-name">InterfaceViewController</span>    <span class="token keyword">let</span> <span class="token constant">kBounds</span> <span class="token operator">=</span> <span class="token class-name">UIScreen</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span>bounds <span class="token keyword">as</span> <span class="token class-name">CGRect</span><span class="token operator">?</span><span class="token directive property"><span class="token directive-name">#elseif</span> os<span class="token punctuation">(</span>macOS<span class="token punctuation">)</span></span>    <span class="token keyword">typealias</span> <span class="token class-name">OSViewController</span> <span class="token operator">=</span> <span class="token class-name">NSViewController</span>    <span class="token keyword">typealias</span> <span class="token class-name">OSView</span> <span class="token operator">=</span> <span class="token class-name">NSTextField</span>    <span class="token keyword">typealias</span> <span class="token class-name">OSInterfaceView</span> <span class="token operator">=</span> <span class="token class-name">NSInterfaceView</span>    <span class="token keyword">typealias</span> <span class="token class-name">OSInterfaceVC</span> <span class="token operator">=</span> <span class="token class-name">NSInterfaceViewController</span>    <span class="token keyword">let</span> <span class="token constant">kBounds</span> <span class="token operator">=</span> <span class="token class-name">NSScreen</span><span class="token punctuation">.</span>main<span class="token operator">?</span><span class="token punctuation">.</span>frame<span class="token directive property"><span class="token directive-name">#endif</span></span><span class="token attribute atrule">@main</span><span class="token keyword">struct</span> <span class="token class-name">EApp</span><span class="token punctuation">:</span> <span class="token class-name">App</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">Scene</span> <span class="token punctuation">{</span>        <span class="token class-name">WindowGroup</span> <span class="token punctuation">{</span>            <span class="token class-name">ZStack</span> <span class="token punctuation">{</span>                <span class="token directive property"><span class="token directive-name">#if</span> <span class="token operator">!</span>os<span class="token punctuation">(</span>watchOS<span class="token punctuation">)</span></span>                    <span class="token class-name">OSInterfaceView</span><span class="token punctuation">(</span><span class="token class-name">MKMapView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token class-name">OSInterfaceView</span><span class="token punctuation">(</span><span class="token class-name">MyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token constant">kStr</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>                    <span class="token class-name">OSInterfaceVC</span><span class="token punctuation">(</span><span class="token class-name">MyVC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token directive property"><span class="token directive-name">#else</span></span>                    <span class="token class-name">WKInterfaceView</span><span class="token punctuation">(</span><span class="token class-name">WKInterfaceMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token constant">kStr</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>                <span class="token directive property"><span class="token directive-name">#endif</span></span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token constant">kStr</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>purple<span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token directive property"><span class="token directive-name">#if</span> <span class="token operator">!</span>os<span class="token punctuation">(</span>watchOS<span class="token punctuation">)</span></span><span class="token keyword">class</span> <span class="token class-name">MyVC</span><span class="token punctuation">:</span> <span class="token class-name">OSViewController</span> <span class="token punctuation">{</span>    <span class="token directive property"><span class="token directive-name">#if</span> os<span class="token punctuation">(</span>iOS<span class="token punctuation">)</span> <span class="token operator">||</span> os<span class="token punctuation">(</span>tvOS<span class="token punctuation">)</span></span>        <span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">viewDidLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">let</span> lbl <span class="token operator">=</span> <span class="token class-name">MyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            lbl<span class="token punctuation">.</span>textAlignment <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token keyword">right</span>            view<span class="token punctuation">.</span><span class="token function">addSubview</span><span class="token punctuation">(</span>lbl<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token directive property"><span class="token directive-name">#elseif</span> os<span class="token punctuation">(</span>macOS<span class="token punctuation">)</span></span>        <span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">loadView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> view <span class="token operator">=</span> <span class="token class-name">MyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>    <span class="token directive property"><span class="token directive-name">#endif</span></span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">MyView</span><span class="token punctuation">:</span> <span class="token class-name">OSView</span> <span class="token punctuation">{</span>    <span class="token keyword">override</span> <span class="token keyword">init</span><span class="token punctuation">(</span>frame<span class="token punctuation">:</span> <span class="token class-name">CGRect</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>frame<span class="token punctuation">:</span> <span class="token class-name">CGRect</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token constant">kBounds</span><span class="token operator">!</span><span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">60</span><span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token constant">kBounds</span><span class="token operator">!</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token directive property"><span class="token directive-name">#if</span> os<span class="token punctuation">(</span>iOS<span class="token punctuation">)</span> <span class="token operator">||</span> os<span class="token punctuation">(</span>tvOS<span class="token punctuation">)</span></span>            text <span class="token operator">=</span> <span class="token constant">kStr</span>        <span class="token directive property"><span class="token directive-name">#elseif</span> os<span class="token punctuation">(</span>macOS<span class="token punctuation">)</span></span>            stringValue <span class="token operator">=</span> <span class="token constant">kStr</span>        <span class="token directive property"><span class="token directive-name">#endif</span></span>    <span class="token punctuation">}</span>        <span class="token keyword">required</span> <span class="token keyword">init</span><span class="token operator">?</span><span class="token punctuation">(</span>coder<span class="token punctuation">:</span> <span class="token class-name">NSCoder</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">fatalError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token directive property"><span class="token directive-name">#endif</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h2><ul><li>iOS 13.0+ / macOS 10.15+ / tvOS 13.0+ / watchOS 6.0+</li><li>Xcode 11+</li><li>Swift 5.1+</li></ul><h2 id="Communication"><a href="#Communication" class="headerlink" title="Communication"></a>Communication</h2><ul><li>QQ Group: 1027277979</li><li>If you’d like to contact me, use mail:<a href="mailto:3440217568@qq.com">3440217568@qq.com</a> or QQ:3440217568 or WeChat:adongenjoylife or telephone:15674119605.</li><li>If you found a bug, and can provide steps to reliably reproduce it, please open an issue.</li><li>If you have a feature request, please open an issue.</li><li>If you want to contribute, please submit a pull request.</li></ul><h2 id="Status"><a href="#Status" class="headerlink" title="Status"></a>Status</h2><p>This project is actively under development. We consider it ready for production use.</p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Below is a table that shows which version of InterfaceKit you should use for your Swift version.</p><table><thead><tr><th>Swift</th><th>InterfaceKit</th></tr></thead><tbody><tr><td>5.X</td><td>&gt;= 5.4.0</td></tr></tbody></table><p>InterfaceKit supports multiple methods for installing the library in a project.</p><h3 id="Copy-to-your-project"><a href="#Copy-to-your-project" class="headerlink" title="Copy to your project"></a>Copy to your project</h3><p>Clone the repository by running the following command:</p><pre class="line-numbers language-none"><code class="language-none">git clone https://github.com/adong666666/InterfaceKit.git --depth=1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Copy the Swift files in <code>InterfaceKit</code> folder to your project.</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/copy_files.png" alt=""></div><ul><li>If for iOS or tvOS project, you can copy the file <code>UIInterface.swift</code>.</li><li>If for macOS project, you can copy the file <code>NSInterface.swift</code>.</li><li>If for watchOS project, you can copy the file <code>WKInterface.swift</code>.</li></ul><h3 id="CocoaPods"><a href="#CocoaPods" class="headerlink" title="CocoaPods"></a>CocoaPods</h3><p><a href="https://cocoapods.org/">CocoaPods</a> is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. If you have not installed CocoaPods, just install it with the following command:</p><pre class="line-numbers language-none"><code class="language-none">$ gem install cocoapods<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br>You need a `Podfile` to Integrate InterfaceKit into your Xcode project with CocoaPods. If you do not have a Podfile, just create one or use the Podfile provided in `PodfileExample` folder by this repository. Podfile is as follows.<pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby"><span class="token comment"># Podfile</span>source <span class="token string-literal"><span class="token string">'https://github.com/CocoaPods/Specs.git'</span></span><span class="token comment"># platform:ios, '13.0'</span>use_frameworks<span class="token operator">!</span>inhibit_all_warnings<span class="token operator">!</span>target <span class="token string-literal"><span class="token string">'YOUR_TARGET_NAME'</span></span> <span class="token keyword">do</span>    pod <span class="token string-literal"><span class="token string">'InterfaceKit'</span></span><span class="token keyword">end</span><span class="token comment"># post_install do |installer_representation|</span><span class="token comment">#   installer_representation.pods_project.targets.each do |target|</span><span class="token comment">#     target.build_configurations.each do |config|</span><span class="token comment">#       config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'</span><span class="token comment">#     end</span><span class="token comment">#   end</span><span class="token comment"># end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Replace <code>YOUR_TARGET_NAME</code> with your project name.<br>To integrate InterfaceKit into your Xcode project using CocoaPods, specify it in your <code>Podfile</code>:</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string-literal"><span class="token string">'InterfaceKit'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Maybe you have not update CocoaPods, then <code>InterfaceKit</code> may not be found, you can run <code>pod update</code> to update CocoaPods, or just run the following command. </p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string-literal"><span class="token string">'InterfaceKit'</span></span><span class="token punctuation">,</span> <span class="token symbol">:git</span> <span class="token operator">=&gt;</span> <span class="token string-literal"><span class="token string">'https://github.com/adong666666/InterfaceKit.git'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>If just for iOS or tvOS project, you can specify it in your <code>Podfile</code>:</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string-literal"><span class="token string">'InterfaceKit/UIKit'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>If just for mac project, you can specify it in your <code>Podfile</code>:</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string-literal"><span class="token string">'InterfaceKit/AppKit'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>If just for watchOS project, you can specify it in your <code>Podfile</code>:</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string-literal"><span class="token string">'InterfaceKit/WatchKit'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>If you want to use the newest release of the framework, you can specify it in your <code>Podfile</code>:</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string-literal"><span class="token string">'InterfaceKit'</span></span><span class="token punctuation">,</span> <span class="token symbol">:git</span> <span class="token operator">=&gt;</span> <span class="token string-literal"><span class="token string">'https://github.com/adong666666/InterfaceKit.git'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>If you want to use the <code>specific</code> release of the framework, you can specify it like following in your <code>Podfile</code>:</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">pod <span class="token string-literal"><span class="token string">'InterfaceKit'</span></span><span class="token punctuation">,</span> <span class="token symbol">:git</span> <span class="token operator">=&gt;</span> <span class="token string-literal"><span class="token string">'https://github.com/adong666666/InterfaceKit.git'</span></span><span class="token punctuation">,</span> <span class="token symbol">:branch</span> <span class="token operator">=&gt;</span> <span class="token string-literal"><span class="token string">'master'</span></span><span class="token comment">#, commit: "b7e1facdedd8fe16d04ef5f47c4697e89bad9f27", '~&gt; 5.4.0', :tag =&gt; '5.4.0'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p>Then, in the <code>Podfile</code> directory(Make sure that your Podfile and your xcodeproj file are in the same directory), run the following command:</p><pre class="line-numbers language-none"><code class="language-none">$ pod install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/PodfileLocation.png" alt=""></div><h3 id="Carthage"><a href="#Carthage" class="headerlink" title="Carthage"></a>Carthage</h3><p><a href="https://github.com/Carthage/Carthage">Carthage</a> is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks.</p><ol><li><p>To integrate InterfaceKit into your Xcode project using Carthage, specify it in your <code>Cartfile</code>(If you don’t have Cartfile, just create one or use the Cartfile provided by this repository in <code>CartfileExample</code> folder):</p><pre class="line-numbers language-ogdl" data-language="ogdl"><code class="language-ogdl">github "adong666666/InterfaceKit" "master"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>Then, in the <code>Cartfile</code> directory(Make sure that your Podfile and your xcodeproj file are in the same directory), run <code>carthage update --use-xcframeworks</code>.<br>OR</p><ul><li>For iOS project, Run <code>carthage update --platform iOS</code>.</li><li>For macOS project, Run <code>carthage update --platform macOS</code>.</li><li>For tvOS project, Run <code>carthage update --platform tvOS</code>.</li><li>For watchOS project, Run <code>carthage update --platform watchOS</code>. <div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/CartfileLocation.png" alt=""></div></li></ul></li><li><p>On your application targets’ <code>"General"</code> settings tab, in the <code>"Frameworks,Libraries,and Embedded Content"</code> section, drag and drop <code>InterfaceKit</code> xcframework (or just select the appropriate framework from xcframework) from the Carthage/Build folder on disk.</p></li></ol><h4 id="Carthage-as-a-Static-Library"><a href="#Carthage-as-a-Static-Library" class="headerlink" title="Carthage as a Static Library"></a>Carthage as a Static Library</h4><p>Carthage defaults to building InterfaceKit as a Dynamic Library. </p><p>If you wish to build InterfaceKit as a Static Library using Carthage you may use the script below to manually modify the framework type before building with Carthage:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">carthage update InterfaceKit --platform iOS --no-build<span class="token function">sed</span> -i -e <span class="token string">'s/MACH_O_TYPE = mh_dylib/MACH_O_TYPE = staticlib/g'</span> Carthage/Checkouts/InterfaceKit/InterfaceKit/InterfaceKit.xcodeproj/project.pbxprojcarthage build InterfaceKit --platform iOS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Swift-Package-Manager"><a href="#Swift-Package-Manager" class="headerlink" title="Swift Package Manager"></a>Swift Package Manager</h3><p>The <a href="https://swift.org/package-manager/">Swift Package Manager</a> is a tool for automating the distribution of Swift code and is integrated into the <code>swift</code> compiler. It is in early development, but InterfaceKit does support its use on supported platforms.</p><ol><li>Once you have your Swift package set up, adding InterfaceKit as a dependency is as easy as adding it to the <code>dependencies</code> value of your <code>Package.swift</code>. Then run <code>swift build</code>.</li></ol><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift">dependencies<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">.</span><span class="token function">package</span><span class="token punctuation">(</span>url<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"https://github.com/adong666666/InterfaceKit.git"</span></span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token function">upToNextMajor</span><span class="token punctuation">(</span>from<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"5.4.0"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>OR</p><ol><li>In Xcode, select File &gt; Swift Packages &gt; Add Package Dependency.</li><li>Follow the prompts using the URL(“<a href="https://github.com/adong666666/InterfaceKit.git&quot;">https://github.com/adong666666/InterfaceKit.git"</a>) for this repository.<div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/SwiftPackageManager.png" alt=""></div></li></ol><h3 id="Manually"><a href="#Manually" class="headerlink" title="Manually"></a>Manually</h3><p>If you prefer not to use any of the aforementioned dependency managers, you can integrate InterfaceKit into your project manually.</p><h4 id="Embedded-Framework"><a href="#Embedded-Framework" class="headerlink" title="Embedded Framework"></a>Embedded Framework</h4><ul><li>Open up Terminal, <code>cd</code> into your top-level project directory, and run the following command “if” your project is not initialized as a git repository:</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>Add InterfaceKit as a git <a href="https://git-scm.com/docs/git-submodule">submodule</a> by running the following command:</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> submodule <span class="token function">add</span> https://github.com/adong666666/InterfaceKit.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>Open the <code>InterfaceKit</code> folder, and drag the <code>InterfaceKit.xcodeproj</code> into the Project Navigator of your application’s Xcode project.</p><blockquote><p>It should appear nested underneath your application’s blue project icon. Whether it is above or below all the other Xcode groups does not matter.</p></blockquote></li></ul><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/drag_framework.png" alt=""></div><ul><li><p>Select the <code>InterfaceKit.xcodeproj</code> in the Project Navigator and verify the deployment target matches that of your application target.</p></li><li><p>Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the “Targets” heading in the sidebar.</p></li><li><p>In the tab bar at the top of that window, open the <code>"General"</code> panel.</p></li><li><p>Click on the <code>+</code> button under the <code>"Frameworks,Libraries,and Embedded Content"</code> section.</p></li><li><p>You will see the <code>InterfaceKit</code> folder under <code>Workspace</code>. There are <code>InterfaceKit.framework</code> and  <code>InterfaceKitTests.xctest</code> in the <code>InterfaceKit</code> folder`</p><blockquote><p>Click <code>InterfaceKit.framework</code>, and then click <code>Add</code></p></blockquote></li></ul><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/add_framework.png" alt=""></div><ul><li><p>And that’s it!</p><blockquote><p>The <code>InterfaceKit.framework</code> is automagically added as a target dependency, linked framework and embedded framework in a copy files build phase which is all you need to build on the simulator and a device.</p></blockquote></li></ul><h3 id="Unzip-drag-and-drop"><a href="#Unzip-drag-and-drop" class="headerlink" title="Unzip,drag and drop"></a>Unzip,drag and drop</h3><ol><li><p>Unzip the <code>InterfaceKit.xcframework.zip</code> file provided by the repository.</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/unzip.png" alt=""></div></li><li><p>On your application targets’ <code>“General”</code> settings tab, in the <code>"Frameworks,Libraries,and Embedded Content"</code> section, drag and drop the unzipped file <code>InterfaceKit.xcframework</code> (or just select the appropriate framework from InterfaceKit.xcframework).</p></li></ol><ul><li><p>If you use <code>xcfameworks</code>, just drag and drop <code>InterfaceKit.xcframework</code>. <code>InterfaceKit.xcframework</code> supports all four platforms(<code>iOS, macOS, tvOS, watchOS</code>).</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/use_xcframeworks.png" alt=""></div></li><li><p>If you use <code>frameworks</code>, select the appropriate framework from InterfaceKit.xcframework according to the folder name and the platform of your project.</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/adong666666/InterfaceKit/Pictures/use_frameworks.png" alt=""></div></li></ul><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h3 id="Why-use-InterfaceKit"><a href="#Why-use-InterfaceKit" class="headerlink" title="Why use InterfaceKit?"></a>Why use InterfaceKit?</h3><p><code>One line of code</code> to implement interfaces of <code>UIKit,AppKit,and WatchKit</code> in <code>SwiftUI</code> interface! InterfaceKit supports for all four platforms(<code>iOS, macOS, tvOS, watchOS</code>). InterfaceKit is <code>constantly</code> updated.</p><h2 id="Credits"><a href="#Credits" class="headerlink" title="Credits"></a>Credits</h2><p>InterfaceKit is owned and maintained by <a href="https://zsd.name/">Saidong Zhang</a>. You can follow him on github at <a href="https://github.com/adong666666">@Github</a> for project updates and releases. </p><h3 id="Security-Disclosure"><a href="#Security-Disclosure" class="headerlink" title="Security Disclosure"></a>Security Disclosure</h3><p>If you believe you have identified a security vulnerability with InterfaceKit, you should report it as soon as possible via email to <a href="mailto:3440217568@qq.com">3440217568@qq.com</a>. </p><h2 id="Donations"><a href="#Donations" class="headerlink" title="Donations"></a>Donations</h2><p>No donation required, but thanks anyway.</p><h2 id="Contributing"><a href="#Contributing" class="headerlink" title="Contributing"></a>Contributing</h2><p>Hey! Do you like InterfaceKit? Awesome! We could actually really use your help!</p><p>Open source isn’t just writing code. InterfaceKit could use your help with any of the following:</p><ul><li>Finding (and reporting!) bugs.</li><li>New feature suggestions.</li><li>Answering questions on issues.</li><li>Documentation improvements.</li><li>Reviewing pull requests.</li><li>Helping to manage issue priorities.</li><li>Fixing bugs/new features.</li></ul><p>If any of that sounds cool to you, send a pull request! After your first contribution, we will add you as a member to the repo so you can merge pull requests and help steer the ship <span class="github-emoji"><span>🚢</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a2.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> You can read more details about that <a href="https://github.com/adong666666/InterfaceKit/blob/master/CONTRIBUTING.md">in our contributor guidelines</a>.</p><p>InterfaceKit’s community has a tremendous positive energy, and the maintainers are committed to keeping things awesome. Like <a href="https://github.com/CocoaPods/CocoaPods/wiki/Communication-&amp;-Design-Rules">in the CocoaPods community</a>, always assume positive intent; even if a comment sounds mean-spirited, give the person the benefit of the doubt.</p><p>Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by <a href="https://github.com/adong666666/InterfaceKit/blob/master/Code%20of%20Conduct.md">its terms</a>.</p><h3 id="Adding-new-source-files"><a href="#Adding-new-source-files" class="headerlink" title="Adding new source files"></a>Adding new source files</h3><p>If you add or remove a source file from InterfaceKIt, a corresponding change needs to be made to the <code>InterfaceKit.xcworkspace</code> project at the root of this repository. This project is used for Carthage. Don’t worry, you’ll get an automated warning when submitting a pull request if you forget.</p><h3 id="Help-us-improve-InterfaceKit-documentation"><a href="#Help-us-improve-InterfaceKit-documentation" class="headerlink" title="Help us improve InterfaceKit documentation"></a>Help us improve InterfaceKit documentation</h3><p>Whether you’re a core member or a user trying it out for the first time, you can make a valuable contribution to InterfaceKit by improving the documentation. Help us by:</p><ul><li>sending us feedback about something you thought was confusing or simply missing</li><li>suggesting better wording or ways of explaining certain topics</li><li>sending us a pull request via GitHub</li><li>improving the <a href="https://github.com/adong666666/InterfaceKit/blob/master/README.zh-Hans.md">Chinese documentation</a></li></ul><h3 id="Too-wordy-about-the-above-Then-just-do-it"><a href="#Too-wordy-about-the-above-Then-just-do-it" class="headerlink" title="Too wordy about the above? Then just do it."></a>Too wordy about the above? Then just do it.</h3><ul><li>Fork the repository!</li><li>Create your feature branch: <code>git checkout -b my-new-feature</code></li><li>Commit your changes: <code>git commit -am 'Add some feature'</code></li><li>Push to the branch: <code>git push origin my-new-feature</code></li><li>Submit a pull request</li><li>Other:<br><a href="https://github.com/adong666666/InterfaceKit/blob/master/CONTRIBUTING.md">See CONTRIBUTING.md</a> for details.</li></ul><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>InterfaceKit is released under the MIT license. <a href="https://github.com/adong666666/InterfaceKit/blob/master/LICENSE.md">See LICENSE</a> for details.</p><h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><p><a href="https://github.com/adong666666/InterfaceKit/blob/master/CHANGELOG.md">See CHANGELOG.md</a> for details.</p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> git </tag>
            
            <tag> framework </tag>
            
            <tag> github </tag>
            
            <tag> carthage </tag>
            
            <tag> cocoapods </tag>
            
            <tag> macOS </tag>
            
            <tag> tvOS </tag>
            
            <tag> watchOS </tag>
            
            <tag> swift package manager </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jazzy生成代码解释文档</title>
      <link href="/posts/31013.html"/>
      <url>/posts/31013.html</url>
      
        <content type="html"><![CDATA[<h1 id="jazzy生成代码解释文档"><a href="#jazzy生成代码解释文档" class="headerlink" title="jazzy生成代码解释文档"></a>jazzy生成代码解释文档</h1><p>========================<br>realm的jazzy的确好用</p><h2 id="安装看官网"><a href="#安装看官网" class="headerlink" title="安装看官网"></a>安装看官网</h2><p><a href="https://github.com/realm/jazzy">https://github.com/realm/jazzy</a></p><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>这个不配置也可以生成文档，只是默认的文档比较丑，我用的文件如下</p><pre class="line-numbers language-none"><code class="language-none">author: Saidong Zhangauthor_url: https://zsd.name/github_url: https://github.com/adong666666/InterfaceKitroot_url: https://zsd.name/InterfaceKit/module: InterfaceKitoutput: Docstheme: fullwidthxcodebuild_arguments: [-workspace, 'InterfaceKit.xcworkspace', -scheme, 'InterfaceKit']<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="命令行生成文档"><a href="#命令行生成文档" class="headerlink" title="命令行生成文档"></a>命令行生成文档</h2><p>我用这个命令行<code>jazzy -o Docs</code>将文档生成至Docs文件夹下，注意默认要在xcodeproj目录下执行。<br>这样一来，只要你的代码遵守iOS注释规范，就能生成非常漂亮的代码解释文档<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/jazzy%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81%E8%A7%A3%E9%87%8A%E6%96%87%E6%A1%A3/%E6%96%87%E6%A1%A3%E6%88%AA%E5%9B%BE.png" alt="文档截图"></p>]]></content>
      
      
      <categories>
          
          <category> 文档处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
            <tag> Objective-C </tag>
            
            <tag> doc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>podspec示例</title>
      <link href="/posts/34032.html"/>
      <url>/posts/34032.html</url>
      
        <content type="html"><![CDATA[<h1 id="podspec示例"><a href="#podspec示例" class="headerlink" title="podspec示例"></a>podspec示例</h1><p>========================</p><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby"><span class="token comment">#</span><span class="token comment">#  Be sure to run `pod spec lint CommonUse.podspec' to ensure this is a</span><span class="token comment">#  valid spec and to remove all comments including this before submitting the spec.</span><span class="token comment">#</span><span class="token comment">#  To learn more about Podspec attributes see http://docs.cocoapods.org/specification.html</span><span class="token comment">#  To see working Podspecs in the CocoaPods repo see https://github.com/CocoaPods/Specs/</span><span class="token comment">#</span>Pod<span class="token double-colon punctuation">::</span><span class="token class-name">Spec</span><span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token keyword">do</span> <span class="token operator">|</span>s<span class="token operator">|</span>  <span class="token comment"># ―――  Spec Metadata  ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #</span>  <span class="token comment">#</span>  <span class="token comment">#  These will help people to find your library, and whilst it</span>  <span class="token comment">#  can feel like a chore to fill in it's definitely to your advantage. The</span>  <span class="token comment">#  summary should be tweet-length, and the description more in depth.</span>  <span class="token comment">#</span>  s<span class="token punctuation">.</span>name         <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"CommonUse"</span></span>  s<span class="token punctuation">.</span>version      <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"0.0.3"</span></span>  s<span class="token punctuation">.</span>summary      <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"I am now testing my first framwork"</span></span>  <span class="token comment"># This description is used to generate tags and improve search results.</span>  <span class="token comment">#   * Think: What does it do? Why did you write it? What is the focus?</span>  <span class="token comment">#   * Try to keep it short, snappy and to the point.</span>  <span class="token comment">#   * Write the description between the DESC delimiters below.</span>  <span class="token comment">#   * Finally, don't worry about the indent, CocoaPods strips it!</span>  s<span class="token punctuation">.</span>description  <span class="token operator">=</span> <span class="token string-literal heredoc-string"><span class="token delimiter"><span class="token punctuation">&lt;&lt;-</span><span class="token symbol">DESC</span></span><span class="token string">                   I am testing my framwork.Hope to create a perfect one soon .                   </span><span class="token delimiter"><span class="token symbol">DESC</span></span></span>  s<span class="token punctuation">.</span>homepage     <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"https://github.com/adong666666/CommonUse"</span></span>  <span class="token comment"># s.screenshots  = "www.example.com/screenshots_1.gif", "www.example.com/screenshots_2.gif"</span>  <span class="token comment"># ―――  Spec License  ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #</span>  <span class="token comment">#</span>  <span class="token comment">#  Licensing your code is important. See http://choosealicense.com for more info.</span>  <span class="token comment">#  CocoaPods will detect a license file if there is a named LICENSE*</span>  <span class="token comment">#  Popular ones are 'MIT', 'BSD' and 'Apache License, Version 2.0'.</span>  <span class="token comment">#</span>  <span class="token comment"># s.license      = "MIT (example)"</span>  s<span class="token punctuation">.</span>license      <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token symbol">:type</span> <span class="token operator">=&gt;</span> <span class="token string-literal"><span class="token string">"MIT"</span></span><span class="token punctuation">,</span> <span class="token symbol">:file</span> <span class="token operator">=&gt;</span> <span class="token string-literal"><span class="token string">"FILE_LICENSE"</span></span> <span class="token punctuation">}</span>  <span class="token comment"># ――― Author Metadata  ――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #</span>  <span class="token comment">#</span>  <span class="token comment">#  Specify the authors of the library, with email addresses. Email addresses</span>  <span class="token comment">#  of the authors are extracted from the SCM log. E.g. $ git log. CocoaPods also</span>  <span class="token comment">#  accepts just a name if you'd rather not provide an email address.</span>  <span class="token comment">#</span>  <span class="token comment">#  Specify a social_media_url where others can refer to, for example a twitter</span>  <span class="token comment">#  profile URL.</span>  <span class="token comment">#</span>  s<span class="token punctuation">.</span>author             <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string-literal"><span class="token string">"Zhangsaidong"</span></span> <span class="token operator">=&gt;</span> <span class="token string-literal"><span class="token string">"3440217568@qq.com"</span></span> <span class="token punctuation">}</span>  <span class="token comment"># Or just: s.author    = "Zhangsaidong"</span>  <span class="token comment"># s.authors            = { "Zhangsaidong" =&gt; "3440217568@qq.com" }</span>  <span class="token comment"># s.social_media_url   = "http://twitter.com/Zhangsaidong"</span>  <span class="token comment"># ――― Platform Specifics ――――――――――――――――――――――――――――――――――――――――――――――――――――――― #</span>  <span class="token comment">#</span>  <span class="token comment">#  If this Pod runs only on iOS or OS X, then specify the platform and</span>  <span class="token comment">#  the deployment target. You can optionally include the target after the platform.</span>  <span class="token comment">#</span>  <span class="token comment"># s.platform     = :ios</span>   s<span class="token punctuation">.</span>platform     <span class="token operator">=</span> <span class="token symbol">:ios</span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"8.0"</span></span>  <span class="token comment">#  When using multiple platforms</span>   s<span class="token punctuation">.</span>ios<span class="token punctuation">.</span>deployment_target <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"8.0"</span></span>  <span class="token comment"># s.osx.deployment_target = "10.7"</span>  <span class="token comment"># s.watchos.deployment_target = "2.0"</span>  <span class="token comment"># s.tvos.deployment_target = "9.0"</span>  <span class="token comment"># ――― Source Location ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #</span>  <span class="token comment">#</span>  <span class="token comment">#  Specify the location from where the source should be retrieved.</span>  <span class="token comment">#  Supports git, hg, bzr, svn and HTTP.</span>  <span class="token comment">#</span>  s<span class="token punctuation">.</span>source       <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token symbol">:git</span> <span class="token operator">=&gt;</span> <span class="token string-literal"><span class="token string">"https://github.com/adong666666/CommonUse.git"</span></span><span class="token punctuation">,</span> <span class="token symbol">:tag</span> <span class="token operator">=&gt;</span> <span class="token string-literal"><span class="token string">"</span><span class="token interpolation"><span class="token delimiter punctuation">#{</span><span class="token content">s<span class="token punctuation">.</span>version</span><span class="token delimiter punctuation">}</span></span><span class="token string">"</span></span> <span class="token punctuation">}</span>  <span class="token comment"># ――― Source Code ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #</span>  <span class="token comment">#</span>  <span class="token comment">#  CocoaPods is smart about how it includes source code. For source files</span>  <span class="token comment">#  giving a folder will include any swift, h, m, mm, c &amp; cpp files.</span>  <span class="token comment">#  For header files it will include any header in the folder.</span>  <span class="token comment">#  Not including the public_header_files will make all headers public.</span>  <span class="token comment">#</span>  s<span class="token punctuation">.</span>source_files  <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"*.{h,m,swift}"</span></span>  <span class="token comment"># s.public_header_files = "Classes/**/*.h"</span>  <span class="token comment"># ――― Resources ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #</span>  <span class="token comment">#</span>  <span class="token comment">#  A list of resources included with the Pod. These are copied into the</span>  <span class="token comment">#  target bundle with a build phase script. Anything else will be cleaned.</span>  <span class="token comment">#  You can preserve files from being cleaned, please don't preserve</span>  <span class="token comment">#  non-essential files like tests, examples and documentation.</span>  <span class="token comment">#</span>  <span class="token comment"># s.resource  = "icon.png"</span>  <span class="token comment"># s.resources = "Resources/*.png"</span>  <span class="token comment"># s.preserve_paths = "FilesToSave", "MoreFilesToSave"</span>  <span class="token comment"># ――― Project Linking ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #</span>  <span class="token comment">#</span>  <span class="token comment">#  Link your library with frameworks, or libraries. Libraries do not include</span>  <span class="token comment">#  the lib prefix of their name.</span>  <span class="token comment">#</span>  <span class="token comment"># s.framework  = "SomeFramework"</span>  <span class="token comment"># s.frameworks = "SomeFramework", "AnotherFramework"</span>  <span class="token comment"># s.library   = "iconv"</span>  <span class="token comment"># s.libraries = "iconv", "xml2"</span>  <span class="token comment"># ――― Project Settings ――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #</span>  <span class="token comment">#</span>  <span class="token comment">#  If your library depends on compiler flags you can set them in the xcconfig hash</span>  <span class="token comment">#  where they will only apply to your library. If you depend on other Podspecs</span>  <span class="token comment">#  you can include multiple dependencies to ensure it works.</span>  <span class="token comment"># s.requires_arc = true</span>  <span class="token comment"># s.xcconfig = { "HEADER_SEARCH_PATHS" =&gt; "$(SDKROOT)/usr/include/libxml2" }</span>  <span class="token comment"># s.dependency "JSONKit", "~&gt; 1.4"</span>  <span class="token comment"># ――― Swift Version ――――――――――――――――――――――――――――――――――――――――――――――――――――――――― #</span>  s<span class="token punctuation">.</span>swift_version <span class="token operator">=</span> <span class="token string-literal"><span class="token string">'4.2'</span></span>   <span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">Pod<span class="token double-colon punctuation">::</span><span class="token class-name">Spec</span><span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token keyword">do</span> <span class="token operator">|</span>s<span class="token operator">|</span>  s<span class="token punctuation">.</span>name             <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"InterfaceKit"</span></span>  s<span class="token punctuation">.</span>version          <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"5.4.0"</span></span>  s<span class="token punctuation">.</span>summary          <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"InterfaceKit helps you use interface of UIKit, AppKit and WatchKit in SwiftUI interface easily"</span></span>  s<span class="token punctuation">.</span>description      <span class="token operator">=</span> <span class="token string-literal heredoc-string"><span class="token delimiter"><span class="token punctuation">&lt;&lt;-</span><span class="token symbol">DESC</span></span><span class="token string">This is supported by [Saidong Zhang](https://zsd.name)its intention is to help people use interface of UIKit, AppKit and WatchKit in SwiftUI interface easily./// You create custom views by declaring types that conform to the ``View``/// protocol. Implement the required ``View/body-swift.property`` computed/// property to provide the content for your custom view. Then you can present your UIKit/// ViewController View by using `InterfaceView(MyView())` , as follows.```swift//////     struct MyView: View {///         var body: some View {///             InterfaceView(MyView())///         }///     }///```/// The ``View`` protocol provides a large set of modifiers, defined as protocol/// methods with default implementations, that you use to position and configure/// views in the layout of your app. Modifiers typically work by wrapping the/// view instance on which you call them in another view with the specified/// characteristics. For example, adding the ``View/opacity(_:)`` modifier to a/// interface view returns a new view with some amount of transparency:```swift//////     InterfaceView(MyView())///         .opacity(0.5) // Display partially transparent interface view.///```/// It is recommended to use `ZStack` with `InterfaceView` , as follows.```swift//////     ZStack {///         InterfaceView(MyView())///         MySwiftUIView()///     }///```                        </span><span class="token delimiter"><span class="token symbol">DESC</span></span></span>  s<span class="token punctuation">.</span>homepage         <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"https://github.com/adong666666/InterfaceKit"</span></span>  s<span class="token punctuation">.</span>license          <span class="token operator">=</span> <span class="token string-literal"><span class="token string">'MIT'</span></span>  s<span class="token punctuation">.</span>author           <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string-literal"><span class="token string">"Saidong Zhang"</span></span> <span class="token operator">=&gt;</span> <span class="token string-literal"><span class="token string">"3440217568@qq.com"</span></span> <span class="token punctuation">}</span>  s<span class="token punctuation">.</span>source           <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token symbol">:git</span> <span class="token operator">=&gt;</span> <span class="token string-literal"><span class="token string">"https://github.com/adong666666/InterfaceKit.git"</span></span><span class="token punctuation">,</span> <span class="token symbol">:tag</span> <span class="token operator">=&gt;</span> s<span class="token punctuation">.</span>version<span class="token punctuation">.</span>to_s <span class="token punctuation">}</span>  s<span class="token punctuation">.</span>requires_arc          <span class="token operator">=</span> <span class="token boolean">true</span>  s<span class="token punctuation">.</span>ios<span class="token punctuation">.</span>deployment_target <span class="token operator">=</span> <span class="token string-literal"><span class="token string">'13.0'</span></span>  s<span class="token punctuation">.</span>osx<span class="token punctuation">.</span>deployment_target <span class="token operator">=</span> <span class="token string-literal"><span class="token string">'10.15'</span></span>  s<span class="token punctuation">.</span>watchos<span class="token punctuation">.</span>deployment_target <span class="token operator">=</span> <span class="token string-literal"><span class="token string">'6.0'</span></span>  s<span class="token punctuation">.</span>tvos<span class="token punctuation">.</span>deployment_target <span class="token operator">=</span> <span class="token string-literal"><span class="token string">'13.0'</span></span>  s<span class="token punctuation">.</span>source_files          <span class="token operator">=</span> <span class="token string-literal"><span class="token string">'Sources/InterfaceKit/*.swift'</span></span>  s<span class="token punctuation">.</span>exclude_files         <span class="token operator">=</span> <span class="token string-literal"><span class="token string">''</span></span>  s<span class="token punctuation">.</span>frameworks <span class="token operator">=</span> <span class="token string-literal"><span class="token string">'SwiftUI'</span></span>  s<span class="token punctuation">.</span>swift_version <span class="token operator">=</span> <span class="token string-literal"><span class="token string">'5.4'</span></span>  <span class="token comment"># UIKit</span>  s<span class="token punctuation">.</span>subspec <span class="token string-literal"><span class="token string">'UIKit'</span></span> <span class="token keyword">do</span> <span class="token operator">|</span>sp<span class="token operator">|</span>    sp<span class="token punctuation">.</span>source_files  <span class="token operator">=</span> <span class="token string-literal"><span class="token string">'Sources/InterfaceKit/UIInterface.swift'</span></span>  <span class="token keyword">end</span>  <span class="token comment"># AppKit</span>  s<span class="token punctuation">.</span>subspec <span class="token string-literal"><span class="token string">'AppKit'</span></span> <span class="token keyword">do</span> <span class="token operator">|</span>sp<span class="token operator">|</span>    sp<span class="token punctuation">.</span>source_files  <span class="token operator">=</span> <span class="token string-literal"><span class="token string">'Sources/InterfaceKit/NSInterface.swift'</span></span>  <span class="token keyword">end</span>  <span class="token comment"># WatchKit</span>  s<span class="token punctuation">.</span>subspec <span class="token string-literal"><span class="token string">'WatchKit'</span></span> <span class="token keyword">do</span> <span class="token operator">|</span>sp<span class="token operator">|</span>    sp<span class="token punctuation">.</span>source_files  <span class="token operator">=</span> <span class="token string-literal"><span class="token string">'Sources/InterfaceKit/WKInterface.swift'</span></span>  <span class="token keyword">end</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> cocoapods </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Carthage使用工作记录</title>
      <link href="/posts/16458.html"/>
      <url>/posts/16458.html</url>
      
        <content type="html"><![CDATA[<h1 id="Carthage使用工作记录"><a href="#Carthage使用工作记录" class="headerlink" title="Carthage使用工作记录"></a>Carthage使用工作记录</h1><p>========================<br>主要是三点</p><h2 id="1、写Cartfile"><a href="#1、写Cartfile" class="headerlink" title="1、写Cartfile"></a>1、写Cartfile</h2><pre class="line-numbers language-none"><code class="language-none">github "SnapKit/SnapKit"                    ~&gt; 5.0...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2、工程目录下命令行"><a href="#2、工程目录下命令行" class="headerlink" title="2、工程目录下命令行"></a>2、工程目录下命令行</h2><h3 id="生成framework"><a href="#生成framework" class="headerlink" title="生成framework"></a>生成framework</h3><pre class="line-numbers language-none"><code class="language-none">carthage update --platform iOS<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="生成xcframework"><a href="#生成xcframework" class="headerlink" title="生成xcframework"></a>生成xcframework</h3><pre class="line-numbers language-none"><code class="language-none">carthage update --platform iOS --use-xcframeworks<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="多平台"><a href="#多平台" class="headerlink" title="多平台"></a>多平台</h3><pre class="line-numbers language-none"><code class="language-none">carthage update --use-xcframeworks<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3、拖入工程"><a href="#3、拖入工程" class="headerlink" title="3、拖入工程"></a>3、拖入工程</h2><p>在工程目录下会生成一个Carthage文件，里面有个Build文件，其中可以找到生成的库</p><h2 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % <span class="token builtin class-name">cd</span> /Users/zhangsaidong/Desktop/testzhangsaidong@zhangsaidongs-MacBook-Pro <span class="token builtin class-name">test</span> % $ carthage update --platform iOSzsh: <span class="token builtin class-name">command</span> not found: $zhangsaidong@zhangsaidongs-MacBook-Pro <span class="token builtin class-name">test</span> % carthage update --platform iOS *** Fetching SnapKit*** Checking out SnapKit at <span class="token string">"5.0.1"</span>*** xcodebuild output can be found <span class="token keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.LDPWAL.log*** Building scheme <span class="token string">"SnapKit"</span> <span class="token keyword">in</span> SnapKit.xcworkspaceA shell task <span class="token punctuation">(</span>/usr/bin/xcrun lipo -create /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/SnapKit/5.0.1/Build/Intermediates.noindex/ArchiveIntermediates/SnapKit/IntermediateBuildFilesPath/UninstalledProducts/iphoneos/SnapKit.framework/SnapKit /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/SnapKit/5.0.1/Build/Products/Release-iphonesimulator/SnapKit.framework/SnapKit -output /Users/zhangsaidong/Desktop/test/Carthage/Build/iOS/SnapKit.framework/SnapKit<span class="token punctuation">)</span> failed with <span class="token builtin class-name">exit</span> code <span class="token number">1</span>:fatal error: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/lipo: /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/SnapKit/5.0.1/Build/Intermediates.noindex/ArchiveIntermediates/SnapKit/IntermediateBuildFilesPath/UninstalledProducts/iphoneos/SnapKit.framework/SnapKit and /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/SnapKit/5.0.1/Build/Products/Release-iphonesimulator/SnapKit.framework/SnapKit have the same architectures <span class="token punctuation">(</span>arm64<span class="token punctuation">)</span> and can't be <span class="token keyword">in</span> the same fat output <span class="token function">file</span>Building universal frameworks with common architectures is not possible. The device and simulator slices <span class="token keyword">for</span> <span class="token string">"SnapKit"</span> both build for: arm64Rebuild with --use-xcframeworks to create an xcframework bundle instead.zhangsaidong@zhangsaidongs-MacBook-Pro <span class="token builtin class-name">test</span> % carthage update --platform iOS --use-xcframeworks*** Fetching SnapKit*** Checking out SnapKit at <span class="token string">"5.0.1"</span>*** xcodebuild output can be found <span class="token keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.w2ACyI.log*** Building scheme <span class="token string">"SnapKit"</span> <span class="token keyword">in</span> SnapKit.xcworkspace<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">zhangsaidong@zhangsaidongs-MacBook-Pro <span class="token builtin class-name">test</span> % carthage update --use-xcframeworks*** Cloning RxSwift*** Checking out RxSwift at <span class="token string">"6.1.0"</span>*** xcodebuild output can be found <span class="token keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.ZgiMrd.log*** Downloading RxSwift.framework binary at <span class="token string">"Ethan.1"</span>*** Building scheme <span class="token string">"RxBlocking"</span> <span class="token keyword">in</span> Rx.xcworkspace*** Building scheme <span class="token string">"RxRelay"</span> <span class="token keyword">in</span> Rx.xcworkspace*** Building scheme <span class="token string">"RxSwift"</span> <span class="token keyword">in</span> Rx.xcworkspace*** Building scheme <span class="token string">"RxCocoa"</span> <span class="token keyword">in</span> Rx.xcworkspace*** Building scheme <span class="token string">"RxTest"</span> <span class="token keyword">in</span> Rx.xcworkspace<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Last login: Sat Apr <span class="token number">24</span> <span class="token number">16</span>:54:56 on ttys004c%                                                                              zhangsaidong@zhangsaidongs-MacBook-Pro ~ % <span class="token builtin class-name">cd</span> /Users/zhangsaidong/Desktop/project/CommonlyUsed/RunInto-Apple/RunInto/RunIntozhangsaidong@zhangsaidongs-MacBook-Pro RunInto % <span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % pod <span class="token function">install</span>Analyzing dependenciesDownloading dependenciesRemoving BagelRemoving ResponseDetectiveRemoving Reveal-SDKGenerating Pods projectIntegrating client projectPod installation complete<span class="token operator">!</span> There are <span class="token number">75</span> dependencies from the Podfile and <span class="token number">90</span> total pods installed.zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % pod <span class="token function">install</span>Analyzing dependenciesDownloading dependenciesGenerating Pods projectIntegrating client projectPod installation complete<span class="token operator">!</span> There are <span class="token number">75</span> dependencies from the Podfile and <span class="token number">90</span> total pods installed.zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % pod <span class="token function">install</span>Analyzing dependenciesDownloading dependenciesGenerating Pods projectIntegrating client projectPod installation complete<span class="token operator">!</span> There are <span class="token number">75</span> dependencies from the Podfile and <span class="token number">90</span> total pods installed.zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Fetching CocoaDebugA shell task <span class="token punctuation">(</span>/usr/bin/env <span class="token function">git</span> fetch --prune --quiet https://github.com/CocoaDebug/CocoaDebug.git refs/tags/*:refs/tags/* +refs/heads/*:refs/heads/* <span class="token punctuation">(</span>launched <span class="token keyword">in</span> /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/dependencies/CocoaDebug<span class="token punctuation">))</span> failed with <span class="token builtin class-name">exit</span> code <span class="token number">128</span>:error: RPC failed<span class="token punctuation">;</span> <span class="token function">curl</span> <span class="token number">56</span> LibreSSL SSL_read: SSL_ERROR_SYSCALL, errno <span class="token number">54</span>fatal: the remote end hung up unexpectedlyfatal: early EOFfatal: index-pack failedzhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Cloning CocoaDebugA shell task <span class="token punctuation">(</span>/usr/bin/env <span class="token function">git</span> clone --bare --quiet https://github.com/CocoaDebug/CocoaDebug.git /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/dependencies/CocoaDebug<span class="token punctuation">)</span> failed with <span class="token builtin class-name">exit</span> code <span class="token number">128</span>:error: RPC failed<span class="token punctuation">;</span> <span class="token function">curl</span> <span class="token number">56</span> LibreSSL SSL_read: SSL_ERROR_SYSCALL, errno <span class="token number">54</span>fatal: the remote end hung up unexpectedlyfatal: early EOFfatal: index-pack failedzhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Cloning TangramKit*** Checking out TangramKit at <span class="token string">"1.4.2"</span>*** xcodebuild output can be found <span class="token keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.p4tLc5.log*** Building scheme <span class="token string">"TangramKit"</span> <span class="token keyword">in</span> TangramKit.xcodeprojzhangsaidong@zhangsaidongs-MacBook-Pro RunInto % pod <span class="token function">install</span>Analyzing dependenciesDownloading dependenciesRemoving TangramKitGenerating Pods projectIntegrating client projectPod installation complete<span class="token operator">!</span> There are <span class="token number">73</span> dependencies from the Podfile and <span class="token number">88</span> total pods installed.zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % pod <span class="token function">install</span>Analyzing dependenciesDownloading dependenciesGenerating Pods projectIntegrating client projectPod installation complete<span class="token operator">!</span> There are <span class="token number">73</span> dependencies from the Podfile and <span class="token number">88</span> total pods installed.zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Cloning CocoaDebug^Czhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Fetching CocoaDebug^Czhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Cloning SQLite.swift*** Checking out SQLite.swift at <span class="token string">"70fb7af324cb3170d921f135f0c84cbdb6487cc2"</span>*** xcodebuild output can be found <span class="token keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.WCcwXI.log*** Building scheme <span class="token string">"SQLite tvOS"</span> <span class="token keyword">in</span> SQLite.xcodeproj*** Building scheme <span class="token string">"SQLite Mac"</span> <span class="token keyword">in</span> SQLite.xcodeproj*** Building scheme <span class="token string">"SQLite watchOS"</span> <span class="token keyword">in</span> SQLite.xcodeproj*** Building scheme <span class="token string">"SQLite iOS"</span> <span class="token keyword">in</span> SQLite.xcodeprojzhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Cloning CocoaDebug^Czhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Cloning Surge*** Checking out Surge at <span class="token string">"2.3.2"</span>*** xcodebuild output can be found <span class="token keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.0VCdna.log*** Building scheme <span class="token string">"Surge-tvOS"</span> <span class="token keyword">in</span> Surge.xcworkspace*** Building scheme <span class="token string">"Surge-watchOS"</span> <span class="token keyword">in</span> Surge.xcworkspace*** Building scheme <span class="token string">"Surge-iOS"</span> <span class="token keyword">in</span> Surge.xcworkspace*** Building scheme <span class="token string">"Surge-macOS"</span> <span class="token keyword">in</span> Surge.xcworkspacezhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Cloning InterfaceKit*** Checking out InterfaceKit at <span class="token string">"6c54d468ae1a5c45fc68d800c86e0edd728f913c"</span>*** xcodebuild output can be found <span class="token keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.FScun9.log*** Building scheme <span class="token string">"InterfaceKit"</span> <span class="token keyword">in</span> InterfaceKit.xcworkspaceBuild Failed    Task failed with <span class="token builtin class-name">exit</span> code <span class="token number">1</span>:    /usr/bin/xcrun dsymutil /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/6c54d468ae1a5c45fc68d800c86e0edd728f913c/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework/InterfaceKit -o /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/6c54d468ae1a5c45fc68d800c86e0edd728f913c/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework.dSYMThis usually indicates that project itself failed to compile. Please check the xcodebuild log <span class="token keyword">for</span> <span class="token function">more</span> details: /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.FScun9.logzhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Fetching InterfaceKit*** Checking out InterfaceKit at <span class="token string">"6c54d468ae1a5c45fc68d800c86e0edd728f913c"</span>*** xcodebuild output can be found <span class="token keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.QqfIWe.log*** Building scheme <span class="token string">"InterfaceKit"</span> <span class="token keyword">in</span> InterfaceKit.xcworkspaceBuild Failed    Task failed with <span class="token builtin class-name">exit</span> code <span class="token number">1</span>:    /usr/bin/xcrun dsymutil /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/6c54d468ae1a5c45fc68d800c86e0edd728f913c/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework/InterfaceKit -o /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/6c54d468ae1a5c45fc68d800c86e0edd728f913c/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework.dSYMThis usually indicates that project itself failed to compile. Please check the xcodebuild log <span class="token keyword">for</span> <span class="token function">more</span> details: /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.QqfIWe.logzhangsaidong@zhangsaidongs-MacBook-Pro RunInto % <span class="token function">open</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Fetching InterfaceKit*** Checking out InterfaceKit at <span class="token string">"4c1d617d73bd40393e71741b39c9e2ead3c7572d"</span>*** xcodebuild output can be found <span class="token keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.dM9GjZ.log*** Building scheme <span class="token string">"InterfaceKit"</span> <span class="token keyword">in</span> InterfaceKit.xcworkspaceBuild Failed    Task failed with <span class="token builtin class-name">exit</span> code <span class="token number">1</span>:    /usr/bin/xcrun dsymutil /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework/InterfaceKit -o /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework.dSYMThis usually indicates that project itself failed to compile. Please check the xcodebuild log <span class="token keyword">for</span> <span class="token function">more</span> details: /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.dM9GjZ.logzhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks*** Fetching InterfaceKit*** Checking out InterfaceKit at <span class="token string">"4c1d617d73bd40393e71741b39c9e2ead3c7572d"</span>*** xcodebuild output can be found <span class="token keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.XFquCD.log*** Building scheme <span class="token string">"InterfaceKit"</span> <span class="token keyword">in</span> InterfaceKit.xcworkspaceBuild Failed    Task failed with <span class="token builtin class-name">exit</span> code <span class="token number">1</span>:    /usr/bin/xcrun dsymutil /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework/InterfaceKit -o /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework.dSYMThis usually indicates that project itself failed to compile. Please check the xcodebuild log <span class="token keyword">for</span> <span class="token function">more</span> details: /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.XFquCD.logzhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --no-use-binaries*** Fetching InterfaceKit^Czhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --no-use-binaries*** Fetching InterfaceKit*** Checking out InterfaceKit at <span class="token string">"4c1d617d73bd40393e71741b39c9e2ead3c7572d"</span>*** xcodebuild output can be found <span class="token keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.KPX9mF.log*** Building scheme <span class="token string">"InterfaceKit"</span> <span class="token keyword">in</span> InterfaceKit.xcworkspaceA shell task <span class="token punctuation">(</span>/usr/bin/xcrun lipo -create /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/IntermediateBuildFilesPath/UninstalledProducts/iphoneos/InterfaceKit.framework/InterfaceKit /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Products/Release-iphonesimulator/InterfaceKit.framework/InterfaceKit -output /Users/zhangsaidong/Desktop/project/CommonlyUsed/RunInto-Apple/RunInto/Carthage/Build/iOS/InterfaceKit.framework/InterfaceKit<span class="token punctuation">)</span> failed with <span class="token builtin class-name">exit</span> code <span class="token number">1</span>:fatal error: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/lipo: /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/IntermediateBuildFilesPath/UninstalledProducts/iphoneos/InterfaceKit.framework/InterfaceKit and /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Products/Release-iphonesimulator/InterfaceKit.framework/InterfaceKit have the same architectures <span class="token punctuation">(</span>arm64<span class="token punctuation">)</span> and can't be <span class="token keyword">in</span> the same fat output <span class="token function">file</span>Building universal frameworks with common architectures is not possible. The device and simulator slices <span class="token keyword">for</span> <span class="token string">"InterfaceKit"</span> both build for: arm64Rebuild with --use-xcframeworks to create an xcframework bundle instead.zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --no-use-binaries --use-xcframeworks*** Fetching InterfaceKit*** Checking out InterfaceKit at <span class="token string">"4c1d617d73bd40393e71741b39c9e2ead3c7572d"</span>*** xcodebuild output can be found <span class="token keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.SrsXrV.log*** Building scheme <span class="token string">"InterfaceKit"</span> <span class="token keyword">in</span> InterfaceKit.xcworkspaceBuild Failed    Task failed with <span class="token builtin class-name">exit</span> code <span class="token number">1</span>:    /usr/bin/xcrun dsymutil /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework/InterfaceKit -o /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/4c1d617d73bd40393e71741b39c9e2ead3c7572d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework.dSYMThis usually indicates that project itself failed to compile. Please check the xcodebuild log <span class="token keyword">for</span> <span class="token function">more</span> details: /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.SrsXrV.logzhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --no-use-binaries --use-xcframeworks*** Fetching InterfaceKit*** Checking out InterfaceKit at <span class="token string">"6fbe972cef5ec57adf09e90fb18abf178279f05d"</span>*** xcodebuild output can be found <span class="token keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.ztpFGs.log*** Building scheme <span class="token string">"InterfaceKit"</span> <span class="token keyword">in</span> InterfaceKit.xcworkspaceBuild Failed    Task failed with <span class="token builtin class-name">exit</span> code <span class="token number">1</span>:    /usr/bin/xcrun dsymutil /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/6fbe972cef5ec57adf09e90fb18abf178279f05d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework/InterfaceKit -o /Users/zhangsaidong/Library/Caches/org.carthage.CarthageKit/DerivedData/12.4_12D4e/InterfaceKit/6fbe972cef5ec57adf09e90fb18abf178279f05d/Build/Intermediates.noindex/ArchiveIntermediates/InterfaceKit/BuildProductsPath/Release-iphoneos/InterfaceKit.framework.dSYMThis usually indicates that project itself failed to compile. Please check the xcodebuild log <span class="token keyword">for</span> <span class="token function">more</span> details: /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.ztpFGs.logzhangsaidong@zhangsaidongs-MacBook-Pro RunInto % carthage update --use-xcframeworks                  *** Fetching InterfaceKit*** Checking out InterfaceKit at <span class="token string">"55b358119d90ce36475caaefb052d0a83dc7e404"</span>*** xcodebuild output can be found <span class="token keyword">in</span> /var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/carthage-xcodebuild.5gb46Q.log*** Building scheme <span class="token string">"InterfaceKit"</span> <span class="token keyword">in</span> InterfaceKit.xcworkspacezhangsaidong@zhangsaidongs-MacBook-Pro RunInto % <span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto-Apple % <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>g%                                                                                                                                            zhangsaidong@zhangsaidongs-MacBook-Pro RunInto-Apple % <span class="token function">git</span> commit -m <span class="token string">"fix"</span><span class="token punctuation">[</span>master 64157fda<span class="token punctuation">]</span> fix <span class="token number">9</span> files changed, <span class="token number">430</span> insertions<span class="token punctuation">(</span>+<span class="token punctuation">)</span>, <span class="token number">419</span> deletions<span class="token punctuation">(</span>-<span class="token punctuation">)</span> rewrite RunInto/RunInto/SwiftUI/Home/child/Setting/interface/InterfaceView.swift <span class="token punctuation">(</span><span class="token number">98</span>%<span class="token punctuation">)</span> rewrite RunInto/RunInto/SwiftUI/Home/child/Setting/interface/WCInterfaceView.swift <span class="token punctuation">(</span><span class="token number">98</span>%<span class="token punctuation">)</span>zhangsaidong@zhangsaidongs-MacBook-Pro RunInto-Apple % <span class="token function">git</span> pushEnumerating objects: <span class="token number">53</span>, done.Counting objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">53</span>/53<span class="token punctuation">)</span>, done.Delta compression using up to <span class="token number">16</span> threadsCompressing objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">27</span>/27<span class="token punctuation">)</span>, done.Writing objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">28</span>/28<span class="token punctuation">)</span>, <span class="token number">364.31</span> KiB <span class="token operator">|</span> <span class="token number">3.72</span> MiB/s, done.Total <span class="token number">28</span> <span class="token punctuation">(</span>delta <span class="token number">17</span><span class="token punctuation">)</span>, reused <span class="token number">0</span> <span class="token punctuation">(</span>delta <span class="token number">0</span><span class="token punctuation">)</span>remote: Resolving deltas: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">17</span>/17<span class="token punctuation">)</span>, completed with <span class="token number">16</span> <span class="token builtin class-name">local</span> objects.To https://github.com/adong666666/RunInto-Apple.git   5dc30f04<span class="token punctuation">..</span>64157fda  master -<span class="token operator">&gt;</span> masterzhangsaidong@zhangsaidongs-MacBook-Pro RunInto-Apple % <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> carthage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Carthage使用摘录</title>
      <link href="/posts/8147.html"/>
      <url>/posts/8147.html</url>
      
        <content type="html"><![CDATA[<h1 id="Carthage使用摘录"><a href="#Carthage使用摘录" class="headerlink" title="Carthage使用摘录"></a>Carthage使用摘录</h1><p>========================<br>通常来说，carthage库编译快（因为不用再编译源码），但是编译后的App通常更占内存，Swift Package Manager也是，它们夹带一些其他文件，所以建议发布前，尽量用Pod，也就是开发用Carthage、Swift Package Manager,发布能用cocoapods就用cocoapods。<br>看图秒懂系列<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Carthage%E4%BD%BF%E7%94%A8%E6%91%98%E5%BD%95/1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> carthage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Carthage库制作摘录</title>
      <link href="/posts/59855.html"/>
      <url>/posts/59855.html</url>
      
        <content type="html"><![CDATA[<h1 id="Carthage库制作摘录"><a href="#Carthage库制作摘录" class="headerlink" title="Carthage库制作摘录"></a>Carthage库制作摘录</h1><p>========================<br>看图秒懂系列<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Carthage%E5%BA%93%E5%88%B6%E4%BD%9C%E6%91%98%E5%BD%95/1.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Carthage%E5%BA%93%E5%88%B6%E4%BD%9C%E6%91%98%E5%BD%95/2.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> carthage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>制作多平台的framework</title>
      <link href="/posts/65269.html"/>
      <url>/posts/65269.html</url>
      
        <content type="html"><![CDATA[<h1 id="制作多平台的framework"><a href="#制作多平台的framework" class="headerlink" title="制作多平台的framework"></a>制作多平台的framework</h1><p>========================<br>看图秒懂系列，Base SDK务必要设置成No SDK,选择other选项，然后什么都不填。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%88%B6%E4%BD%9C%E5%A4%9A%E5%B9%B3%E5%8F%B0%E7%9A%84framework/1.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%88%B6%E4%BD%9C%E5%A4%9A%E5%B9%B3%E5%8F%B0%E7%9A%84framework/2.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%88%B6%E4%BD%9C%E5%A4%9A%E5%B9%B3%E5%8F%B0%E7%9A%84framework/3.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%88%B6%E4%BD%9C%E5%A4%9A%E5%B9%B3%E5%8F%B0%E7%9A%84framework/4.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%88%B6%E4%BD%9C%E5%A4%9A%E5%B9%B3%E5%8F%B0%E7%9A%84framework/5.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>去除 GLKit API 弃用警告</title>
      <link href="/posts/14629.html"/>
      <url>/posts/14629.html</url>
      
        <content type="html"><![CDATA[<h1 id="去除-GLKit-API-弃用警告"><a href="#去除-GLKit-API-弃用警告" class="headerlink" title="去除 GLKit API 弃用警告"></a>去除 GLKit API 弃用警告</h1><p>========================</p><pre class="line-numbers language-none"><code class="language-none">'GLKViewController' was deprecated in iOS 12.0: OpenGLES API deprecated. (Define GLES_SILENCE_DEPRECATION to silence these warnings)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>GLKit </code>相关的 API 从 iOS12 之后就已经标记为<code>弃用</code>了。<br>为了避免 Xcode 满屏的黄色警告⚠️，我们在 <code>Project--Build Settings</code> 里找到 <code>Preprocessor Macros</code> ，然后配置<code>GLES_SILENCE_DEPRECATION=1</code>即可把 OpenGLES 相关的弃用 API 警告去掉。这样 Xcode 的编辑界面就清爽很多了。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%8E%BB%E9%99%A4GLKit_API%E5%BC%83%E7%94%A8%E8%AD%A6%E5%91%8A/1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用R.swift检查各种string文件的问题</title>
      <link href="/posts/39320.html"/>
      <url>/posts/39320.html</url>
      
        <content type="html"><![CDATA[<h1 id="使用R-swift检查各种string文件的问题"><a href="#使用R-swift检查各种string文件的问题" class="headerlink" title="使用R.swift检查各种string文件的问题"></a>使用R.swift检查各种string文件的问题</h1><p>========================<br> [R.swift] Skipping 2 strings in ‘Localizable’ (en) because symbol ‘bottle’ would be generated for all of these keys: bottle, bottle<br>这个错误主要是因为你在.strings文件中有两个相同的键值对，或者两个相同的键。</p><pre class="line-numbers language-none"><code class="language-none">"bottle " = "Langyao Straight-mouth Bottle";"bottle " = "Langyao Straight-mouth Bottle";<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">"bottle " = "Bottle";"bottle " = "Langyao Straight-mouth Bottle";<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p> 这么说起来，可以用R.swift检查各种string文件的问题，缺失，重复等问题它都会报警告。</p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS日志框架CocoaLumberjack</title>
      <link href="/posts/9465.html"/>
      <url>/posts/9465.html</url>
      
        <content type="html"><![CDATA[<h1 id="iOS日志框架CocoaLumberjack"><a href="#iOS日志框架CocoaLumberjack" class="headerlink" title="iOS日志框架CocoaLumberjack"></a>iOS日志框架CocoaLumberjack</h1><p>========================<br>我使用了如下代码进行配置，只需在AppDelegate或SceneDelegate调用configDDLog即可（在其他某些文件配置也是可以的）</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token comment">//</span><span class="token comment">//  configDDLog.swift</span><span class="token comment">//  RunInto</span><span class="token comment">//</span><span class="token comment">//  Created by 张赛东（手机：15674119605） on 2021/4/10.</span><span class="token comment">//  Copyright © 2021 adong666666. All rights reserved.</span><span class="token comment">//</span><span class="token keyword">import</span> <span class="token class-name">Foundation</span><span class="token keyword">import</span> <span class="token class-name">CocoaLumberjack</span><span class="token comment">/** 配置DDLog相关参数 */</span><span class="token keyword">func</span> <span class="token function-definition function">configDDLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//    //让日志只在debug时输出</span><span class="token comment">//    #if DEBUG</span><span class="token comment">//        defaultDebugLevel = .Verbose</span><span class="token comment">//    #else</span><span class="token comment">//    dynamicLogLevel = .off</span><span class="token comment">//    #endif</span>    <span class="token comment">//添加发送日志语句到苹果的日志系统</span>    <span class="token class-name">DDLog</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">DDOSLogger</span><span class="token punctuation">.</span>sharedInstance<span class="token punctuation">)</span>    <span class="token comment">//添加发送日志语句到Xcode控制台</span>    <span class="token comment">//DDLog.add(DDTTYLogger.sharedInstance!)</span>        <span class="token comment">//MARK: - 日志将会被保存到沙盒/Library/Caches/Logs，这意味着可以上传至服务器</span>    <span class="token keyword">let</span> fileLogger<span class="token punctuation">:</span> <span class="token class-name">DDFileLogger</span> <span class="token operator">=</span> <span class="token class-name">DDFileLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// File Logger</span>    fileLogger<span class="token punctuation">.</span>rollingFrequency <span class="token operator">=</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token comment">// 24 hours</span>    fileLogger<span class="token punctuation">.</span>logFileManager<span class="token punctuation">.</span>maximumNumberOfLogFiles <span class="token operator">=</span> <span class="token number">7</span>    <span class="token class-name">DDLog</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>fileLogger<span class="token punctuation">)</span>    <span class="token function">log</span><span class="token punctuation">(</span>fileLogger<span class="token punctuation">.</span>currentLogFileInfo<span class="token operator">?</span><span class="token punctuation">.</span>filePath<span class="token punctuation">)</span>    <span class="token comment">//    //允许控制台带颜色</span><span class="token comment">//    DDTTYLogger.sharedInstance?.colorsEnabled = true</span><span class="token comment">//    //设置Info下为蓝色</span><span class="token comment">//    DDTTYLogger.sharedInstance?.setForegroundColor(UIColor.blue, backgroundColor: UIColor.white, for: .info)</span><span class="token punctuation">}</span><span class="token comment">/** 得到输出的字符串的格式 - parameter message:  日志消息的主题 - parameter file:     日志消息所在的文件，方便调试定位用 - parameter function: 日志消息所在的方法，方便调试定位用 - parameter line:     日志消息所在的方法中的行数，方便调试定位用 - returns: 返回输出的日志字符串 */</span><span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">getMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> file<span class="token punctuation">:</span> <span class="token class-name">StaticString</span><span class="token punctuation">,</span> function<span class="token punctuation">:</span> <span class="token class-name">StaticString</span><span class="token punctuation">,</span> line<span class="token punctuation">:</span> <span class="token class-name">UInt</span> <span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>    <span class="token comment">//初始化需要返回的字符串</span>    <span class="token keyword">var</span> returnMessage<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>    <span class="token comment">//通过file获取文件的名称</span>    <span class="token keyword">if</span> <span class="token keyword">let</span> className <span class="token operator">=</span> file<span class="token punctuation">.</span>description<span class="token punctuation">.</span><span class="token function">components</span><span class="token punctuation">(</span>separatedBy<span class="token punctuation">:</span> <span class="token class-name">CharacterSet</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>charactersIn<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"/"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>last <span class="token punctuation">{</span>        <span class="token comment">//拼接字符串</span>        returnMessage <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"\n"</span></span> <span class="token operator">+</span>                  <span class="token string-literal"><span class="token string">"className:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">className</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">\n"</span></span> <span class="token operator">+</span>                  <span class="token string-literal"><span class="token string">" function:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">function</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">\n"</span></span> <span class="token operator">+</span>                  <span class="token string-literal"><span class="token string">"      ine:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">line</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">\n"</span></span> <span class="token operator">+</span>                  <span class="token string-literal"><span class="token string">"  message:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">message</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token comment">//拼接字符串</span>        returnMessage <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"\n"</span></span> <span class="token operator">+</span>            <span class="token string-literal"><span class="token string">" function:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">function</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">\n"</span></span> <span class="token operator">+</span>            <span class="token string-literal"><span class="token string">"      ine:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">line</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">\n"</span></span> <span class="token operator">+</span>            <span class="token string-literal"><span class="token string">"  message:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">message</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> returnMessage<span class="token punctuation">}</span><span class="token comment">/**   输出Info等级的日志消息 */</span><span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">logInfo</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> message<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> file<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#file</span><span class="token punctuation">,</span> function<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#function</span><span class="token punctuation">,</span> line<span class="token punctuation">:</span> <span class="token class-name">UInt</span> <span class="token operator">=</span> <span class="token literal constant">#line</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token class-name">DDLogInfo</span><span class="token punctuation">(</span><span class="token function">getMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">:</span> message<span class="token punctuation">,</span> file<span class="token punctuation">:</span> file<span class="token punctuation">,</span> function<span class="token punctuation">:</span> function<span class="token punctuation">,</span> line<span class="token punctuation">:</span> line<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment">/** 输出Error等级的日志消息 */</span><span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">logError</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> message<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> file<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#file</span><span class="token punctuation">,</span> function<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#function</span><span class="token punctuation">,</span> line<span class="token punctuation">:</span> <span class="token class-name">UInt</span> <span class="token operator">=</span> <span class="token literal constant">#line</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token class-name">DDLogError</span><span class="token punctuation">(</span><span class="token function">getMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">:</span> message<span class="token punctuation">,</span> file<span class="token punctuation">:</span> file<span class="token punctuation">,</span> function<span class="token punctuation">:</span> function<span class="token punctuation">,</span> line<span class="token punctuation">:</span> line<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment">/** 输出Debug等级的日志消息 */</span><span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">logDebug</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> message<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> file<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#file</span><span class="token punctuation">,</span> function<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#function</span><span class="token punctuation">,</span> line<span class="token punctuation">:</span> <span class="token class-name">UInt</span> <span class="token operator">=</span> <span class="token literal constant">#line</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token class-name">DDLogDebug</span><span class="token punctuation">(</span><span class="token function">getMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">:</span> message<span class="token punctuation">,</span> file<span class="token punctuation">:</span> file<span class="token punctuation">,</span> function<span class="token punctuation">:</span> function<span class="token punctuation">,</span> line<span class="token punctuation">:</span> line<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment">/** 输出Warn等级的日志消息 */</span><span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">logWarn</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> message<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> file<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#file</span><span class="token punctuation">,</span> function<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#function</span><span class="token punctuation">,</span> line<span class="token punctuation">:</span> <span class="token class-name">UInt</span> <span class="token operator">=</span> <span class="token literal constant">#line</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token class-name">DDLogWarn</span><span class="token punctuation">(</span><span class="token function">getMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">:</span> message<span class="token punctuation">,</span> file<span class="token punctuation">:</span> file<span class="token punctuation">,</span> function<span class="token punctuation">:</span> function<span class="token punctuation">,</span> line<span class="token punctuation">:</span> line<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">logVerbose</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> message<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> file<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#file</span><span class="token punctuation">,</span> function<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#function</span><span class="token punctuation">,</span> line<span class="token punctuation">:</span> <span class="token class-name">UInt</span> <span class="token operator">=</span> <span class="token literal constant">#line</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token class-name">DDLogVerbose</span><span class="token punctuation">(</span><span class="token function">getMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">:</span> message<span class="token punctuation">,</span> file<span class="token punctuation">:</span> file<span class="token punctuation">,</span> function<span class="token punctuation">:</span> function<span class="token punctuation">,</span> line<span class="token punctuation">:</span> line<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此外，我还引用了官方demo的一些代码</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token comment">// Software License Agreement (BSD License)</span><span class="token comment">//</span><span class="token comment">// Copyright (c) 2010-2021, Deusty, LLC</span><span class="token comment">// All rights reserved.</span><span class="token comment">//</span><span class="token comment">// Redistribution and use of this software in source and binary forms,</span><span class="token comment">// with or without modification, are permitted provided that the following conditions are met:</span><span class="token comment">//</span><span class="token comment">// * Redistributions of source code must retain the above copyright notice,</span><span class="token comment">//   this list of conditions and the following disclaimer.</span><span class="token comment">//</span><span class="token comment">// * Neither the name of Deusty nor the names of its contributors may be used</span><span class="token comment">//   to endorse or promote products derived from this software without specific</span><span class="token comment">//   prior written permission of Deusty, LLC.</span><span class="token directive property"><span class="token directive-name">#if</span> SWIFT_PACKAGE</span><span class="token keyword">import</span> <span class="token class-name">CocoaLumberjack</span><span class="token keyword">import</span> <span class="token class-name">CocoaLumberjackSwiftSupport</span><span class="token directive property"><span class="token directive-name">#endif</span></span><span class="token comment">/** * Replacement for Swift's `assert` function that will output a log message even when assertions * are disabled. * * - Parameters: *   - condition: The condition to test. Unlike `Swift.assert`, `condition` is always evaluated, *     even when assertions are disabled. *   - message: A string to log (using `DDLogError`) if `condition` evaluates to `false`. *     The default is an empty string. */</span><span class="token attribute atrule">@inlinable</span><span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">DDAssert</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> condition<span class="token punctuation">:</span> <span class="token attribute atrule">@autoclosure</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Bool</span><span class="token punctuation">,</span> <span class="token omit keyword">_</span> message<span class="token punctuation">:</span> <span class="token attribute atrule">@autoclosure</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span><span class="token punctuation">,</span> level<span class="token punctuation">:</span> <span class="token class-name">DDLogLevel</span> <span class="token operator">=</span> <span class="token punctuation">.</span>all<span class="token punctuation">,</span> context<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> file<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#file</span><span class="token punctuation">,</span> function<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#function</span><span class="token punctuation">,</span> line<span class="token punctuation">:</span> <span class="token class-name">UInt</span> <span class="token operator">=</span> <span class="token literal constant">#line</span><span class="token punctuation">,</span> tag<span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> asynchronous <span class="token keyword">async</span><span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> ddlog<span class="token punctuation">:</span> <span class="token class-name">DDLog</span> <span class="token operator">=</span> <span class="token class-name">DDLog</span><span class="token punctuation">.</span>sharedInstance<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token operator">!</span><span class="token function">condition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">DDLogError</span><span class="token punctuation">(</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> level<span class="token punctuation">:</span> level<span class="token punctuation">,</span> context<span class="token punctuation">:</span> context<span class="token punctuation">,</span> file<span class="token punctuation">:</span> file<span class="token punctuation">,</span> function<span class="token punctuation">:</span> function<span class="token punctuation">,</span> line<span class="token punctuation">:</span> line<span class="token punctuation">,</span> tag<span class="token punctuation">:</span> tag<span class="token punctuation">,</span> asynchronous<span class="token punctuation">:</span> <span class="token keyword">async</span><span class="token punctuation">,</span> ddlog<span class="token punctuation">:</span> ddlog<span class="token punctuation">)</span>        <span class="token class-name">Swift</span><span class="token punctuation">.</span><span class="token function">assertionFailure</span><span class="token punctuation">(</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> file<span class="token punctuation">:</span> file<span class="token punctuation">,</span> line<span class="token punctuation">:</span> line<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">/** * Replacement for Swift's `assertionFailure` function that will output a log message even * when assertions are disabled. * * - Parameters: *   - message: A string to log (using `DDLogError`). The default is an empty string. */</span><span class="token attribute atrule">@inlinable</span><span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">DDAssertionFailure</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> message<span class="token punctuation">:</span> <span class="token attribute atrule">@autoclosure</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span><span class="token punctuation">,</span> level<span class="token punctuation">:</span> <span class="token class-name">DDLogLevel</span> <span class="token operator">=</span> <span class="token punctuation">.</span>all<span class="token punctuation">,</span> context<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> file<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#file</span><span class="token punctuation">,</span> function<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#function</span><span class="token punctuation">,</span> line<span class="token punctuation">:</span> <span class="token class-name">UInt</span> <span class="token operator">=</span> <span class="token literal constant">#line</span><span class="token punctuation">,</span> tag<span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> asynchronous <span class="token keyword">async</span><span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> ddlog<span class="token punctuation">:</span> <span class="token class-name">DDLog</span> <span class="token operator">=</span> <span class="token class-name">DDLog</span><span class="token punctuation">.</span>sharedInstance<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token class-name">DDLogError</span><span class="token punctuation">(</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> level<span class="token punctuation">:</span> level<span class="token punctuation">,</span> context<span class="token punctuation">:</span> context<span class="token punctuation">,</span> file<span class="token punctuation">:</span> file<span class="token punctuation">,</span> function<span class="token punctuation">:</span> function<span class="token punctuation">,</span> line<span class="token punctuation">:</span> line<span class="token punctuation">,</span> tag<span class="token punctuation">:</span> tag<span class="token punctuation">,</span> asynchronous<span class="token punctuation">:</span> <span class="token keyword">async</span><span class="token punctuation">,</span> ddlog<span class="token punctuation">:</span> ddlog<span class="token punctuation">)</span>    <span class="token class-name">Swift</span><span class="token punctuation">.</span><span class="token function">assertionFailure</span><span class="token punctuation">(</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> file<span class="token punctuation">:</span> file<span class="token punctuation">,</span> line<span class="token punctuation">:</span> line<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token comment">// Software License Agreement (BSD License)</span><span class="token comment">//</span><span class="token comment">// Copyright (c) 2010-2021, Deusty, LLC</span><span class="token comment">// All rights reserved.</span><span class="token comment">//</span><span class="token comment">// Redistribution and use of this software in source and binary forms,</span><span class="token comment">// with or without modification, are permitted provided that the following conditions are met:</span><span class="token comment">//</span><span class="token comment">// * Redistributions of source code must retain the above copyright notice,</span><span class="token comment">//   this list of conditions and the following disclaimer.</span><span class="token comment">//</span><span class="token comment">// * Neither the name of Deusty nor the names of its contributors may be used</span><span class="token comment">//   to endorse or promote products derived from this software without specific</span><span class="token comment">//   prior written permission of Deusty, LLC.</span><span class="token attribute atrule">@_exported</span> <span class="token keyword">import</span> <span class="token class-name">CocoaLumberjack</span><span class="token directive property"><span class="token directive-name">#if</span> SWIFT_PACKAGE</span><span class="token keyword">import</span> <span class="token class-name">CocoaLumberjackSwiftSupport</span><span class="token directive property"><span class="token directive-name">#endif</span></span><span class="token keyword">extension</span> <span class="token class-name">DDLogFlag</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> logLevel<span class="token punctuation">:</span> <span class="token class-name">DDLogLevel</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">DDLogFlag</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">DDLogFlag</span><span class="token punctuation">(</span>rawValue<span class="token punctuation">:</span> logLevel<span class="token punctuation">.</span>rawValue<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> logLevel<span class="token punctuation">:</span> <span class="token class-name">DDLogLevel</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">self</span> <span class="token operator">=</span> <span class="token class-name">DDLogFlag</span><span class="token punctuation">(</span>rawValue<span class="token punctuation">:</span> logLevel<span class="token punctuation">.</span>rawValue<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment">/// Returns the log level, or the lowest equivalent.</span>    <span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">toLogLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">DDLogLevel</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token keyword">let</span> ourValid <span class="token operator">=</span> <span class="token class-name">DDLogLevel</span><span class="token punctuation">(</span>rawValue<span class="token punctuation">:</span> rawValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> ourValid        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token function">contains</span><span class="token punctuation">(</span><span class="token punctuation">.</span>verbose<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token punctuation">.</span>verbose            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token function">contains</span><span class="token punctuation">(</span><span class="token punctuation">.</span>debug<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token punctuation">.</span>debug            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token function">contains</span><span class="token punctuation">(</span><span class="token punctuation">.</span>info<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token punctuation">.</span>info            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token function">contains</span><span class="token punctuation">(</span><span class="token punctuation">.</span>warning<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token punctuation">.</span>warning            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token function">contains</span><span class="token punctuation">(</span><span class="token punctuation">.</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token punctuation">.</span>error            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token punctuation">.</span>off            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">/// The log level that can dynamically limit log messages (vs. the static DDDefaultLogLevel). This log level will only be checked, if the message passes the `DDDefaultLogLevel`.</span><span class="token keyword">public</span> <span class="token keyword">var</span> dynamicLogLevel <span class="token operator">=</span> <span class="token class-name">DDLogLevel</span><span class="token punctuation">.</span>all<span class="token comment">/// Resets the `dynamicLogLevel` to `.all`.</span><span class="token comment">/// - SeeAlso: `dynamicLogLevel`</span><span class="token attribute atrule">@inlinable</span><span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">resetDynamicLogLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    dynamicLogLevel <span class="token operator">=</span> <span class="token punctuation">.</span>all<span class="token punctuation">}</span><span class="token attribute atrule">@available</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">,</span> deprecated<span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Please use dynamicLogLevel"</span></span><span class="token punctuation">,</span> renamed<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"dynamicLogLevel"</span></span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">var</span> defaultDebugLevel<span class="token punctuation">:</span> <span class="token class-name">DDLogLevel</span> <span class="token punctuation">{</span>    <span class="token keyword">get</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> dynamicLogLevel    <span class="token punctuation">}</span>    <span class="token keyword">set</span> <span class="token punctuation">{</span>        dynamicLogLevel <span class="token operator">=</span> newValue    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token attribute atrule">@available</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">,</span> deprecated<span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Please use resetDynamicLogLevel"</span></span><span class="token punctuation">,</span> renamed<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"resetDynamicLogLevel"</span></span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">resetDefaultDebugLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">resetDynamicLogLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment">/// If `true`, all logs (except errors) are logged asynchronously by default.</span><span class="token keyword">public</span> <span class="token keyword">var</span> asyncLoggingEnabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token attribute atrule">@inlinable</span><span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">_DDLogMessage</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> message<span class="token punctuation">:</span> <span class="token attribute atrule">@autoclosure</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">Any</span><span class="token punctuation">,</span>                          level<span class="token punctuation">:</span> <span class="token class-name">DDLogLevel</span><span class="token punctuation">,</span>                          flag<span class="token punctuation">:</span> <span class="token class-name">DDLogFlag</span><span class="token punctuation">,</span>                          context<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">,</span>                          file<span class="token punctuation">:</span> <span class="token class-name">StaticString</span><span class="token punctuation">,</span>                          function<span class="token punctuation">:</span> <span class="token class-name">StaticString</span><span class="token punctuation">,</span>                          line<span class="token punctuation">:</span> <span class="token class-name">UInt</span><span class="token punctuation">,</span>                          tag<span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token operator">?</span><span class="token punctuation">,</span>                          asynchronous<span class="token punctuation">:</span> <span class="token class-name">Bool</span><span class="token punctuation">,</span>                          ddlog<span class="token punctuation">:</span> <span class="token class-name">DDLog</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// The `dynamicLogLevel` will always be checked here (instead of being passed in).</span>    <span class="token comment">// We cannot "mix" it with the `DDDefaultLogLevel`, because otherwise the compiler won't strip strings that are not logged.</span>    <span class="token keyword">if</span> level<span class="token punctuation">.</span>rawValue <span class="token operator">&amp;</span> flag<span class="token punctuation">.</span>rawValue <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> dynamicLogLevel<span class="token punctuation">.</span>rawValue <span class="token operator">&amp;</span> flag<span class="token punctuation">.</span>rawValue <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">{</span>        <span class="token comment">// Tell the DDLogMessage constructor to copy the C strings that get passed to it.</span>        <span class="token keyword">let</span> logMessage <span class="token operator">=</span> <span class="token class-name">DDLogMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">(</span>describing<span class="token punctuation">:</span> <span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                      level<span class="token punctuation">:</span> level<span class="token punctuation">,</span>                                      flag<span class="token punctuation">:</span> flag<span class="token punctuation">,</span>                                      context<span class="token punctuation">:</span> context<span class="token punctuation">,</span>                                      file<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">(</span>describing<span class="token punctuation">:</span> file<span class="token punctuation">)</span><span class="token punctuation">,</span>                                      function<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">(</span>describing<span class="token punctuation">:</span> function<span class="token punctuation">)</span><span class="token punctuation">,</span>                                      line<span class="token punctuation">:</span> line<span class="token punctuation">,</span>                                      tag<span class="token punctuation">:</span> tag<span class="token punctuation">,</span>                                      options<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>copyFile<span class="token punctuation">,</span> <span class="token punctuation">.</span>copyFunction<span class="token punctuation">]</span><span class="token punctuation">,</span>                                      timestamp<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">)</span>        ddlog<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>asynchronous<span class="token punctuation">:</span> asynchronous<span class="token punctuation">,</span> message<span class="token punctuation">:</span> logMessage<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token attribute atrule">@inlinable</span><span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">DDLogDebug</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> message<span class="token punctuation">:</span> <span class="token attribute atrule">@autoclosure</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">Any</span><span class="token punctuation">,</span>                       level<span class="token punctuation">:</span> <span class="token class-name">DDLogLevel</span> <span class="token operator">=</span> <span class="token punctuation">.</span>debug<span class="token punctuation">,</span>                       context<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>                       file<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#file</span><span class="token punctuation">,</span>                       function<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#function</span><span class="token punctuation">,</span>                       line<span class="token punctuation">:</span> <span class="token class-name">UInt</span> <span class="token operator">=</span> <span class="token literal constant">#line</span><span class="token punctuation">,</span>                       tag<span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span>                       asynchronous <span class="token keyword">async</span><span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> asyncLoggingEnabled<span class="token punctuation">,</span>                       ddlog<span class="token punctuation">:</span> <span class="token class-name">DDLog</span> <span class="token operator">=</span> <span class="token punctuation">.</span>sharedInstance<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">_DDLogMessage</span><span class="token punctuation">(</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> level<span class="token punctuation">:</span> level<span class="token punctuation">,</span> flag<span class="token punctuation">:</span> <span class="token punctuation">.</span>debug<span class="token punctuation">,</span> context<span class="token punctuation">:</span> context<span class="token punctuation">,</span> file<span class="token punctuation">:</span> file<span class="token punctuation">,</span> function<span class="token punctuation">:</span> function<span class="token punctuation">,</span> line<span class="token punctuation">:</span> line<span class="token punctuation">,</span> tag<span class="token punctuation">:</span> tag<span class="token punctuation">,</span> asynchronous<span class="token punctuation">:</span> <span class="token keyword">async</span><span class="token punctuation">,</span> ddlog<span class="token punctuation">:</span> ddlog<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token attribute atrule">@inlinable</span><span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">DDLogInfo</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> message<span class="token punctuation">:</span> <span class="token attribute atrule">@autoclosure</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">Any</span><span class="token punctuation">,</span>                      level<span class="token punctuation">:</span> <span class="token class-name">DDLogLevel</span> <span class="token operator">=</span> <span class="token punctuation">.</span>info<span class="token punctuation">,</span>                      context<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>                      file<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#file</span><span class="token punctuation">,</span>                      function<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#function</span><span class="token punctuation">,</span>                      line<span class="token punctuation">:</span> <span class="token class-name">UInt</span> <span class="token operator">=</span> <span class="token literal constant">#line</span><span class="token punctuation">,</span>                      tag<span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span>                      asynchronous <span class="token keyword">async</span><span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> asyncLoggingEnabled<span class="token punctuation">,</span>                      ddlog<span class="token punctuation">:</span> <span class="token class-name">DDLog</span> <span class="token operator">=</span> <span class="token punctuation">.</span>sharedInstance<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">_DDLogMessage</span><span class="token punctuation">(</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> level<span class="token punctuation">:</span> level<span class="token punctuation">,</span> flag<span class="token punctuation">:</span> <span class="token punctuation">.</span>info<span class="token punctuation">,</span> context<span class="token punctuation">:</span> context<span class="token punctuation">,</span> file<span class="token punctuation">:</span> file<span class="token punctuation">,</span> function<span class="token punctuation">:</span> function<span class="token punctuation">,</span> line<span class="token punctuation">:</span> line<span class="token punctuation">,</span> tag<span class="token punctuation">:</span> tag<span class="token punctuation">,</span> asynchronous<span class="token punctuation">:</span> <span class="token keyword">async</span><span class="token punctuation">,</span> ddlog<span class="token punctuation">:</span> ddlog<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token attribute atrule">@inlinable</span><span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">DDLogWarn</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> message<span class="token punctuation">:</span> <span class="token attribute atrule">@autoclosure</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">Any</span><span class="token punctuation">,</span>                      level<span class="token punctuation">:</span> <span class="token class-name">DDLogLevel</span> <span class="token operator">=</span> <span class="token class-name">DDLogLevel</span><span class="token punctuation">.</span>warning<span class="token punctuation">,</span>                      context<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>                      file<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#file</span><span class="token punctuation">,</span>                      function<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#function</span><span class="token punctuation">,</span>                      line<span class="token punctuation">:</span> <span class="token class-name">UInt</span> <span class="token operator">=</span> <span class="token literal constant">#line</span><span class="token punctuation">,</span>                      tag<span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span>                      asynchronous <span class="token keyword">async</span><span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> asyncLoggingEnabled<span class="token punctuation">,</span>                      ddlog<span class="token punctuation">:</span> <span class="token class-name">DDLog</span> <span class="token operator">=</span> <span class="token punctuation">.</span>sharedInstance<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">_DDLogMessage</span><span class="token punctuation">(</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> level<span class="token punctuation">:</span> level<span class="token punctuation">,</span> flag<span class="token punctuation">:</span> <span class="token punctuation">.</span>warning<span class="token punctuation">,</span> context<span class="token punctuation">:</span> context<span class="token punctuation">,</span> file<span class="token punctuation">:</span> file<span class="token punctuation">,</span> function<span class="token punctuation">:</span> function<span class="token punctuation">,</span> line<span class="token punctuation">:</span> line<span class="token punctuation">,</span> tag<span class="token punctuation">:</span> tag<span class="token punctuation">,</span> asynchronous<span class="token punctuation">:</span> <span class="token keyword">async</span><span class="token punctuation">,</span> ddlog<span class="token punctuation">:</span> ddlog<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token attribute atrule">@inlinable</span><span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">DDLogVerbose</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> message<span class="token punctuation">:</span> <span class="token attribute atrule">@autoclosure</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">Any</span><span class="token punctuation">,</span>                         level<span class="token punctuation">:</span> <span class="token class-name">DDLogLevel</span> <span class="token operator">=</span> <span class="token punctuation">.</span>verbose<span class="token punctuation">,</span>                         context<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>                         file<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#file</span><span class="token punctuation">,</span>                         function<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#function</span><span class="token punctuation">,</span>                         line<span class="token punctuation">:</span> <span class="token class-name">UInt</span> <span class="token operator">=</span> <span class="token literal constant">#line</span><span class="token punctuation">,</span>                         tag<span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span>                         asynchronous <span class="token keyword">async</span><span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> asyncLoggingEnabled<span class="token punctuation">,</span>                         ddlog<span class="token punctuation">:</span> <span class="token class-name">DDLog</span> <span class="token operator">=</span> <span class="token punctuation">.</span>sharedInstance<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">_DDLogMessage</span><span class="token punctuation">(</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> level<span class="token punctuation">:</span> level<span class="token punctuation">,</span> flag<span class="token punctuation">:</span> <span class="token punctuation">.</span>verbose<span class="token punctuation">,</span> context<span class="token punctuation">:</span> context<span class="token punctuation">,</span> file<span class="token punctuation">:</span> file<span class="token punctuation">,</span> function<span class="token punctuation">:</span> function<span class="token punctuation">,</span> line<span class="token punctuation">:</span> line<span class="token punctuation">,</span> tag<span class="token punctuation">:</span> tag<span class="token punctuation">,</span> asynchronous<span class="token punctuation">:</span> <span class="token keyword">async</span><span class="token punctuation">,</span> ddlog<span class="token punctuation">:</span> ddlog<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token attribute atrule">@inlinable</span><span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">DDLogError</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> message<span class="token punctuation">:</span> <span class="token attribute atrule">@autoclosure</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">Any</span><span class="token punctuation">,</span>                       level<span class="token punctuation">:</span> <span class="token class-name">DDLogLevel</span> <span class="token operator">=</span> <span class="token punctuation">.</span>error<span class="token punctuation">,</span>                       context<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>                       file<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#file</span><span class="token punctuation">,</span>                       function<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#function</span><span class="token punctuation">,</span>                       line<span class="token punctuation">:</span> <span class="token class-name">UInt</span> <span class="token operator">=</span> <span class="token literal constant">#line</span><span class="token punctuation">,</span>                       tag<span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span>                       asynchronous <span class="token keyword">async</span><span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>                       ddlog<span class="token punctuation">:</span> <span class="token class-name">DDLog</span> <span class="token operator">=</span> <span class="token punctuation">.</span>sharedInstance<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">_DDLogMessage</span><span class="token punctuation">(</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> level<span class="token punctuation">:</span> level<span class="token punctuation">,</span> flag<span class="token punctuation">:</span> <span class="token punctuation">.</span>error<span class="token punctuation">,</span> context<span class="token punctuation">:</span> context<span class="token punctuation">,</span> file<span class="token punctuation">:</span> file<span class="token punctuation">,</span> function<span class="token punctuation">:</span> function<span class="token punctuation">,</span> line<span class="token punctuation">:</span> line<span class="token punctuation">,</span> tag<span class="token punctuation">:</span> tag<span class="token punctuation">,</span> asynchronous<span class="token punctuation">:</span> <span class="token keyword">async</span><span class="token punctuation">,</span> ddlog<span class="token punctuation">:</span> ddlog<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment">/// Returns a String of the current filename, without full path or extension.</span><span class="token comment">///</span><span class="token comment">/// Analogous to the C preprocessor macro `THIS_FILE`.</span><span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">currentFileName</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> fileName<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#file</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">(</span>describing<span class="token punctuation">:</span> fileName<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">let</span> idx <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"/"</span></span><span class="token punctuation">,</span> options<span class="token punctuation">:</span> <span class="token punctuation">.</span>backwards<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span>upperBound <span class="token punctuation">{</span>        str <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>idx<span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token keyword">let</span> idx <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"."</span></span><span class="token punctuation">,</span> options<span class="token punctuation">:</span> <span class="token punctuation">.</span>backwards<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span>lowerBound <span class="token punctuation">{</span>        str <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span><span class="token operator">..&lt;</span>idx<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> str<span class="token punctuation">}</span><span class="token comment">// swiftlint:disable identifier_name</span><span class="token comment">// swiftlint doesn't like func names that begin with a capital letter - deprecated</span><span class="token attribute atrule">@available</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">,</span> deprecated<span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Please use currentFileName"</span></span><span class="token punctuation">,</span> renamed<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"currentFileName"</span></span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">CurrentFileName</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> fileName<span class="token punctuation">:</span> <span class="token class-name">StaticString</span> <span class="token operator">=</span> <span class="token literal constant">#file</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">currentFileName</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token comment">// Software License Agreement (BSD License)</span><span class="token comment">//</span><span class="token comment">// Copyright (c) 2010-2021, Deusty, LLC</span><span class="token comment">// All rights reserved.</span><span class="token comment">//</span><span class="token comment">// Redistribution and use of this software in source and binary forms,</span><span class="token comment">// with or without modification, are permitted provided that the following conditions are met:</span><span class="token comment">//</span><span class="token comment">// * Redistributions of source code must retain the above copyright notice,</span><span class="token comment">//   this list of conditions and the following disclaimer.</span><span class="token comment">//</span><span class="token comment">// * Neither the name of Deusty nor the names of its contributors may be used</span><span class="token comment">//   to endorse or promote products derived from this software without specific</span><span class="token comment">//   prior written permission of Deusty, LLC.</span><span class="token directive property"><span class="token directive-name">#if</span> canImport<span class="token punctuation">(</span>Combine<span class="token punctuation">)</span></span><span class="token keyword">import</span> <span class="token class-name">Combine</span><span class="token directive property"><span class="token directive-name">#if</span> SWIFT_PACKAGE</span><span class="token keyword">import</span> <span class="token class-name">CocoaLumberjack</span><span class="token keyword">import</span> <span class="token class-name">CocoaLumberjackSwiftSupport</span><span class="token directive property"><span class="token directive-name">#endif</span></span><span class="token attribute atrule">@available</span><span class="token punctuation">(</span><span class="token constant">OSX</span> <span class="token number">10.15</span><span class="token punctuation">,</span> iOS <span class="token number">13.0</span><span class="token punctuation">,</span> tvOS <span class="token number">13.0</span><span class="token punctuation">,</span> watchOS <span class="token number">6.0</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token keyword">extension</span> <span class="token class-name">DDLog</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * Creates a message publisher.     *     * The publisher will add and remove loggers as subscriptions are added and removed.     *     * The level that you provide here is a preemptive filter (for performance).     * That is, the level specified here will be used to filter out logMessages so that     * the logger is never even invoked for the messages.     *     * More information:     *    See -[DDLog addLogger:with:]     *     * - Parameter logLevel: preemptive filter of the message returned by the publisher. All levels are sent by default     * - Returns: A MessagePublisher that emits LogMessages filtered by the specified logLevel     **/</span>    <span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">messagePublisher</span><span class="token punctuation">(</span>with logLevel<span class="token punctuation">:</span> <span class="token class-name">DDLogLevel</span> <span class="token operator">=</span> <span class="token punctuation">.</span>all<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">MessagePublisher</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token class-name">MessagePublisher</span><span class="token punctuation">(</span>log<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">,</span> with<span class="token punctuation">:</span> logLevel<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment">// MARK: - MessagePublisher</span>        <span class="token attribute atrule">@available</span><span class="token punctuation">(</span><span class="token constant">OSX</span> <span class="token number">10.15</span><span class="token punctuation">,</span> iOS <span class="token number">13.0</span><span class="token punctuation">,</span> tvOS <span class="token number">13.0</span><span class="token punctuation">,</span> watchOS <span class="token number">6.0</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">struct</span> <span class="token class-name">MessagePublisher</span><span class="token punctuation">:</span> <span class="token class-name">Combine</span><span class="token punctuation">.</span><span class="token class-name">Publisher</span> <span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token keyword">typealias</span> <span class="token class-name">Output</span> <span class="token operator">=</span> <span class="token class-name">DDLogMessage</span>        <span class="token keyword">public</span> <span class="token keyword">typealias</span> <span class="token class-name">Failure</span> <span class="token operator">=</span> <span class="token class-name">Never</span>        <span class="token keyword">private</span> <span class="token keyword">let</span> log<span class="token punctuation">:</span> <span class="token class-name">DDLog</span>        <span class="token keyword">private</span> <span class="token keyword">let</span> logLevel<span class="token punctuation">:</span> <span class="token class-name">DDLogLevel</span>        <span class="token keyword">public</span> <span class="token keyword">init</span><span class="token punctuation">(</span>log<span class="token punctuation">:</span> <span class="token class-name">DDLog</span><span class="token punctuation">,</span> with logLevel<span class="token punctuation">:</span> <span class="token class-name">DDLogLevel</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">self</span><span class="token punctuation">.</span>log <span class="token operator">=</span> log            <span class="token keyword">self</span><span class="token punctuation">.</span>logLevel <span class="token operator">=</span> logLevel        <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">receive</span><span class="token operator">&lt;</span><span class="token class-name">S</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>subscriber<span class="token punctuation">:</span> <span class="token class-name">S</span><span class="token punctuation">)</span> <span class="token keyword">where</span> <span class="token class-name">S</span><span class="token punctuation">:</span> <span class="token class-name">Subscriber</span><span class="token punctuation">,</span> <span class="token class-name">S</span><span class="token punctuation">.</span><span class="token class-name">Failure</span> <span class="token operator">==</span> <span class="token class-name">Failure</span><span class="token punctuation">,</span> <span class="token class-name">S</span><span class="token punctuation">.</span><span class="token class-name">Input</span> <span class="token operator">==</span> <span class="token class-name">Output</span> <span class="token punctuation">{</span>            <span class="token keyword">let</span> subscription <span class="token operator">=</span> <span class="token class-name">Subscription</span><span class="token punctuation">(</span>log<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">.</span>log<span class="token punctuation">,</span> with<span class="token punctuation">:</span> logLevel<span class="token punctuation">,</span> subscriber<span class="token punctuation">:</span> subscriber<span class="token punctuation">)</span>            subscriber<span class="token punctuation">.</span><span class="token function">receive</span><span class="token punctuation">(</span>subscription<span class="token punctuation">:</span> subscription<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">// MARK: - Subscription</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Subscription</span><span class="token operator">&lt;</span><span class="token class-name">S</span><span class="token punctuation">:</span> <span class="token class-name">Subscriber</span><span class="token operator">&gt;</span><span class="token punctuation">:</span> <span class="token class-name">NSObject</span><span class="token punctuation">,</span> <span class="token class-name">DDLogger</span><span class="token punctuation">,</span> <span class="token class-name">Combine</span><span class="token punctuation">.</span><span class="token class-name">Subscription</span>        <span class="token keyword">where</span> <span class="token class-name">S</span><span class="token punctuation">.</span><span class="token class-name">Input</span> <span class="token operator">==</span> <span class="token class-name">DDLogMessage</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> <span class="token keyword">var</span> subscriber<span class="token punctuation">:</span> <span class="token class-name">S</span><span class="token operator">?</span>        <span class="token keyword">private</span> <span class="token keyword">weak</span> <span class="token keyword">var</span> log<span class="token punctuation">:</span> <span class="token class-name">DDLog</span><span class="token operator">?</span>        <span class="token comment">//Not used but DDLogger requires it. The preferred way to achieve this is to use the `map()` Combine operator of the publisher.</span>        <span class="token comment">//ie:</span>        <span class="token comment">// DDLog.sharedInstance.messagePublisher()</span>        <span class="token comment">//     .map { [format log message] }</span>        <span class="token comment">//     .sink(receiveValue: { [process log message] })</span>        <span class="token comment">//</span>        <span class="token keyword">var</span> logFormatter<span class="token punctuation">:</span> <span class="token class-name">DDLogFormatter</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token nil constant">nil</span>        <span class="token keyword">let</span> combineIdentifier <span class="token operator">=</span> <span class="token class-name">CombineIdentifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">init</span><span class="token punctuation">(</span>log<span class="token punctuation">:</span> <span class="token class-name">DDLog</span><span class="token punctuation">,</span> with logLevel<span class="token punctuation">:</span> <span class="token class-name">DDLogLevel</span><span class="token punctuation">,</span> subscriber<span class="token punctuation">:</span> <span class="token class-name">S</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">self</span><span class="token punctuation">.</span>subscriber <span class="token operator">=</span> subscriber            <span class="token keyword">self</span><span class="token punctuation">.</span>log <span class="token operator">=</span> log            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            log<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">,</span> with<span class="token punctuation">:</span> logLevel<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">func</span> <span class="token function-definition function">request</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> demand<span class="token punctuation">:</span> <span class="token class-name">Subscribers</span><span class="token punctuation">.</span><span class="token class-name">Demand</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//The log messages are endless until canceled, so we won't do any demand management.</span>            <span class="token comment">//Combine operators can be used to deal with it as needed.</span>        <span class="token punctuation">}</span>        <span class="token keyword">func</span> <span class="token function-definition function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">self</span><span class="token punctuation">.</span>log<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span>            <span class="token keyword">self</span><span class="token punctuation">.</span>subscriber <span class="token operator">=</span> <span class="token nil constant">nil</span>        <span class="token punctuation">}</span>        <span class="token keyword">func</span> <span class="token function-definition function">log</span><span class="token punctuation">(</span>message logMessage<span class="token punctuation">:</span> <span class="token class-name">DDLogMessage</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token omit keyword">_</span> <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>subscriber<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">receive</span><span class="token punctuation">(</span>logMessage<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token attribute atrule">@available</span><span class="token punctuation">(</span><span class="token constant">OSX</span> <span class="token number">10.15</span><span class="token punctuation">,</span> iOS <span class="token number">13.0</span><span class="token punctuation">,</span> tvOS <span class="token number">13.0</span><span class="token punctuation">,</span> watchOS <span class="token number">6.0</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token keyword">extension</span> <span class="token class-name">Publisher</span> <span class="token keyword">where</span> <span class="token class-name">Output</span> <span class="token operator">==</span> <span class="token class-name">DDLogMessage</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">formatted</span><span class="token punctuation">(</span>with formatter<span class="token punctuation">:</span> <span class="token class-name">DDLogFormatter</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Publishers</span><span class="token punctuation">.</span><span class="token class-name">CompactMap</span><span class="token operator">&lt;</span><span class="token keyword">Self</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> compactMap <span class="token punctuation">{</span> formatter<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>message<span class="token punctuation">:</span> <span class="token short-argument">$0</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token directive property"><span class="token directive-name">#endif</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查看cocoapods中各个库的版本</title>
      <link href="/posts/48263.html"/>
      <url>/posts/48263.html</url>
      
        <content type="html"><![CDATA[<h1 id="查看cocoapods中各个库的版本"><a href="#查看cocoapods中各个库的版本" class="headerlink" title="查看cocoapods中各个库的版本"></a>查看cocoapods中各个库的版本</h1><p>========================</p><p>记录一下</p><pre class="line-numbers language-none"><code class="language-none">cat Podfile.lock<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">Last login: Fri Apr  9 05:48:04 on ttys002zhangsaidong@zhangsaidongs-MacBook-Pro ~ % cd /Users/zhangsaidong/Desktop/project/CommonlyUsed/RunInto-Apple/RunInto/RunIntozhangsaidong@zhangsaidongs-MacBook-Pro RunInto % cd ..zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % cat Podfile.lockPODS:  - Alamofire (5.4.1)  - ARVideoKit (1.6.0)  - BarcodeScanner-custom (5.1.4)  - ColorSlider (4.4)  - Crashlytics (3.14.0):    - Fabric (~&gt; 1.10.2)  - Differentiator (5.0.0)  - Fabric (1.10.2)  - HandyJSON (5.0.2)  - JGProgressHUD (2.2)  - Kingfisher (6.1.1)  - MJRefresh (3.5.0)  - Moya (14.0.0):    - Moya/Core (= 14.0.0)  - Moya/Core (14.0.0):    - Alamofire (~&gt; 5.0)  - "NSObject+Rx (2.1.0)":    - RxSwift  - ObjectMapper (4.2.0)  - OpenCV (4.1.0)  - PinpointKit (1.5.0):    - PinpointKit/Core (= 1.5.0)  - PinpointKit/Core (1.5.0)  - R.swift (5.3.1):    - R.swift.Library (~&gt; 5.3.0)  - R.swift.Library (5.3.0)  - ReactorKit (3.0.0):    - RxSwift (~&gt; 6.0)    - WeakMapTable (~&gt; 1.1)  - RxCocoa (6.1.0):    - RxRelay (= 6.1.0)    - RxSwift (= 6.1.0)  - RxDataSources (5.0.0):    - Differentiator (~&gt; 5.0)    - RxCocoa (~&gt; 6.0)    - RxSwift (~&gt; 6.0)  - RxFeedback (4.0.0):    - RxCocoa (~&gt; 6.0)    - RxSwift (~&gt; 6.0)  - RxGesture (4.0.0):    - RxCocoa (~&gt; 6.0)    - RxSwift (~&gt; 6.0)  - RxRelay (6.1.0):    - RxSwift (= 6.1.0)  - RxSwift (6.1.0)  - Siren (5.8.1)  - SnapKit (5.0.1)  - Spring (1.0.6)  - SQLite.swift (0.12.2):    - SQLite.swift/standard (= 0.12.2)  - SQLite.swift/standard (0.12.2)  - SwifterSwift/CoreGraphics (5.2.0)  - SwifterSwift/Dispatch (5.2.0)  - SwifterSwift/Foundation (5.2.0)  - SwifterSwift/SceneKit (5.2.0)  - SwifterSwift/StoreKit (5.2.0)  - SwifterSwift/SwiftStdlib (5.2.0)  - SwifterSwift/UIKit (5.2.0)  - SwiftLint (0.42.0)  - SwiftyBeaver (1.9.3)  - SwiftyJSON (5.0.0)  - Then (2.7.0)  - Toast-Swift (5.0.1)  - WeakMapTable (1.2.0)  - Zip (2.1.1)DEPENDENCIES:  - Alamofire  - ARVideoKit (from `https://github.com/AFathi/ARVideoKit.git`, branch `swift_5`)  - BarcodeScanner-custom (from `https://github.com/adong666666/BarCodeScanner-custom.git`, tag `5.1.4`)  - ColorSlider  - Crashlytics  - Fabric  - HandyJSON  - JGProgressHUD  - Kingfisher  - MJRefresh  - Moya  - "NSObject+Rx"  - ObjectMapper  - OpenCV  - PinpointKit  - R.swift  - ReactorKit  - RxCocoa  - RxDataSources  - RxFeedback  - RxGesture  - RxSwift  - Siren  - SnapKit  - Spring (from `https://github.com/MengTo/Spring.git`)  - SQLite.swift  - SwifterSwift/CoreGraphics  - SwifterSwift/Dispatch  - SwifterSwift/Foundation  - SwifterSwift/SceneKit  - SwifterSwift/StoreKit  - SwifterSwift/SwiftStdlib  - SwifterSwift/UIKit  - SwiftLint  - SwiftyBeaver  - SwiftyJSON  - Then  - Toast-Swift  - ZipSPEC REPOS:  https://github.com/CocoaPods/Specs.git:    - Alamofire    - ColorSlider    - Crashlytics    - Differentiator    - Fabric    - HandyJSON    - JGProgressHUD    - Kingfisher    - MJRefresh    - Moya    - "NSObject+Rx"    - ObjectMapper    - OpenCV    - PinpointKit    - R.swift    - R.swift.Library    - ReactorKit    - RxCocoa    - RxDataSources    - RxFeedback    - RxGesture    - RxRelay    - RxSwift    - Siren    - SnapKit    - SQLite.swift    - SwifterSwift    - SwiftLint    - SwiftyBeaver    - SwiftyJSON    - Then    - Toast-Swift    - WeakMapTable    - ZipEXTERNAL SOURCES:  ARVideoKit:    :branch: swift_5    :git: https://github.com/AFathi/ARVideoKit.git  BarcodeScanner-custom:    :git: https://github.com/adong666666/BarCodeScanner-custom.git    :tag: 5.1.4  Spring:    :git: https://github.com/MengTo/Spring.gitCHECKOUT OPTIONS:  ARVideoKit:    :commit: b7e1facdedd8fe16d04ef5f47c4697e89bad9f27    :git: https://github.com/AFathi/ARVideoKit.git  BarcodeScanner-custom:    :git: https://github.com/adong666666/BarCodeScanner-custom.git    :tag: 5.1.4  Spring:    :commit: 50d92a5b9e08848387ae95bf44c6ad20834f7083    :git: https://github.com/MengTo/Spring.gitSPEC CHECKSUMS:  Alamofire: 2291f7d21ca607c491dd17642e5d40fdcda0e65c  ARVideoKit: 4bd4ac37b63e32de354d5470949416f527dd88f5  BarcodeScanner-custom: 661d4e5a498a848580857e2eb5cbd1718bb356b7  ColorSlider: 9a888e65b871fa1e6a26fadebf4931c949935681  Crashlytics: 9220f5bc89e7a618df411b4f639389dbfb0e03d2  Differentiator: e8497ceab83c1b10ca233716d547b9af21b9344d  Fabric: ea977e3cd9c20425516d3dafd3bf8c941c51223f  HandyJSON: 9e4e236f5d2dbefad5155a77417bbea438201c03  JGProgressHUD: d83d7a981b85d11205e19ff8ad5bb9c40571c847  Kingfisher: 676d63307fbef6ed5d5ed400bff36983480d7500  MJRefresh: 6afc955813966afb08305477dd7a0d9ad5e79a16  Moya: 5b45dacb75adb009f97fde91c204c1e565d31916  "NSObject+Rx": 09277ba78aa12a8e454c82429eb4e31bfb413131  ObjectMapper: 1eb41f610210777375fa806bf161dc39fb832b81  OpenCV: 52cd4d72ff29e2be83421477aec5447320b7fb19  PinpointKit: 8599f60b7cff2b65e52a10293c220b6b81f14839  R.swift: 56ec7e3aef34b9eee47a659e42462db2c1cc5ac3  R.swift.Library: 0fc583cb55a99e28901299cc451614cad1161962  ReactorKit: 5348c9881dcb546605b451e32759dccc9937d36e  RxCocoa: 5c51f02d562cbd94629f6c26cf0c80fe4ab8d343  RxDataSources: aa47cc1ed6c500fa0dfecac5c979b723542d79cf  RxFeedback: c762a59b678ed8e30b5c84b6e4e03ad0341d2ecb  RxGesture: b095a86df33d199a33b46a644e7c58bdef8ab035  RxRelay: 483e1a19fad961b41f0b0c0bee506f46c1ae14fe  RxSwift: a834e5c538e89eca0cae86f403f4fbf0336786ce  Siren: de768099aff1f1c9acda4247064788a4940b4bf3  SnapKit: 97b92857e3df3a0c71833cce143274bf6ef8e5eb  Spring: 3d113f14575ef79aec9c5f906dfa4f5001c03254  SQLite.swift: d2b4642190917051ce6bd1d49aab565fe794eea3  SwifterSwift: 334181863c416882d97b7a60c05054d9e4d799e2  SwiftLint: 4fa9579c63416865179bc416f0a92d55f009600d  SwiftyBeaver: 2e8acd6fc90c6d0a27055867a290794926d57c02  SwiftyJSON: 36413e04c44ee145039d332b4f4e2d3e8d6c4db7  Then: acfe0be7e98221c6204e12f8161459606d5d822d  Toast-Swift: 9b6a70f28b3bf0b96c40d46c0c4b9d6639846711  WeakMapTable: 05c694ce8439a7a9ebabb56187287a63c57673d6  Zip: 414f59909701fda9a84ab774ebe0f5449b1082ccPODFILE CHECKSUM: 3c89a7a0577096b9dbf521d41263b504084bd37fCOCOAPODS: 1.10.1zhangsaidong@zhangsaidongs-MacBook-Pro RunInto % <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> cocoapods </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zip使用</title>
      <link href="/posts/17588.html"/>
      <url>/posts/17588.html</url>
      
        <content type="html"><![CDATA[<h1 id="Zip使用"><a href="#Zip使用" class="headerlink" title="Zip使用"></a>Zip使用</h1><p>========================</p><p>感觉官方写得挺明白的</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">do</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> filePath <span class="token operator">=</span> <span class="token class-name">Bundle</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span>forResource<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"file"</span></span><span class="token punctuation">,</span> withExtension<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"zip"</span></span><span class="token punctuation">)</span><span class="token operator">!</span>    <span class="token keyword">let</span> unzipDirectory <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">Zip</span><span class="token punctuation">.</span><span class="token function">quickUnzipFile</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span> <span class="token comment">// Unzip</span>    <span class="token keyword">let</span> zipFilePath <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">Zip</span><span class="token punctuation">.</span><span class="token function">quickZipFiles</span><span class="token punctuation">(</span><span class="token punctuation">[</span>filePath<span class="token punctuation">]</span><span class="token punctuation">,</span> fileName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"archive"</span></span><span class="token punctuation">)</span> <span class="token comment">// Zip</span><span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">{</span>  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Something went wrong"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">do</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> filePath <span class="token operator">=</span> <span class="token class-name">Bundle</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span>forResource<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"file"</span></span><span class="token punctuation">,</span> withExtension<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"zip"</span></span><span class="token punctuation">)</span><span class="token operator">!</span>    <span class="token keyword">let</span> documentsDirectory <span class="token operator">=</span> <span class="token class-name">FileManager</span><span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">.</span><span class="token function">urls</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span><span class="token punctuation">.</span>documentDirectory<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>userDomainMask<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">try</span> <span class="token class-name">Zip</span><span class="token punctuation">.</span><span class="token function">unzipFile</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> destination<span class="token punctuation">:</span> documentsDirectory<span class="token punctuation">,</span> overwrite<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> password<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"password"</span></span><span class="token punctuation">,</span> progress<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>progress<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">in</span>        <span class="token function">print</span><span class="token punctuation">(</span>progress<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// Unzip</span>    <span class="token keyword">let</span> zipFilePath <span class="token operator">=</span> documentsFolder<span class="token punctuation">.</span><span class="token function">appendingPathComponent</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"archive.zip"</span></span><span class="token punctuation">)</span>    <span class="token keyword">try</span> <span class="token class-name">Zip</span><span class="token punctuation">.</span><span class="token function">zipFiles</span><span class="token punctuation">(</span><span class="token punctuation">[</span>filePath<span class="token punctuation">]</span><span class="token punctuation">,</span> zipFilePath<span class="token punctuation">:</span> zipFilePath<span class="token punctuation">,</span> password<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"password"</span></span><span class="token punctuation">,</span> progress<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>progress<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">in</span>        <span class="token function">print</span><span class="token punctuation">(</span>progress<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//Zip</span><span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">{</span>  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Something went wrong"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Zip</span><span class="token punctuation">.</span><span class="token function">addCustomFileExtension</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"file-extension-here"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我是这样用的</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">func</span> <span class="token function-definition function">unzipModels</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> path<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">]</span><span class="token punctuation">,</span> modelUrl<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> directory<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> item <span class="token keyword">in</span> path <span class="token punctuation">{</span>        <span class="token keyword">let</span> fileManager <span class="token operator">=</span> <span class="token class-name">FileManager</span><span class="token punctuation">.</span><span class="token keyword">default</span>        <span class="token keyword">let</span> urls<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token constant">URL</span><span class="token punctuation">]</span> <span class="token operator">=</span> fileManager<span class="token punctuation">.</span><span class="token function">urls</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>documentDirectory<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>userDomainMask<span class="token punctuation">)</span>        <span class="token keyword">let</span> documentURL <span class="token operator">=</span> urls<span class="token punctuation">.</span>first<span class="token operator">!</span>        <span class="token keyword">let</span> url <span class="token operator">=</span> documentURL<span class="token punctuation">.</span><span class="token function">appendingPathComponent</span><span class="token punctuation">(</span>directory <span class="token operator">+</span> item<span class="token punctuation">)</span>        <span class="token keyword">let</span> urlForTemp <span class="token operator">=</span> documentURL<span class="token punctuation">.</span><span class="token function">appendingPathComponent</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Temp"</span></span><span class="token punctuation">,</span> isDirectory<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> destinationURL <span class="token operator">=</span> documentURL<span class="token punctuation">.</span><span class="token function">appendingPathComponent</span><span class="token punctuation">(</span>directory <span class="token operator">+</span> <span class="token string-literal"><span class="token string">"File"</span></span><span class="token punctuation">,</span> isDirectory<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span>            <span class="token keyword">while</span> <span class="token boolean">true</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> fileManager<span class="token punctuation">.</span><span class="token function">fileExists</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> url<span class="token punctuation">.</span>path<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">break</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>forTimeInterval<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span>                    <span class="token keyword">continue</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token keyword">do</span> <span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token class-name">Zip</span><span class="token punctuation">.</span><span class="token function">unzipFile</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> destination<span class="token punctuation">:</span> urlForTemp<span class="token punctuation">,</span> overwrite<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> password<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> progress<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>progress<span class="token punctuation">)</span> <span class="token keyword">in</span>                <span class="token keyword">if</span> progress <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span>                    <span class="token keyword">do</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span> fileManager<span class="token punctuation">.</span><span class="token function">fileExists</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> destinationURL<span class="token punctuation">.</span>path <span class="token punctuation">)</span> <span class="token punctuation">{</span>                            <span class="token keyword">try</span> fileManager<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> destinationURL<span class="token punctuation">.</span>path<span class="token punctuation">)</span>                        <span class="token punctuation">}</span>                        <span class="token keyword">try</span> fileManager<span class="token punctuation">.</span><span class="token function">moveItem</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> urlForTemp<span class="token punctuation">.</span>path<span class="token punctuation">,</span> toPath<span class="token punctuation">:</span> destinationURL<span class="token punctuation">.</span>path<span class="token punctuation">)</span>                        <span class="token keyword">try</span> fileManager<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> url<span class="token punctuation">.</span>path<span class="token punctuation">)</span>                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>                        <span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>            <span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">func</span> <span class="token function-definition function">downloadModelsAndUnzip</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> path<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">]</span><span class="token punctuation">,</span> modelUrl<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> directory<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token class-name">DispatchQueue</span><span class="token punctuation">.</span><span class="token function">global</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">async</span> <span class="token punctuation">{</span>        <span class="token function">downloadModelsWithoutDispatchQueue</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> modelUrl<span class="token punctuation">:</span> modelUrl<span class="token punctuation">,</span> directory<span class="token punctuation">:</span> directory<span class="token punctuation">)</span>        <span class="token function">unzipModels</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> modelUrl<span class="token punctuation">:</span> modelUrl<span class="token punctuation">,</span> directory<span class="token punctuation">:</span> directory<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> zip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS mlmodelc内部文件格式规范</title>
      <link href="/posts/32840.html"/>
      <url>/posts/32840.html</url>
      
        <content type="html"><![CDATA[<h1 id="iOS-mlmodelc内部文件格式规范"><a href="#iOS-mlmodelc内部文件格式规范" class="headerlink" title="iOS mlmodelc内部文件格式规范"></a>iOS mlmodelc内部文件格式规范</h1><p>========================<br>尽量本地编译Core ML mlmodel，则得到的mlmodelc可以直接使用</p><p>通过网络加载的Core ML mlmodel所编译而出的mlmodelc虽说内容一致，但格式不方便直接使用，而且……最重要的是，网络加载的mlmodel至少还要再编译一次，相当于在App内占用了两个模型的体量。而且有可能需要重复编译多次，即占用多个模型的体量，如果还不注重清理的话，App的体量会越来越大，而且内部数据还大量重复，因为编译出来mlmodec不能直接使用(你可以在代码里调整模型的内部格式，但是这也太麻烦了，对不同模型还得不同处理)</p><p>所以建议使用mlmodel本地编译出来后的mlmodelc，你可以在Products中的.app文件夹中右键显示包内容找到编译后的mlmodelc文件</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOSmlmodelc%E5%86%85%E9%83%A8%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E8%A7%84%E8%8C%83/1.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOSmlmodelc%E5%86%85%E9%83%A8%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E8%A7%84%E8%8C%83/2.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOSmlmodelc%E5%86%85%E9%83%A8%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E8%A7%84%E8%8C%83/3.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> file </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS延时</title>
      <link href="/posts/12351.html"/>
      <url>/posts/12351.html</url>
      
        <content type="html"><![CDATA[<h1 id="iOS延时"><a href="#iOS延时" class="headerlink" title="iOS延时"></a>iOS延时</h1><p>========================</p><p>今天我使用了这样一种延时，目的是等待文件下载完，返回与文件相关的数据，我试了各种多线程，后面发现这种延时有阻塞的味道，能有效地防止函数提前返回数据</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">while</span> <span class="token boolean">true</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token keyword">let</span> compiledModelURL <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">?</span> <span class="token class-name">MLModel</span><span class="token punctuation">.</span><span class="token function">compileModel</span><span class="token punctuation">(</span>at<span class="token punctuation">:</span> url<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>forTimeInterval<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span>        <span class="token keyword">continue</span>    <span class="token punctuation">}</span>    <span class="token keyword">break</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这种延时不能起到阻塞作用，也不能防止函数提前返回，但是它可以等待一定时间后执行某种操作。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">DispatchQueue</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span><span class="token function">asyncAfter</span><span class="token punctuation">(</span>deadline<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> view <span class="token operator">=</span> <span class="token class-name">UIViewController</span><span class="token punctuation">.</span><span class="token function">getCurrentViewController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span>view    view<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">hideToastActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    view<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">hideAllToasts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下面是网上看到的一些延时</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token comment">// 1.perform(必须在主线程中执行)</span><span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token other-directive property">#selector</span><span class="token punctuation">(</span>delayExecution<span class="token punctuation">)</span><span class="token punctuation">,</span> with<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> afterDelay<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token comment">// 取消</span><span class="token class-name">NSObject</span><span class="token punctuation">.</span><span class="token function">cancelPreviousPerformRequests</span><span class="token punctuation">(</span>withTarget<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">)</span><span class="token comment">// 2.timer(必须在主线程中执行)</span><span class="token class-name">Timer</span><span class="token punctuation">.</span><span class="token function">scheduledTimer</span><span class="token punctuation">(</span>timeInterval<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> target<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">,</span> selector<span class="token punctuation">:</span> <span class="token other-directive property">#selector</span><span class="token punctuation">(</span>delayExecution<span class="token punctuation">)</span><span class="token punctuation">,</span> userInfo<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> repeats<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment">// 3.Thread (在主线程会卡主界面)</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>forTimeInterval<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">delayExecution</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 4.GCD 主线程/子线程</span><span class="token class-name">DispatchQueue</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span><span class="token function">asyncAfter</span><span class="token punctuation">(</span>deadline<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">delayExecution</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token class-name">DispatchQueue</span><span class="token punctuation">.</span><span class="token function">global</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asyncAfter</span><span class="token punctuation">(</span>deadline<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">delayExecution</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="延时执行"><a href="#延时执行" class="headerlink" title="延时执行"></a>延时执行</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">typealias</span> <span class="token class-name">Task</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token omit keyword">_</span> cancel<span class="token punctuation">:</span> <span class="token class-name">Bool</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Void</span><span class="token comment">/// 代码延迟运行</span><span class="token comment">///</span><span class="token comment">/// - Parameters:</span><span class="token comment">///   - delayTime: 延时时间。比如：.seconds(5)、.milliseconds(500)</span><span class="token comment">///   - qosClass: 要使用的全局QOS类（默认为 nil，表示主线程）</span><span class="token comment">///   - task: 延迟运行的代码</span><span class="token comment">/// - Returns: Task?</span><span class="token attribute atrule">@discardableResult</span><span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">bk_delay</span><span class="token punctuation">(</span>by delayTime<span class="token punctuation">:</span> <span class="token class-name">TimeInterval</span><span class="token punctuation">,</span> qosClass<span class="token punctuation">:</span> <span class="token class-name">DispatchQoS</span><span class="token punctuation">.</span><span class="token class-name">QoSClass</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> <span class="token omit keyword">_</span> task<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Void</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Task</span><span class="token operator">?</span> <span class="token punctuation">{</span>        <span class="token keyword">func</span> <span class="token function-definition function">dispatch_later</span><span class="token punctuation">(</span>block<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> dispatchQueue <span class="token operator">=</span> qosClass <span class="token operator">!=</span> <span class="token nil constant">nil</span> <span class="token operator">?</span> <span class="token class-name">DispatchQueue</span><span class="token punctuation">.</span><span class="token function">global</span><span class="token punctuation">(</span>qos<span class="token punctuation">:</span> qosClass<span class="token operator">!</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>main        dispatchQueue<span class="token punctuation">.</span><span class="token function">asyncAfter</span><span class="token punctuation">(</span>deadline<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> delayTime<span class="token punctuation">,</span> execute<span class="token punctuation">:</span> block<span class="token punctuation">)</span>    <span class="token punctuation">}</span>        <span class="token keyword">var</span> closure<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Void</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token operator">=</span> task    <span class="token keyword">var</span> result<span class="token punctuation">:</span> <span class="token class-name">Task</span><span class="token operator">?</span>        <span class="token keyword">let</span> delayedClosure<span class="token punctuation">:</span> <span class="token class-name">Task</span> <span class="token operator">=</span> <span class="token punctuation">{</span> cancel <span class="token keyword">in</span>        <span class="token keyword">if</span> <span class="token keyword">let</span> internalClosure <span class="token operator">=</span> closure <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token operator">!</span>cancel <span class="token punctuation">{</span>                <span class="token class-name">DispatchQueue</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span><span class="token keyword">async</span><span class="token punctuation">(</span>execute<span class="token punctuation">:</span> internalClosure<span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        closure <span class="token operator">=</span> <span class="token nil constant">nil</span>        result <span class="token operator">=</span> <span class="token nil constant">nil</span>    <span class="token punctuation">}</span>        result <span class="token operator">=</span> delayedClosure        dispatch_later <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token keyword">let</span> delayedClosure <span class="token operator">=</span> result <span class="token punctuation">{</span>            <span class="token function">delayedClosure</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>        <span class="token keyword">return</span> result    <span class="token punctuation">}</span><span class="token comment">/// 取消代码延时运行</span><span class="token keyword">func</span> <span class="token function-definition function">delayCancel</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> task<span class="token punctuation">:</span> <span class="token class-name">Task</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    task<span class="token operator">?</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="倒计时"><a href="#倒计时" class="headerlink" title="倒计时"></a>倒计时</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token comment">/// GCD定时器倒计时</span><span class="token comment">///</span><span class="token comment">/// - Parameters:</span><span class="token comment">///   - timeInterval: 间隔时间</span><span class="token comment">///   - repeatCount: 重复次数</span><span class="token comment">///   - handler: 循环事件,闭包参数: 1.timer 2.剩余执行次数</span><span class="token keyword">func</span> <span class="token function-definition function">dispatchTimer</span><span class="token punctuation">(</span>timeInterval<span class="token punctuation">:</span> <span class="token class-name">Double</span><span class="token punctuation">,</span> repeatCount<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">,</span> handler<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token class-name">DispatchSourceTimer</span><span class="token operator">?</span><span class="token punctuation">,</span> <span class="token class-name">Int</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> repeatCount <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span>    <span class="token punctuation">}</span>    <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token class-name">DispatchSource</span><span class="token punctuation">.</span><span class="token function">makeTimerSource</span><span class="token punctuation">(</span>flags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> queue<span class="token punctuation">:</span> <span class="token class-name">DispatchQueue</span><span class="token punctuation">.</span>main<span class="token punctuation">)</span>    <span class="token keyword">var</span> count <span class="token operator">=</span> repeatCount    timer<span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span>deadline<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> repeating<span class="token punctuation">:</span> timeInterval<span class="token punctuation">)</span>    timer<span class="token punctuation">.</span>setEventHandler <span class="token punctuation">{</span>        count <span class="token operator">-=</span> <span class="token number">1</span>        <span class="token class-name">DispatchQueue</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span><span class="token keyword">async</span> <span class="token punctuation">{</span>            <span class="token function">handler</span><span class="token punctuation">(</span>timer<span class="token punctuation">,</span> count<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> count <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>            timer<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    timer<span class="token punctuation">.</span><span class="token function">resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token comment">/// GCD实现定时器</span><span class="token comment">///</span><span class="token comment">/// - Parameters:</span><span class="token comment">///   - timeInterval: 间隔时间</span><span class="token comment">///   - handler: 事件</span><span class="token comment">///   - needRepeat: 是否重复</span><span class="token keyword">func</span> <span class="token function-definition function">dispatchTimer</span><span class="token punctuation">(</span>timeInterval<span class="token punctuation">:</span> <span class="token class-name">Double</span><span class="token punctuation">,</span> handler<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token class-name">DispatchSourceTimer</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Void</span><span class="token punctuation">,</span> needRepeat<span class="token punctuation">:</span> <span class="token class-name">Bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token class-name">DispatchSource</span><span class="token punctuation">.</span><span class="token function">makeTimerSource</span><span class="token punctuation">(</span>flags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> queue<span class="token punctuation">:</span> <span class="token class-name">DispatchQueue</span><span class="token punctuation">.</span>main<span class="token punctuation">)</span>    timer<span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span>deadline<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> repeating<span class="token punctuation">:</span> timeInterval<span class="token punctuation">)</span>    timer<span class="token punctuation">.</span>setEventHandler <span class="token punctuation">{</span>        <span class="token class-name">DispatchQueue</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span><span class="token keyword">async</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> needRepeat <span class="token punctuation">{</span>                <span class="token function">handler</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                timer<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token function">handler</span><span class="token punctuation">(</span><span class="token nil constant">nil</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    timer<span class="token punctuation">.</span><span class="token function">resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
            <tag> time </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS调试摘录</title>
      <link href="/posts/28837.html"/>
      <url>/posts/28837.html</url>
      
        <content type="html"><![CDATA[<h1 id="iOS调试摘录"><a href="#iOS调试摘录" class="headerlink" title="iOS调试摘录"></a>iOS调试摘录</h1><p>========================<br> po vo do 等调试命令可以了解下</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOS%E8%B0%83%E8%AF%95%E6%91%98%E5%BD%95/iOS%E8%B0%83%E8%AF%95%E6%91%98%E5%BD%95.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> 软件测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS_Swift文件夹和文件操作</title>
      <link href="/posts/700.html"/>
      <url>/posts/700.html</url>
      
        <content type="html"><![CDATA[<h1 id="iOS-Swift文件夹和文件操作"><a href="#iOS-Swift文件夹和文件操作" class="headerlink" title="iOS_Swift文件夹和文件操作"></a>iOS_Swift文件夹和文件操作</h1><p>========================</p><p>首先获取app文件夹：(以下例子都在doucment文件夹下操作)</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> manager <span class="token operator">=</span> <span class="token class-name">FileManager</span><span class="token punctuation">.</span><span class="token keyword">default</span><span class="token keyword">let</span> urls<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token constant">URL</span><span class="token punctuation">]</span> <span class="token operator">=</span> manager<span class="token punctuation">.</span><span class="token function">urls</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>documentDirectory<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>userDomainMask<span class="token punctuation">)</span><span class="token comment">// .libraryDirectory、.cachesDirectory ...</span><span class="token keyword">self</span><span class="token punctuation">.</span>documentURL <span class="token operator">=</span> urls<span class="token punctuation">.</span>first<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>documentURL<span class="token punctuation">.</span><span class="token function">appendingPathComponent</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"moxiaoyan"</span></span><span class="token punctuation">,</span> isDirectory<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token keyword">var</span> isDirectory<span class="token punctuation">:</span> <span class="token class-name">ObjCBool</span> <span class="token operator">=</span> <span class="token class-name">ObjCBool</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">let</span> isExist <span class="token operator">=</span> manager<span class="token punctuation">.</span><span class="token function">fileExists</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> url<span class="token punctuation">.</span>path<span class="token punctuation">,</span> isDirectory<span class="token punctuation">:</span> <span class="token operator">&amp;</span>isDirectory<span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token operator">!</span>isExist <span class="token punctuation">{</span>  <span class="token keyword">do</span> <span class="token punctuation">{</span>    <span class="token keyword">try</span> manager<span class="token punctuation">.</span><span class="token function">createDirectory</span><span class="token punctuation">(</span>at<span class="token punctuation">:</span> url<span class="token punctuation">,</span> withIntermediateDirectories<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> attributes<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"createDirectory error:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">error</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="创建文件，并写入内容"><a href="#创建文件，并写入内容" class="headerlink" title="创建文件，并写入内容"></a>创建文件，并写入内容</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>documentURL<span class="token punctuation">.</span><span class="token function">appendingPathComponent</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"moxiaoyan/test1.txt"</span></span><span class="token punctuation">,</span> isDirectory<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// txt文件会自动创建，只要给个名称就行</span><span class="token keyword">let</span> string <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"moxiaoyan"</span></span><span class="token keyword">do</span> <span class="token punctuation">{</span>  <span class="token keyword">try</span> string<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>to<span class="token punctuation">:</span> url<span class="token punctuation">,</span> atomically<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> encoding<span class="token punctuation">:</span> <span class="token punctuation">.</span>utf8<span class="token punctuation">)</span>  <span class="token comment">// Data、Array、Dictionary、Image 都可以write</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"write string error:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">error</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="文件夹-文件-信息"><a href="#文件夹-文件-信息" class="headerlink" title="文件夹/文件 信息"></a>文件夹/文件 信息</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>documentURL<span class="token punctuation">.</span><span class="token function">appendingPathComponent</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"moxiaoyan"</span></span><span class="token punctuation">,</span> isDirectory<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// or "moxiaoyan/test1.txt"</span><span class="token comment">// 可读、可写、可执行、可删除</span><span class="token keyword">let</span> readable <span class="token operator">=</span> manager<span class="token punctuation">.</span><span class="token function">isReadableFile</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> url<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token keyword">let</span> writeable <span class="token operator">=</span> manager<span class="token punctuation">.</span><span class="token function">isWritableFile</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> url<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token keyword">let</span> executable <span class="token operator">=</span> manager<span class="token punctuation">.</span><span class="token function">isExecutableFile</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> url<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token keyword">let</span> deleteable <span class="token operator">=</span> manager<span class="token punctuation">.</span><span class="token function">isDeletableFile</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> url<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"readable:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">readable</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> writeable:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">writeable</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> executable:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">executable</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> deleteable:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">deleteable</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span> <span class="token comment">// NSFileCreationDate:创建时间、NSFileSize:文件大小、NSFileType:文件类型...</span><span class="token keyword">do</span> <span class="token punctuation">{</span>  <span class="token keyword">let</span> attributes<span class="token punctuation">:</span> <span class="token class-name">Dictionary</span> <span class="token operator">=</span> <span class="token keyword">try</span> manager<span class="token punctuation">.</span><span class="token function">attributesOfItem</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> url<span class="token punctuation">.</span>path<span class="token punctuation">)</span>  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"attributes</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">attributes</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>  <span class="token keyword">let</span> fileSize <span class="token operator">=</span> attributes<span class="token punctuation">[</span><span class="token class-name">FileAttributeKey</span><span class="token punctuation">.</span>size<span class="token punctuation">]</span> <span class="token keyword">as</span><span class="token operator">!</span> <span class="token class-name">Int</span>  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"fileSize:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">fileSize</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"attributes error: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">error</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="删除-文件夹-文件"><a href="#删除-文件夹-文件" class="headerlink" title="删除 文件夹/文件"></a>删除 文件夹/文件</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>documentURL<span class="token punctuation">.</span><span class="token function">appendingPathComponent</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"moxiaoyan"</span></span><span class="token punctuation">,</span> isDirectory<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token keyword">var</span> isDirectory<span class="token punctuation">:</span> <span class="token class-name">ObjCBool</span> <span class="token operator">=</span> <span class="token class-name">ObjCBool</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">let</span> isExist <span class="token operator">=</span> manager<span class="token punctuation">.</span><span class="token function">fileExists</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> url<span class="token punctuation">.</span>path<span class="token punctuation">,</span> isDirectory<span class="token punctuation">:</span> <span class="token operator">&amp;</span>isDirectory<span class="token punctuation">)</span><span class="token keyword">if</span> isExist <span class="token punctuation">{</span>  <span class="token keyword">do</span> <span class="token punctuation">{</span>    <span class="token keyword">try</span> manager<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span>at<span class="token punctuation">:</span> url<span class="token punctuation">)</span> <span class="token comment">// 删除文件</span>    <span class="token comment">// try manager.removeItem(atPath: url.path) // 删除文件路径</span>  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"removeItem error:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">error</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="清空文件夹"><a href="#清空文件夹" class="headerlink" title="清空文件夹"></a>清空文件夹</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token comment">// 删除文件夹里的所有文件，而不删除文件夹</span><span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>documentURL<span class="token punctuation">.</span><span class="token function">appendingPathComponent</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"moxiaoyan"</span></span><span class="token punctuation">,</span> isDirectory<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment">// 方法1：删除，再创建</span><span class="token comment">// self.deleteFile(name)</span><span class="token comment">// self.createFile(name)</span> <span class="token comment">// 方法2：遍历文件删除</span><span class="token keyword">let</span> files <span class="token operator">=</span> manager<span class="token punctuation">.</span><span class="token function">subpaths</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> url<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token keyword">for</span> file <span class="token keyword">in</span> files <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>  <span class="token keyword">do</span> <span class="token punctuation">{</span>    <span class="token keyword">try</span> manager<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> url<span class="token punctuation">.</span>path <span class="token operator">+</span> <span class="token string-literal"><span class="token string">"/</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">file</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span> <span class="token comment">// 需要拼接路径！！</span>  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"remove item:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">file</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">\n error:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">error</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="遍历文件夹"><a href="#遍历文件夹" class="headerlink" title="遍历文件夹"></a>遍历文件夹</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>documentURL<span class="token punctuation">.</span><span class="token function">appendingPathComponent</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"moxiaoyan"</span></span><span class="token punctuation">,</span> isDirectory<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment">// 1.1 浅遍历：只有 文件夹/文件 名</span><span class="token keyword">do</span> <span class="token punctuation">{</span>  <span class="token keyword">let</span> contentsOfDirectory <span class="token operator">=</span> <span class="token keyword">try</span> manager<span class="token punctuation">.</span><span class="token function">contentsOfDirectory</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> url<span class="token punctuation">.</span>path<span class="token punctuation">)</span>  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"contentsOfDirectory:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">contentsOfDirectory</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"1.1 浅遍历 error:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">error</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment">// 1.2 浅遍历：包含完整路径</span><span class="token keyword">do</span> <span class="token punctuation">{</span>  <span class="token keyword">let</span> contentsOfDirectory <span class="token operator">=</span> <span class="token keyword">try</span> manager<span class="token punctuation">.</span><span class="token function">contentsOfDirectory</span><span class="token punctuation">(</span>at<span class="token punctuation">:</span> url<span class="token punctuation">,</span>                                                            includingPropertiesForKeys<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span>                                                            options<span class="token punctuation">:</span> <span class="token punctuation">.</span>skipsHiddenFiles<span class="token punctuation">)</span>  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"skipsHiddenFiles:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">contentsOfDirectory</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"1.2 浅遍历 error:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">error</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token comment">// 2.1 深度遍历：只有当前文件夹下的路径</span><span class="token keyword">let</span> enumberatorAtPath <span class="token operator">=</span> manager<span class="token punctuation">.</span><span class="token function">enumerator</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> url<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"2.1 深度遍历：</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">enumberatorAtPath<span class="token operator">?</span><span class="token punctuation">.</span>allObjects</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment">// 2.2 深度遍历：包含完整路径</span><span class="token keyword">let</span> enumberatorAtURL <span class="token operator">=</span> manager<span class="token punctuation">.</span><span class="token function">enumerator</span><span class="token punctuation">(</span>at<span class="token punctuation">:</span> url<span class="token punctuation">,</span>                                          includingPropertiesForKeys<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span>                                          options<span class="token punctuation">:</span> <span class="token punctuation">.</span>skipsHiddenFiles<span class="token punctuation">,</span>                                          errorHandler<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"2.2 深度遍历：</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">enumberatorAtURL<span class="token operator">?</span><span class="token punctuation">.</span>allObjects</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="文件写入数据"><a href="#文件写入数据" class="headerlink" title="文件写入数据"></a>文件写入数据</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>documentURL<span class="token punctuation">.</span><span class="token function">appendingPathComponent</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"moxiaoyan/test1.txt"</span></span><span class="token punctuation">,</span> isDirectory<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token keyword">guard</span> <span class="token keyword">let</span> data <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>using<span class="token punctuation">:</span> <span class="token punctuation">.</span>utf8<span class="token punctuation">,</span> allowLossyConversion<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span><span class="token punctuation">}</span><span class="token comment">// 1.写在结尾</span><span class="token keyword">do</span> <span class="token punctuation">{</span>  <span class="token keyword">let</span> writeHandler <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">FileHandle</span><span class="token punctuation">(</span>forWritingTo<span class="token punctuation">:</span> url<span class="token punctuation">)</span>  writeHandler<span class="token punctuation">.</span><span class="token function">seekToEndOfFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  writeHandler<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"writeHandler error:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">error</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment">// 2.从第n个字符开始覆盖</span><span class="token keyword">do</span> <span class="token punctuation">{</span>  <span class="token keyword">let</span> writeHandler <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">FileHandle</span><span class="token punctuation">(</span>forWritingTo<span class="token punctuation">:</span> url<span class="token punctuation">)</span>  <span class="token keyword">do</span> <span class="token punctuation">{</span>    <span class="token keyword">try</span> writeHandler<span class="token punctuation">.</span><span class="token function">seek</span><span class="token punctuation">(</span>toOffset<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"writeHandler.seek error:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">error</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  writeHandler<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"writeHandler error:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">error</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment">// 3.只保留前n个字符</span><span class="token keyword">do</span> <span class="token punctuation">{</span>  <span class="token keyword">let</span> writeHandler <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">FileHandle</span><span class="token punctuation">(</span>forWritingTo<span class="token punctuation">:</span> url<span class="token punctuation">)</span>  <span class="token keyword">do</span> <span class="token punctuation">{</span>    <span class="token keyword">try</span> writeHandler<span class="token punctuation">.</span><span class="token function">truncate</span><span class="token punctuation">(</span>atOffset<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"writeHandler.truncate error:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">error</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  writeHandler<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"writeHandler error:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">error</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment">// 4.只保留前n个字符:(n超过原字符长度，则并接在结尾)</span><span class="token keyword">do</span> <span class="token punctuation">{</span>  <span class="token keyword">let</span> writeHandler <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">FileHandle</span><span class="token punctuation">(</span>forWritingTo<span class="token punctuation">:</span> url<span class="token punctuation">)</span>  writeHandler<span class="token punctuation">.</span><span class="token function">truncateFile</span><span class="token punctuation">(</span>atOffset<span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">)</span>  writeHandler<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"writeHandler error:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">error</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="读取文件内容"><a href="#读取文件内容" class="headerlink" title="读取文件内容"></a>读取文件内容</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>documentURL<span class="token punctuation">.</span><span class="token function">appendingPathComponent</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"moxiaoyan/test1.txt"</span></span><span class="token punctuation">,</span> isDirectory<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment">// 方法1:</span><span class="token keyword">guard</span> <span class="token keyword">let</span> data <span class="token operator">=</span> manager<span class="token punctuation">.</span><span class="token function">contents</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> url<span class="token punctuation">.</span>path<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span><span class="token punctuation">}</span><span class="token keyword">let</span> readString <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> data<span class="token punctuation">,</span> encoding<span class="token punctuation">:</span> <span class="token punctuation">.</span>utf8<span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"方法1：</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">readString <span class="token operator">??</span> <span class="token string-literal"><span class="token string">""</span></span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment">// 方法2:</span><span class="token keyword">guard</span> <span class="token keyword">let</span> readHandler <span class="token operator">=</span> <span class="token class-name">FileHandle</span><span class="token punctuation">(</span>forReadingAtPath<span class="token punctuation">:</span> url<span class="token punctuation">.</span>path<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span><span class="token punctuation">}</span><span class="token keyword">guard</span> <span class="token keyword">let</span> data2<span class="token punctuation">:</span> <span class="token class-name">Data</span> <span class="token operator">=</span> readHandler<span class="token punctuation">.</span><span class="token function">readDataToEndOfFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span><span class="token punctuation">}</span><span class="token keyword">let</span> readString2 <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> data2<span class="token punctuation">,</span> encoding<span class="token punctuation">:</span> <span class="token punctuation">.</span>utf8<span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"方法2：</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">readString2 <span class="token operator">??</span> <span class="token string-literal"><span class="token string">""</span></span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> file1 <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>documentURL<span class="token punctuation">.</span><span class="token function">appendingPathComponent</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"moxiaoyan/test1.txt"</span></span><span class="token punctuation">)</span><span class="token keyword">let</span> file2 <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>documentURL<span class="token punctuation">.</span><span class="token function">appendingPathComponent</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"moxiaoyan/test2.txt"</span></span><span class="token punctuation">)</span><span class="token keyword">do</span> <span class="token punctuation">{</span>  <span class="token comment">// try manager.copyItem(at: file1, to: file2) // 直接复制文件</span>  <span class="token keyword">try</span> manager<span class="token punctuation">.</span><span class="token function">copyItem</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> file1<span class="token punctuation">.</span>path<span class="token punctuation">,</span> toPath<span class="token punctuation">:</span> file2<span class="token punctuation">.</span>path<span class="token punctuation">)</span> <span class="token comment">// 复制文件内容</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"copyItem error:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">error</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="移动文件"><a href="#移动文件" class="headerlink" title="移动文件"></a>移动文件</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>documentURL<span class="token punctuation">.</span><span class="token function">appendingPathComponent</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> isDirectory<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token keyword">let</span> file1 <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">appendingPathComponent</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"文件1:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">file1</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">let</span> file2 <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">appendingPathComponent</span><span class="token punctuation">(</span>to <span class="token operator">+</span> <span class="token string-literal"><span class="token string">"/test1.txt"</span></span><span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"文件2:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">file2</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">do</span> <span class="token punctuation">{</span>  <span class="token comment">// try manager.moveItem(atPath: file1.path, toPath: file2.path) // 直接拷贝文件</span>  <span class="token keyword">try</span> manager<span class="token punctuation">.</span><span class="token function">moveItem</span><span class="token punctuation">(</span>at<span class="token punctuation">:</span> file1<span class="token punctuation">,</span> to<span class="token punctuation">:</span> file2<span class="token punctuation">)</span> <span class="token comment">// 拷贝文件内容</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"moveItem error:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">error</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="比较文件"><a href="#比较文件" class="headerlink" title="比较文件"></a>比较文件</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> file1 <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>documentURL<span class="token punctuation">.</span><span class="token function">appendingPathComponent</span><span class="token punctuation">(</span>name1<span class="token punctuation">)</span><span class="token keyword">let</span> file2 <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>documentURL<span class="token punctuation">.</span><span class="token function">appendingPathComponent</span><span class="token punctuation">(</span>name2<span class="token punctuation">)</span><span class="token comment">// 参数必须的是路径（相同字符串false）</span><span class="token keyword">let</span> equal <span class="token operator">=</span> manager<span class="token punctuation">.</span><span class="token function">contentsEqual</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> file1<span class="token punctuation">.</span>path<span class="token punctuation">,</span> andPath<span class="token punctuation">:</span> file2<span class="token punctuation">.</span>path<span class="token punctuation">)</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"file1:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">file1</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"file2:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">file2</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"equal:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">equal</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
            <tag> file </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift字符串截取摘录</title>
      <link href="/posts/16775.html"/>
      <url>/posts/16775.html</url>
      
        <content type="html"><![CDATA[<h1 id="Swift字符串截取摘录"><a href="#Swift字符串截取摘录" class="headerlink" title="Swift字符串截取摘录"></a>Swift字符串截取摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Swift%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%88%AA%E5%8F%96%E6%91%98%E5%BD%95/Swift%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%88%AA%E5%8F%96%E6%91%98%E5%BD%95.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift 解决URL或参数中含有中文（Swift URL编码）</title>
      <link href="/posts/63894.html"/>
      <url>/posts/63894.html</url>
      
        <content type="html"><![CDATA[<h1 id="Swift-解决URL或参数中含有中文（Swift-URL编码）"><a href="#Swift-解决URL或参数中含有中文（Swift-URL编码）" class="headerlink" title="Swift 解决URL或参数中含有中文（Swift URL编码）"></a>Swift 解决URL或参数中含有中文（Swift URL编码）</h1><p>========================</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> encodeURLStr <span class="token operator">=</span> urlString<span class="token punctuation">.</span><span class="token function">addingPercentEncoding</span><span class="token punctuation">(</span>withAllowedCharacters<span class="token punctuation">:</span> <span class="token punctuation">.</span>urlQueryAllowed<span class="token punctuation">)</span><span class="token keyword">let</span> url <span class="token operator">=</span>  <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> encodeURLStr<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">get</span><span class="token punctuation">(</span> <span class="token omit keyword">_</span> url<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> parameters<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token punctuation">]</span> <span class="token punctuation">,</span> completionHandler<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token class-name">NSError</span><span class="token operator">?</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Void</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>      <span class="token keyword">var</span> urlStr <span class="token operator">=</span> url      <span class="token keyword">var</span> flag <span class="token operator">=</span> <span class="token boolean">true</span>      <span class="token keyword">let</span> generalDelimitersToEncode <span class="token operator">=</span> <span class="token string-literal"><span class="token string">":#[]@"</span></span> <span class="token comment">// does not include "?" or "/" due to RFC 3986 - Section 3.4</span>      <span class="token keyword">let</span> subDelimitersToEncode <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"!$&amp;'()*+,;="</span></span>      <span class="token keyword">var</span> allowedCharacterSet <span class="token operator">=</span> <span class="token class-name">CharacterSet</span><span class="token punctuation">.</span>urlQueryAllowed      allowedCharacterSet<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>charactersIn<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">generalDelimitersToEncode</span><span class="token interpolation-punctuation punctuation">)</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">subDelimitersToEncode</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span> key <span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token keyword">in</span> parameters <span class="token punctuation">{</span>         <span class="token keyword">var</span> anyValue<span class="token punctuation">:</span> <span class="token keyword">Any</span> <span class="token operator">=</span> value         <span class="token keyword">if</span> <span class="token keyword">let</span> value <span class="token operator">=</span> value <span class="token keyword">as</span><span class="token operator">?</span> <span class="token class-name">String</span><span class="token punctuation">{</span>            anyValue <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">addingPercentEncoding</span><span class="token punctuation">(</span>withAllowedCharacters<span class="token punctuation">:</span> allowedCharacterSet<span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token string-literal"><span class="token string">""</span></span>         <span class="token punctuation">}</span>         <span class="token keyword">if</span> flag<span class="token punctuation">{</span>            flag <span class="token operator">=</span> <span class="token boolean">false</span>            urlStr <span class="token operator">+=</span> <span class="token string-literal"><span class="token string">"?"</span></span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string-literal"><span class="token string">"=</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">anyValue</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span>         <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            urlStr <span class="token operator">+=</span> <span class="token string-literal"><span class="token string">"&amp;"</span></span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string-literal"><span class="token string">"=</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">anyValue</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span>         <span class="token punctuation">}</span>      <span class="token punctuation">}</span>      <span class="token keyword">if</span> <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> urlStr<span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token keyword">var</span> request <span class="token operator">=</span> <span class="token class-name">URLRequest</span><span class="token punctuation">(</span>url<span class="token punctuation">:</span> url<span class="token punctuation">)</span>         request<span class="token punctuation">.</span>cachePolicy <span class="token operator">=</span> <span class="token punctuation">.</span>reloadIgnoringLocalCacheData         <span class="token class-name">URLSession</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span><span class="token function">dataTask</span><span class="token punctuation">(</span>with<span class="token punctuation">:</span> request<span class="token punctuation">,</span> completionHandler<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> response<span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token keyword">in</span>            <span class="token keyword">if</span> <span class="token keyword">let</span> err <span class="token operator">=</span> err<span class="token punctuation">{</span>               <span class="token function">completionHandler</span><span class="token punctuation">(</span>err <span class="token keyword">as</span> <span class="token class-name">NSError</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span>null <span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token comment">//               if let json = try? JSONSerialization.jsonObject(with: data!, options: [.allowFragments, .mutableContainers , .mutableLeaves]) as? [String: Any]  {</span>               <span class="token keyword">if</span> <span class="token keyword">let</span> data <span class="token operator">=</span> data <span class="token punctuation">{</span>                  <span class="token keyword">let</span> json <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> data<span class="token punctuation">)</span>                  <span class="token keyword">guard</span> <span class="token keyword">let</span> code <span class="token operator">=</span> json<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"code"</span></span><span class="token punctuation">]</span><span class="token punctuation">.</span>int<span class="token punctuation">,</span>                     <span class="token keyword">let</span> msg <span class="token operator">=</span> json<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"msg"</span></span><span class="token punctuation">]</span><span class="token punctuation">.</span>string <span class="token keyword">else</span><span class="token punctuation">{</span>                        <span class="token function">completionHandler</span><span class="token punctuation">(</span><span class="token class-name">NSError</span><span class="token punctuation">(</span>domain<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">""</span></span><span class="token punctuation">,</span> code<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> userInfo<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span>null<span class="token punctuation">)</span>                        <span class="token keyword">return</span>                  <span class="token punctuation">}</span>                  <span class="token keyword">if</span> code  <span class="token operator">!=</span> <span class="token number">10000</span> <span class="token punctuation">{</span>                     <span class="token function">completionHandler</span><span class="token punctuation">(</span><span class="token class-name">NSError</span><span class="token punctuation">(</span>domain<span class="token punctuation">:</span> msg<span class="token punctuation">,</span> code<span class="token punctuation">:</span> code<span class="token punctuation">,</span> userInfo<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span>null <span class="token punctuation">)</span>                  <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                     <span class="token function">completionHandler</span><span class="token punctuation">(</span><span class="token nil constant">nil</span><span class="token punctuation">,</span> json<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"data"</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span>                  <span class="token punctuation">}</span>               <span class="token punctuation">}</span>            <span class="token punctuation">}</span>         <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span>   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从网络下载文件到App</title>
      <link href="/posts/10334.html"/>
      <url>/posts/10334.html</url>
      
        <content type="html"><![CDATA[<h1 id="从网络下载文件到App"><a href="#从网络下载文件到App" class="headerlink" title="从网络下载文件到App"></a>从网络下载文件到App</h1><p>========================</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">func</span> <span class="token function-definition function">downloadModels</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> path<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">]</span><span class="token punctuation">,</span> modelUrl<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token class-name">DispatchQueue</span><span class="token punctuation">.</span><span class="token function">global</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">async</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> str <span class="token keyword">in</span> path <span class="token punctuation">{</span>            <span class="token keyword">let</span> urlString <span class="token operator">=</span> modelUrl <span class="token operator">+</span> str            <span class="token keyword">let</span> encodeURLStr <span class="token operator">=</span> urlString<span class="token punctuation">.</span><span class="token function">addingPercentEncoding</span><span class="token punctuation">(</span>withAllowedCharacters<span class="token punctuation">:</span> <span class="token punctuation">.</span>urlQueryAllowed<span class="token punctuation">)</span>            <span class="token function">log</span><span class="token punctuation">(</span>encodeURLStr<span class="token punctuation">)</span>            <span class="token keyword">let</span> url <span class="token operator">=</span>  <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> encodeURLStr<span class="token punctuation">)</span>            <span class="token function">log</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>            <span class="token keyword">let</span> request <span class="token operator">=</span> <span class="token class-name">URLRequest</span><span class="token punctuation">(</span>url<span class="token punctuation">:</span> url<span class="token operator">!</span><span class="token punctuation">)</span>            <span class="token keyword">let</span> downloadTask <span class="token operator">=</span> <span class="token class-name">URLSession</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span><span class="token function">downloadTask</span><span class="token punctuation">(</span>with<span class="token punctuation">:</span> request<span class="token punctuation">,</span>                    completionHandler<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>location<span class="token punctuation">:</span> <span class="token constant">URL</span><span class="token operator">?</span><span class="token punctuation">,</span> <span class="token omit keyword">_</span><span class="token punctuation">:</span> <span class="token class-name">URLResponse</span><span class="token operator">?</span><span class="token punctuation">,</span> <span class="token omit keyword">_</span><span class="token punctuation">:</span> <span class="token class-name">Error</span><span class="token operator">?</span><span class="token punctuation">)</span>                    <span class="token operator">-&gt;</span> <span class="token class-name">Void</span> <span class="token keyword">in</span><span class="token comment">//                    let theUrl = NSHomeDirectory() + "/Documents/ThreeDModels" + str</span><span class="token comment">//                    let endRang = theUrl.range(of: "/" + theUrl.lastPathComponent)</span><span class="token comment">//                    let thePath = String(theUrl[..&lt;endRang!.lowerBound])</span>                    <span class="token keyword">let</span> name <span class="token operator">=</span> str<span class="token punctuation">.</span>lastPathComponent<span class="token punctuation">.</span><span class="token function">replacingOccurrences</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"."</span></span> <span class="token operator">+</span> str<span class="token punctuation">.</span>pathExtension<span class="token punctuation">)</span><span class="token punctuation">,</span> with<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">""</span></span><span class="token punctuation">)</span>                    <span class="token keyword">let</span> fileManager <span class="token operator">=</span> <span class="token class-name">FileManager</span><span class="token punctuation">.</span><span class="token keyword">default</span>                        <span class="token keyword">let</span> urls<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token constant">URL</span><span class="token punctuation">]</span> <span class="token operator">=</span> fileManager<span class="token punctuation">.</span><span class="token function">urls</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>documentDirectory<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>userDomainMask<span class="token punctuation">)</span>                        <span class="token keyword">let</span> documentURL <span class="token operator">=</span> urls<span class="token punctuation">.</span>first<span class="token operator">!</span>                        <span class="token keyword">let</span> endRang <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"/"</span></span> <span class="token operator">+</span> str<span class="token punctuation">.</span>lastPathComponent<span class="token punctuation">)</span>                        <span class="token keyword">let</span> documentName <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span><span class="token operator">..&lt;</span>endRang<span class="token operator">!</span><span class="token punctuation">.</span>lowerBound<span class="token punctuation">]</span><span class="token punctuation">)</span>                        <span class="token keyword">let</span> url <span class="token operator">=</span> documentURL<span class="token punctuation">.</span><span class="token function">appendingPathComponent</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"threeDModels"</span></span> <span class="token operator">+</span> documentName<span class="token punctuation">,</span> isDirectory<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span>                        <span class="token keyword">var</span> isDirectory<span class="token punctuation">:</span> <span class="token class-name">ObjCBool</span> <span class="token operator">=</span> <span class="token class-name">ObjCBool</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>                        <span class="token keyword">let</span> isExist <span class="token operator">=</span> fileManager<span class="token punctuation">.</span><span class="token function">fileExists</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> url<span class="token punctuation">.</span>path<span class="token punctuation">,</span> isDirectory<span class="token punctuation">:</span> <span class="token operator">&amp;</span>isDirectory<span class="token punctuation">)</span>                        <span class="token keyword">if</span> <span class="token operator">!</span>isExist <span class="token punctuation">{</span>                          <span class="token keyword">do</span> <span class="token punctuation">{</span>                            <span class="token keyword">try</span> fileManager<span class="token punctuation">.</span><span class="token function">createDirectory</span><span class="token punctuation">(</span>at<span class="token punctuation">:</span> url<span class="token punctuation">,</span> withIntermediateDirectories<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> attributes<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">)</span>                          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>                            <span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>                          <span class="token punctuation">}</span>                        <span class="token punctuation">}</span>                        <span class="token keyword">let</span> filePath <span class="token operator">=</span> url<span class="token punctuation">.</span>path <span class="token operator">+</span> <span class="token string-literal"><span class="token string">"/"</span></span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string-literal"><span class="token string">"."</span></span> <span class="token operator">+</span> str<span class="token punctuation">.</span>pathExtension                        <span class="token keyword">do</span> <span class="token punctuation">{</span>                            <span class="token keyword">if</span> fileManager<span class="token punctuation">.</span><span class="token function">fileExists</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> filePath <span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">try</span> fileManager<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> filePath<span class="token punctuation">)</span>                            <span class="token punctuation">}</span>                            <span class="token keyword">try</span> fileManager<span class="token punctuation">.</span><span class="token function">moveItem</span><span class="token punctuation">(</span>atPath<span class="token punctuation">:</span> location<span class="token operator">!</span><span class="token punctuation">.</span>path<span class="token punctuation">,</span> toPath<span class="token punctuation">:</span> filePath<span class="token punctuation">)</span>                        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>                            <span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span><span class="token punctuation">)</span>            downloadTask<span class="token punctuation">.</span><span class="token function">resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> network </tag>
            
            <tag> 三维模型 </tag>
            
            <tag> file </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSON解析摘录</title>
      <link href="/posts/36625.html"/>
      <url>/posts/36625.html</url>
      
        <content type="html"><![CDATA[<h1 id="JSON解析摘录"><a href="#JSON解析摘录" class="headerlink" title="JSON解析摘录"></a>JSON解析摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210403JSON%E8%A7%A3%E6%9E%90%E6%91%98%E5%BD%95/1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> JSON </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kingfisher简单使用</title>
      <link href="/posts/34152.html"/>
      <url>/posts/34152.html</url>
      
        <content type="html"><![CDATA[<h1 id="Kingfisher简单使用"><a href="#Kingfisher简单使用" class="headerlink" title="Kingfisher简单使用"></a>Kingfisher简单使用</h1><p>========================</p><h2 id="UIKit"><a href="#UIKit" class="headerlink" title="UIKit"></a>UIKit</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> url <span class="token operator">=</span> dataShare<span class="token punctuation">.</span><span class="token function">queryFromManyTable</span><span class="token punctuation">(</span>with<span class="token punctuation">:</span> modelName<span class="token punctuation">,</span> from<span class="token punctuation">:</span> <span class="token punctuation">[</span>dataShare<span class="token punctuation">.</span>cuturalRelicsIntroduction<span class="token punctuation">,</span>                                                                          dataShare<span class="token punctuation">.</span>models3DIntroduction<span class="token punctuation">,</span>                                                                          dataShare<span class="token punctuation">.</span>paintingModelsIntroduction<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span>image           objectImageView<span class="token punctuation">.</span>kf<span class="token punctuation">.</span>indicatorType <span class="token operator">=</span> <span class="token punctuation">.</span>activity           objectImageView<span class="token punctuation">.</span>kf<span class="token punctuation">.</span><span class="token function">setImage</span><span class="token punctuation">(</span>with<span class="token punctuation">:</span> <span class="token function">URL</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> url<span class="token punctuation">)</span><span class="token punctuation">)</span>           <span class="token comment">// 设置超时时间</span>           <span class="token keyword">let</span> downloader <span class="token operator">=</span> <span class="token class-name">KingfisherManager</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span>downloader           <span class="token comment">// 超时时间（秒）</span>           downloader<span class="token punctuation">.</span>downloadTimeout <span class="token operator">=</span> <span class="token number">50</span>                      <span class="token comment">// 获取缓存代销</span>           <span class="token keyword">let</span> cache <span class="token operator">=</span> <span class="token class-name">KingfisherManager</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span>cache           <span class="token comment">// 设置最大缓存为多少 100M  默认是无上限</span>           cache<span class="token punctuation">.</span>memoryStorage<span class="token punctuation">.</span>config<span class="token punctuation">.</span>totalCostLimit <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span>           <span class="token comment">// 设置保存时间 1天 默认5分钟</span>           cache<span class="token punctuation">.</span>memoryStorage<span class="token punctuation">.</span>config<span class="token punctuation">.</span>expiration <span class="token operator">=</span> <span class="token class-name">StorageExpiration</span><span class="token punctuation">.</span><span class="token function">seconds</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span>           cache<span class="token punctuation">.</span>diskStorage<span class="token punctuation">.</span>config<span class="token punctuation">.</span>sizeLimit <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span>           cache<span class="token punctuation">.</span>diskStorage<span class="token punctuation">.</span>config<span class="token punctuation">.</span>expiration <span class="token operator">=</span> <span class="token class-name">StorageExpiration</span><span class="token punctuation">.</span><span class="token function">days</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SwiftUI"><a href="#SwiftUI" class="headerlink" title="SwiftUI"></a>SwiftUI</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">KFImage</span><span class="token punctuation">(</span><span class="token function">URL</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> <span class="token class-name">Images</span><span class="token punctuation">.</span>help<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">diskCacheExpiration</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">days</span><span class="token punctuation">(</span><span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">aspectRatio</span><span class="token punctuation">(</span>contentMode<span class="token punctuation">:</span> <span class="token punctuation">.</span>fit<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">.</span>fitCGWidth<span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">.</span>fitCGWidth<span class="token punctuation">,</span> alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>center<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift高阶函数</title>
      <link href="/posts/22942.html"/>
      <url>/posts/22942.html</url>
      
        <content type="html"><![CDATA[<h1 id="Swift高阶函数"><a href="#Swift高阶函数" class="headerlink" title="Swift高阶函数"></a>Swift高阶函数</h1><p>========================</p><h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><h4 id="map-1"><a href="#map-1" class="headerlink" title="map"></a>map</h4><p><code>map</code>对于原始集合里的每一个元素, 以一个变换后的元素替换之形成一个新的集合</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> results <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token keyword">let</span> allResults <span class="token operator">=</span> results<span class="token punctuation">.</span>map<span class="token punctuation">{</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span>map<span class="token punctuation">{</span> <span class="token short-argument">$0</span> <span class="token operator">*</span> <span class="token number">10</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token function">print</span><span class="token punctuation">(</span>allResults<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>输出结果</p><pre class="line-numbers language-none"><code class="language-none">[10, 20, 30, 40, 50, 60, 70, 80, 90]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="flatMap"><a href="#flatMap" class="headerlink" title="flatMap"></a>flatMap</h4><p><code>flatMap</code>对于元素是集合的集合, 可以得到单级的集合</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> results <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token keyword">let</span> allResults <span class="token operator">=</span> results<span class="token punctuation">.</span>flatMap<span class="token punctuation">{</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span>map<span class="token punctuation">{</span> <span class="token short-argument">$0</span> <span class="token operator">*</span> <span class="token number">10</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token keyword">let</span> passMarks <span class="token operator">=</span> results<span class="token punctuation">.</span>flatMap<span class="token punctuation">{</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span>filter<span class="token punctuation">{</span> <span class="token short-argument">$0</span> <span class="token operator">&gt;</span> <span class="token number">5</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token function">print</span><span class="token punctuation">(</span>allResults<span class="token punctuation">)</span><span class="token function">print</span><span class="token punctuation">(</span>passMarks<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出结果</p><pre class="line-numbers language-none"><code class="language-none">[10, 20, 30, 40, 50, 60, 70, 80, 90][6, 7, 8, 9] <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="compactMap"><a href="#compactMap" class="headerlink" title="compactMap"></a>compactMap</h4><p><code>compactMap</code>过滤空值</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> keys<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token operator">?</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"Zhangsan"</span></span><span class="token punctuation">,</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Lisi"</span></span><span class="token punctuation">,</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Wawngwu"</span></span><span class="token punctuation">]</span><span class="token keyword">let</span> validNames <span class="token operator">=</span> keys<span class="token punctuation">.</span>compactMap<span class="token punctuation">{</span> <span class="token short-argument">$0</span> <span class="token punctuation">}</span><span class="token function">print</span><span class="token punctuation">(</span>validNames<span class="token punctuation">)</span><span class="token keyword">let</span> counts <span class="token operator">=</span> keys<span class="token punctuation">.</span>compactMap <span class="token punctuation">{</span> <span class="token short-argument">$0</span><span class="token operator">?</span><span class="token punctuation">.</span>count <span class="token punctuation">}</span><span class="token function">print</span><span class="token punctuation">(</span>counts<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出结果：</p><pre class="line-numbers language-none"><code class="language-none">["Zhangsan", "Lisi", "Wawngwu"][8, 4, 7]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h2><p><code>filter</code>对于原始集合里的每一个元素, 通过判定来将其丢弃或者放进新集合</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> numbers<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Int</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">]</span><span class="token function">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">.</span>filter<span class="token punctuation">{</span> <span class="token short-argument">$0</span> <span class="token operator">&gt;</span> <span class="token number">50</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>输出结果</p><pre class="line-numbers language-none"><code class="language-none">[60, 70, 80, 90]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h2><p><code>reduce</code>对于原始集合里的每一个元素, 作用与当前累积的结果上</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> numbers<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Int</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token function">print</span><span class="token punctuation">(</span>numbers<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token short-argument">$0</span> <span class="token operator">+</span> <span class="token short-argument">$1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>输出结果</p><pre class="line-numbers language-none"><code class="language-none">25<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift Self摘录</title>
      <link href="/posts/32945.html"/>
      <url>/posts/32945.html</url>
      
        <content type="html"><![CDATA[<h1 id="Swift-Self摘录"><a href="#Swift-Self摘录" class="headerlink" title="Swift Self摘录"></a>Swift Self摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210401SwiftSelf%E6%91%98%E5%BD%95/1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift Package摘录</title>
      <link href="/posts/50099.html"/>
      <url>/posts/50099.html</url>
      
        <content type="html"><![CDATA[<h1 id="Swift-Package摘录"><a href="#Swift-Package摘录" class="headerlink" title="Swift Package摘录"></a>Swift Package摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210401SwiftPackage%E6%91%98%E5%BD%95/SwiftPackage%E6%91%98%E5%BD%95.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift函数举例</title>
      <link href="/posts/47366.html"/>
      <url>/posts/47366.html</url>
      
        <content type="html"><![CDATA[<h1 id="Swift函数举例"><a href="#Swift函数举例" class="headerlink" title="Swift函数举例"></a>Swift函数举例</h1><p>========================<br>这里<code>tate, Request, RequestID, Event</code>都是泛型，函数的返回值为闭包<code>(ObservableSchedulerContext&lt;State&gt;) -&gt; Observable&lt;Event&gt; </code>，闭包<code>(State) -&gt; [RequestID: Request]</code>的返回值是一个字典</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token comment">/** State: State type of the system. Request: Subset of state used to control the feedback loop. For every uniquely identifiable request `effects` closure is invoked with the initial value of the request and future requests corresponding to the same identifier. Subsequent equal values of request are not emitted from the effects state parameter. - parameter requests: Requests to perform some effects. - parameter effects: The request effects. - parameter initial: Initial request. - parameter state: Latest request state. - returns: The feedback loop performing the effects. */</span><span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">react</span><span class="token operator">&lt;</span><span class="token class-name">State</span><span class="token punctuation">,</span> <span class="token class-name">Request</span><span class="token punctuation">:</span> <span class="token class-name">Equatable</span><span class="token punctuation">,</span> <span class="token class-name">RequestID</span><span class="token punctuation">,</span> <span class="token class-name">Event</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>    requests<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token class-name">State</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token class-name">RequestID</span><span class="token punctuation">:</span> <span class="token class-name">Request</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    effects<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token omit keyword">_</span> initial<span class="token punctuation">:</span> <span class="token class-name">Request</span><span class="token punctuation">,</span> <span class="token omit keyword">_</span> state<span class="token punctuation">:</span> <span class="token class-name">Observable</span><span class="token operator">&lt;</span><span class="token class-name">Request</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Observable</span><span class="token operator">&lt;</span><span class="token class-name">Event</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token class-name">ObservableSchedulerContext</span><span class="token operator">&lt;</span><span class="token class-name">State</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Observable</span><span class="token operator">&lt;</span><span class="token class-name">Event</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span> stateContext <span class="token keyword">in</span>        <span class="token class-name">Observable</span><span class="token punctuation">.</span>create <span class="token punctuation">{</span> observer <span class="token keyword">in</span>            <span class="token keyword">let</span> state <span class="token operator">=</span> <span class="token class-name">RequestLifetimeTracking</span><span class="token operator">&lt;</span><span class="token class-name">Request</span><span class="token punctuation">,</span> <span class="token class-name">RequestID</span><span class="token punctuation">,</span> <span class="token class-name">Event</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>                effects<span class="token punctuation">:</span> effects<span class="token punctuation">,</span>                scheduler<span class="token punctuation">:</span> stateContext<span class="token punctuation">.</span>scheduler<span class="token punctuation">,</span>                observer<span class="token punctuation">:</span> observer            <span class="token punctuation">)</span>            <span class="token keyword">let</span> subscription <span class="token operator">=</span> stateContext<span class="token punctuation">.</span>source                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>requests<span class="token punctuation">)</span>                <span class="token punctuation">.</span>subscribe <span class="token punctuation">{</span> event <span class="token keyword">in</span>                    <span class="token keyword">switch</span> event <span class="token punctuation">{</span>                    <span class="token keyword">case</span> <span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token keyword">let</span> requests<span class="token punctuation">)</span><span class="token punctuation">:</span>                        state<span class="token punctuation">.</span><span class="token function">forwardRequests</span><span class="token punctuation">(</span>requests<span class="token punctuation">)</span>                    <span class="token keyword">case</span> <span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token keyword">let</span> error<span class="token punctuation">)</span><span class="token punctuation">:</span>                        observer<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token keyword">case</span> <span class="token punctuation">.</span>completed<span class="token punctuation">:</span>                        observer<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token punctuation">.</span>completed<span class="token punctuation">)</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token keyword">return</span> <span class="token class-name">Disposables</span><span class="token punctuation">.</span>create <span class="token punctuation">{</span>                state<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                subscription<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>泛型WeakOwner继承AnyObject，这里where的条件限定函数的参数，与返回的闭包无关</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token comment">/** Bi-directional binding of a system State to external state machine and events from it. Strongify owner. */</span><span class="token keyword">public</span> <span class="token keyword">func</span> <span class="token function-definition function">bind</span><span class="token operator">&lt;</span><span class="token class-name">State</span><span class="token punctuation">,</span> <span class="token class-name">Event</span><span class="token punctuation">,</span> <span class="token class-name">WeakOwner</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> owner<span class="token punctuation">:</span> <span class="token class-name">WeakOwner</span><span class="token punctuation">,</span> <span class="token omit keyword">_</span> bindings<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token class-name">WeakOwner</span><span class="token punctuation">,</span> <span class="token class-name">ObservableSchedulerContext</span><span class="token operator">&lt;</span><span class="token class-name">State</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token class-name">Bindings</span><span class="token operator">&lt;</span><span class="token class-name">Event</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token class-name">ObservableSchedulerContext</span><span class="token operator">&lt;</span><span class="token class-name">State</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Observable</span><span class="token operator">&lt;</span><span class="token class-name">Event</span><span class="token operator">&gt;</span> <span class="token keyword">where</span> <span class="token class-name">WeakOwner</span><span class="token punctuation">:</span> <span class="token class-name">AnyObject</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">bind</span><span class="token punctuation">(</span><span class="token function">bindingsStrongify</span><span class="token punctuation">(</span>owner<span class="token punctuation">,</span> bindings<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Codable实现JSON转对象、对象转JSON</title>
      <link href="/posts/17329.html"/>
      <url>/posts/17329.html</url>
      
        <content type="html"><![CDATA[<h1 id="使用Codable实现JSON转对象、对象转JSON"><a href="#使用Codable实现JSON转对象、对象转JSON" class="headerlink" title="使用Codable实现JSON转对象、对象转JSON"></a>使用Codable实现JSON转对象、对象转JSON</h1><p>========================</p><p>先上代码，这里我是在Swift playground中运行，方便演示</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">UIKit</span><span class="token keyword">import</span> <span class="token class-name">Foundation</span><span class="token comment">// MARK: - Decode</span><span class="token keyword">struct</span> <span class="token class-name">User</span><span class="token punctuation">:</span> <span class="token class-name">Codable</span> <span class="token punctuation">{</span> <span class="token comment">// 基本类型组合默认遵守Codable协议</span>    <span class="token keyword">var</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> age<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">}</span><span class="token keyword">let</span> jsonStr <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"""{    "name": "Ryan",    "age": 18}"""</span></span><span class="token keyword">let</span> jsonData <span class="token operator">=</span> jsonStr<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>using<span class="token punctuation">:</span> <span class="token punctuation">.</span>utf8<span class="token punctuation">)</span><span class="token operator">!</span><span class="token keyword">let</span> decoder <span class="token operator">=</span> <span class="token class-name">JSONDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">do</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> userObj <span class="token operator">=</span> <span class="token keyword">try</span> decoder<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> from<span class="token punctuation">:</span> jsonData<span class="token punctuation">)</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"userObj = </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">userObj</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"decode error"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment">// MARK: - Encode</span><span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token class-name">User</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Lux"</span></span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token keyword">let</span> encoder <span class="token operator">=</span> <span class="token class-name">JSONEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">do</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">try</span> encoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>    <span class="token keyword">let</span> jsonStr <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> data<span class="token punctuation">,</span> encoding<span class="token punctuation">:</span> <span class="token punctuation">.</span>utf8<span class="token punctuation">)</span><span class="token operator">!</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"jsonStr = </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">jsonStr</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"encode error"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">struct</span> <span class="token class-name">Introduction</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span><span class="token punctuation">,</span> <span class="token class-name">Codable</span> <span class="token punctuation">{</span>   <span class="token keyword">var</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token keyword">var</span> idForDataBase<span class="token punctuation">:</span> <span class="token class-name">Int64</span>   <span class="token keyword">var</span> image<span class="token punctuation">:</span> <span class="token class-name">String</span>   <span class="token keyword">var</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span>   <span class="token keyword">var</span> text<span class="token punctuation">:</span> <span class="token class-name">String</span>   <span class="token comment">//这里的date原是想要展示日期，现在就用于当备注</span>   <span class="token keyword">var</span> date<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">I18n</span> <span class="token punctuation">{</span>    <span class="token keyword">class</span> <span class="token keyword">func</span> <span class="token function-definition function">localizedString</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> key<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>        <span class="token keyword">guard</span> <span class="token keyword">let</span> key <span class="token operator">=</span> key <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token string-literal"><span class="token string">""</span></span> <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token class-name">NSLocalizedString</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> tableName<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> bundle<span class="token punctuation">:</span> <span class="token class-name">Bundle</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">""</span></span><span class="token punctuation">,</span> comment<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">""</span></span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">let</span> culturalRelicsData <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token class-name">Introduction</span><span class="token punctuation">(</span>idForDataBase<span class="token punctuation">:</span> <span class="token class-name">Int64</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span><span class="token number">20210303063005</span><span class="token punctuation">)</span><span class="token punctuation">,</span> image<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"郎窑红釉穿带直口瓶"</span></span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"bottle"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"郎窑红釉穿带直口瓶，清康熙，高20.8cm，口径6.1cm，足径9.1cm。瓶直口，长颈，垂腹，圈足外撇。足外墙两侧各有一长方形穿孔，可穿系绳带。在容器上系带是对无梁、无系、无扳手的器物进行提拿的传统方法，拆卸容易而又非常实用，也可以使器物在摆放位置上固定，不致被损坏。"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> date<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"故宫镇馆之宝"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token class-name">Introduction</span><span class="token punctuation">(</span>idForDataBase<span class="token punctuation">:</span> <span class="token class-name">Int64</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span><span class="token number">20210303063006</span><span class="token punctuation">)</span><span class="token punctuation">,</span> image<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"张成造款雕漆云纹盒"</span></span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"box"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"张成是元代雕漆大家，其传世作品被一致认为是雕漆作品里的珍品。张成造款雕漆云纹盘为故宫漆器的代表作品。高3.3cm，口径19.2cm.盘木胎黑漆，内外均雕云纹。堆漆甚厚，晶莹照人，刻工圆润。从此件具款的剔犀圆盘可知张成不仅是剔红高手，剔犀技巧也精湛至极，此盘为研究元代剔犀工艺提供了实例。"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> date<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"故宫镇馆之宝"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token class-name">Introduction</span><span class="token punctuation">(</span>idForDataBase<span class="token punctuation">:</span> <span class="token class-name">Int64</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span><span class="token number">20210303063007</span><span class="token punctuation">)</span><span class="token punctuation">,</span> image<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"彩漆描金楼阁式自开门群仙祝寿御制钟"</span></span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"clock"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"黑漆彩绘楼阁群仙祝寿钟为故宫钟表的代表作。高185cm，面宽102cm，侧宽70cm.此钟共有7套机械系统，分别控制走时、报时、景箱内的活动装置等，技术水准相当高。根据记录，从乾隆八年接旨着手设计到十四年完工，历时五年多。"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> date<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"故宫镇馆之宝"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token class-name">Introduction</span><span class="token punctuation">(</span>idForDataBase<span class="token punctuation">:</span> <span class="token class-name">Int64</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span><span class="token number">20210303063008</span><span class="token punctuation">)</span><span class="token punctuation">,</span> image<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"乾隆款金瓯永固杯"</span></span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"cup"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"宫廷之宝乾隆款金瓯永固杯为故宫宫廷文物的代表作。高12.5厘米，口径8厘米，足高5厘米，口边刻有回纹。根据清“内务府活计档”记载，乾隆皇帝对此杯的制作十分重视，不仅调用内库黄金、珍珠、宝石等珍贵材料，而且精工细作，曾多次修改，直至皇帝满意为止。因此，该杯一直被清代皇帝视为珍贵的祖传法宝。"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> date<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"故宫镇馆之宝"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token class-name">Introduction</span><span class="token punctuation">(</span>idForDataBase<span class="token punctuation">:</span> <span class="token class-name">Int64</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span><span class="token number">20210303063009</span><span class="token punctuation">)</span><span class="token punctuation">,</span> image<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"掐丝珐琅缠枝莲纹象耳炉"</span></span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"ear_furnace"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"掐丝珐琅缠枝莲纹象耳炉，元，通高13.9cm，口径16cm，足径13.5cm。清宫旧藏。炉铜胎，圆形，鼓腹，象首卷鼻耳，圈足。炉颈部浅蓝釉地，饰黄、白、红、紫四色菊花12朵。腹部宝蓝釉地，饰红、白、黄三色掐丝珐琅缠枝莲花6朵。其下饰莲瓣纹一周。"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> date<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"故宫镇馆之宝"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token class-name">Introduction</span><span class="token punctuation">(</span>idForDataBase<span class="token punctuation">:</span> <span class="token class-name">Int64</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span><span class="token number">20210303063010</span><span class="token punctuation">)</span><span class="token punctuation">,</span> image<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"青玉云龙纹炉"</span></span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"grain_furnace"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"青玉云龙纹炉为故宫玉器的代表作品。宋代出品，高7.9cm，口径12.8cm.炉青玉质。通体以“工”字纹为底，上饰游龙、祥云和海水纹。器内底阴刻乾隆七言诗一首：“何年庙器赞天经，刻作飞龙殿四灵。毛伯邢侯异周制，祖丁父癸似商形。依然韫匵阅桑海，所惜从薪遇丙叮土气羊脂胥变幻，只余云水淡拖青。”"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> date<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"故宫镇馆之宝"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token class-name">Introduction</span><span class="token punctuation">(</span>idForDataBase<span class="token punctuation">:</span> <span class="token class-name">Int64</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span><span class="token number">20210303063011</span><span class="token punctuation">)</span><span class="token punctuation">,</span> image<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"清明上河图"</span></span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"painting"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"《清明上河图》为故宫书画代表作品，该画为张择端所作，以精致的工笔记录了北宋末叶、徽宗时代首都汴京(今开封)郊区和城内汴河两岸的建筑和民生。全图分为三个段落。作品以长卷形式，采用散点透视的构图法，将繁杂的景物纳入统一而富于变化的画面中。在5米多长的画卷里，共绘了550多个各色人物。"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> date<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"故宫镇馆之宝"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token class-name">Introduction</span><span class="token punctuation">(</span>idForDataBase<span class="token punctuation">:</span> <span class="token class-name">Int64</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span><span class="token number">20210303063012</span><span class="token punctuation">)</span><span class="token punctuation">,</span> image<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"平复帖"</span></span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"placard"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"西晋陆机的《平复帖》是故宫法帖的代表作品，也是目前存世最早的名人墨迹，内容为陆机向朋友问候疾病的书札。"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> date<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"故宫镇馆之宝"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token class-name">Introduction</span><span class="token punctuation">(</span>idForDataBase<span class="token punctuation">:</span> <span class="token class-name">Int64</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span><span class="token number">20210303063013</span><span class="token punctuation">)</span><span class="token punctuation">,</span> image<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"酗亚方尊"</span></span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"zun"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"青铜之宝酗亚方尊为故宫青铜器的代表作品。青铜器的产生是古代中国从野蛮时代走向文明时代的重要标志之一。尊是盛酒器，流行于商早期至春秋战国时期。方尊传世较少。上世纪70年代在山东益都苏埠屯出土了几件带有亚铭文的青铜器，从挖掘的墓穴来看，规模都不小，加上众多带有亚铭记的器物，说明它们所代表的可能是一个大族。"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> date<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"故宫镇馆之宝"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token class-name">Introduction</span><span class="token punctuation">(</span>idForDataBase<span class="token punctuation">:</span> <span class="token class-name">Int64</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span><span class="token number">20210303063014</span><span class="token punctuation">)</span><span class="token punctuation">,</span> image<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"沈子蕃缂丝《梅鹊图》轴"</span></span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"magpie"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"沈子蕃缂丝《梅鹊图》轴为故宫织绣的代表作品。图轴纵104cm，宽36cm.中国古代缂丝被认为是丝织工艺中最为高贵的品种，古人以“一寸缂丝一寸金”言缂丝作品之珍贵。缂丝之高贵，首先因其耗费工时巨大，以万缕千丝成其工巧，其次，缂技易学难精，虽摹缂书画，并非简单的照葫芦画瓢。"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> date<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"故宫镇馆之宝"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">let</span> encoder2 <span class="token operator">=</span> <span class="token class-name">JSONEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">do</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">try</span> encoder2<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>culturalRelicsData<span class="token punctuation">)</span>    <span class="token keyword">let</span> jsonStr <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> data<span class="token punctuation">,</span> encoding<span class="token punctuation">:</span> <span class="token punctuation">.</span>utf8<span class="token punctuation">)</span><span class="token operator">!</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"jsonStr = </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">jsonStr</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"encode error"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="JSON转对象"><a href="#JSON转对象" class="headerlink" title="JSON转对象"></a>JSON转对象</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E4%BD%BF%E7%94%A8Codable%E5%AE%9E%E7%8E%B0JSON%E8%BD%AC%E5%AF%B9%E8%B1%A1%E3%80%81%E5%AF%B9%E8%B1%A1%E8%BD%ACJSON/1.png"></p><h2 id="对象转JSON"><a href="#对象转JSON" class="headerlink" title="对象转JSON"></a>对象转JSON</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E4%BD%BF%E7%94%A8Codable%E5%AE%9E%E7%8E%B0JSON%E8%BD%AC%E5%AF%B9%E8%B1%A1%E3%80%81%E5%AF%B9%E8%B1%A1%E8%BD%ACJSON/2.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> 软件测试 </tag>
            
            <tag> JSON </tag>
            
            <tag> simulation </tag>
            
            <tag> data </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>借助github或其他网站的服务器模拟数据</title>
      <link href="/posts/16277.html"/>
      <url>/posts/16277.html</url>
      
        <content type="html"><![CDATA[<h1 id="借助github或其他网站的服务器模拟数据"><a href="#借助github或其他网站的服务器模拟数据" class="headerlink" title="借助github或其他网站的服务器模拟数据"></a>借助github或其他网站的服务器模拟数据</h1><p>========================</p><p>其实非常简单，假设要模拟JSON数据只要把json文件传到网站的服务器</p><h2 id="github举例"><a href="#github举例" class="headerlink" title="github举例"></a>github举例</h2><p>只需新建仓库或使用已有仓库或使用博客仓库等，把相应的json文件推送到远程仓库。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E5%80%9F%E5%8A%A9github%E6%88%96%E5%85%B6%E4%BB%96%E7%BD%91%E7%AB%99%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE/1.png"><br>而后就可以直接对着该json进行网络请求<a href="https://raw.githubusercontent.com/adong666666/adong666666.github.io/master/runinto/CulturalRelicsData.json">https://raw.githubusercontent.com/adong666666/adong666666.github.io/master/runinto/CulturalRelicsData.json</a><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E5%80%9F%E5%8A%A9github%E6%88%96%E5%85%B6%E4%BB%96%E7%BD%91%E7%AB%99%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE/2.png"></p><h2 id="博客举例"><a href="#博客举例" class="headerlink" title="博客举例"></a>博客举例</h2><p>把json文件放到博客源文件的目录或子目录下，这里我放在子目录runinto下<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E5%80%9F%E5%8A%A9github%E6%88%96%E5%85%B6%E4%BB%96%E7%BD%91%E7%AB%99%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE/3.png"><br>图片或其他资源也都放在博客源文件的目录或子目录下，这里我放在子目录image下<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E5%80%9F%E5%8A%A9github%E6%88%96%E5%85%B6%E4%BB%96%E7%BD%91%E7%AB%99%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE/4.png"><br>部署博客</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">zhangsaidong@zhangsaidongs-MacBook-Pro blog % hexo g <span class="token operator">&amp;&amp;</span> hexo dINFO  Validating configWARN  Deprecated config detected: <span class="token string">"external_link"</span> with a Boolean value is deprecated. See https://hexo.io/docs/configuration <span class="token keyword">for</span> <span class="token function">more</span> details.INFO  Start processingINFO  Files loaded <span class="token keyword">in</span> <span class="token number">594</span> msINFO  Deleted: json/CulturalRelicsIntroduction.jsonINFO  Generated: runinto/Models3DData.jsonINFO  Generated: runinto/CulturalRelicsData.jsonINFO  Generated: runinto/PaintingRomanceData.jsonINFO  Generated: runinto/StylePredictData.jsonINFO  Generated: runinto/IntroductionData.jsonINFO  Generated: runinto/PaintingModelsData.jsonINFO  Generated: books/index.htmlINFO  Generated: works/index.htmlINFO  Generated: <span class="token number">2021</span>/03/31/20210331Moya使用/index.htmlINFO  Generated: <span class="token number">2021</span>/03/31/20210331HandyJSON使用/index.htmlINFO  Generated: <span class="token number">2021</span>/03/31/20210331iOS开发之真机调试下查看本地沙盒数据摘录/index.htmlINFO  Generated: <span class="token number">2021</span>/03/20/20210320git发布tag/index.htmlINFO  Generated: <span class="token number">2021</span>/03/21/20210320Perfect部署到云服务器摘录/index.htmlINFO  Generated: <span class="token number">2021</span>/03/18/Mac命令行关闭端口/index.htmlINFO  Generated: <span class="token number">2021</span>/03/16/20210316Swift多线程/index.htmlINFO  Generated: <span class="token number">2019</span>/08/03/iOS-Localizable-strings/index.htmlINFO  Generated: about/index/resume.htmlINFO  Generated: archive/index.htmlINFO  Generated: archives/2019/index.htmlINFO  Generated: <span class="token number">2020</span>/09/30/学术论文——基于ARKit技术的文物交互式相机App的设计与实现/index.htmlINFO  Generated: <span class="token number">2019</span>/07/06/hello-world/index.htmlINFO  Generated: archives/2019/07/index.htmlINFO  Generated: archives/page/2/index.htmlINFO  Generated: archives/2020/index.htmlINFO  Generated: archives/2019/08/index.htmlINFO  Generated: archives/2021/03/index.htmlINFO  Generated: archives/2020/09/index.htmlINFO  Generated: archives/2021/index.htmlINFO  Generated: archives/2021/page/2/index.htmlINFO  Generated: archives/2021/03/page/2/index.htmlINFO  Generated: tags/iOS/index.htmlINFO  Generated: tags/多线程/index.htmlINFO  Generated: tags/Swift/index.htmlINFO  Generated: tags/博文/index.htmlINFO  Generated: tags/framework/index.htmlINFO  Generated: tags/server/index.htmlINFO  Generated: index.htmlINFO  Generated: tags/network/index.htmlINFO  Generated: page/2/index.htmlINFO  Generated: tags/软件测试/index.htmlINFO  Generated: tags/论文/index.htmlINFO  Generated: tags/git/index.htmlINFO  Generated: tags/DataBase/index.htmlINFO  Generated: about/index.htmlINFO  Generated: <span class="token number">2021</span>/03/22/20210322iOS之制作xcframework摘录/index.htmlINFO  Generated: archives/index.htmlINFO  Generated: tags/index.htmlINFO  Generated: <span class="token number">2021</span>/03/01/README/index.htmlINFO  Generated: <span class="token number">2021</span>/03/01/README.en/index.htmlINFO  Generated: <span class="token number">2021</span>/03/03/20210331SQLite.swift使用/index.htmlINFO  Generated: <span class="token number">2021</span>/03/27/20210327gitbook配置/index.htmlINFO  Generated: <span class="token number">2021</span>/03/20/Perfect部署到服务器工作记录/index.htmlINFO  <span class="token number">52</span> files generated <span class="token keyword">in</span> <span class="token number">157</span> msINFO  Validating configWARN  Deprecated config detected: <span class="token string">"external_link"</span> with a Boolean value is deprecated. See https://hexo.io/docs/configuration <span class="token keyword">for</span> <span class="token function">more</span> details.INFO  Deploying: <span class="token function">git</span>INFO  Clearing .deploy_git folder<span class="token punctuation">..</span>.INFO  Copying files from public folder<span class="token punctuation">..</span>.INFO  Copying files from extend dirs<span class="token punctuation">..</span>.<span class="token punctuation">[</span>master c336836<span class="token punctuation">]</span> Site updated: <span class="token number">2021</span>-03-31 <span class="token number">11</span>:58:37 <span class="token number">53</span> files changed, <span class="token number">466</span> insertions<span class="token punctuation">(</span>+<span class="token punctuation">)</span>, <span class="token number">1</span> deletion<span class="token punctuation">(</span>-<span class="token punctuation">)</span> delete mode <span class="token number">100644</span> json/CulturalRelicsIntroduction.json create mode <span class="token number">100644</span> runinto/CulturalRelicsData.json create mode <span class="token number">100644</span> runinto/IntroductionData.json create mode <span class="token number">100644</span> runinto/Models3DData.json create mode <span class="token number">100644</span> runinto/PaintingModelsData.json create mode <span class="token number">100644</span> runinto/PaintingRomanceData.json create mode <span class="token number">100644</span> runinto/StylePredictData.jsonEnumerating objects: <span class="token number">228</span>, done.Counting objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">228</span>/228<span class="token punctuation">)</span>, done.Delta compression using up to <span class="token number">16</span> threadsCompressing objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">84</span>/84<span class="token punctuation">)</span>, done.Writing objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">123</span>/123<span class="token punctuation">)</span>, <span class="token number">28.58</span> KiB <span class="token operator">|</span> <span class="token number">2.86</span> MiB/s, done.Total <span class="token number">123</span> <span class="token punctuation">(</span>delta <span class="token number">55</span><span class="token punctuation">)</span>, reused <span class="token number">0</span> <span class="token punctuation">(</span>delta <span class="token number">0</span><span class="token punctuation">)</span>remote: Resolving deltas: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">55</span>/55<span class="token punctuation">)</span>, completed with <span class="token number">38</span> <span class="token builtin class-name">local</span> objects.To https://github.com/adong666666/adong666666.github.io.git   03af415<span class="token punctuation">..</span>c336836  HEAD -<span class="token operator">&gt;</span> masterBranch <span class="token string">'master'</span> <span class="token builtin class-name">set</span> up to track remote branch <span class="token string">'master'</span> from <span class="token string">'https://github.com/adong666666/adong666666.github.io.git'</span><span class="token builtin class-name">.</span>INFO  Deploy done: <span class="token function">git</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将博客部署之后，就可以用对应url进行网络请求，如这里使用的是<a href="https://zsd.name/runinto/IntroductionData.json">https://zsd.name/runinto/IntroductionData.json</a><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E5%80%9F%E5%8A%A9github%E6%88%96%E5%85%B6%E4%BB%96%E7%BD%91%E7%AB%99%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE/5.png"><br>图片资源也可以拿到，如<a href="https://zsd.name/images/xinyi.jpg">https://zsd.name/images/xinyi.jpg</a><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331%E5%80%9F%E5%8A%A9github%E6%88%96%E5%85%B6%E4%BB%96%E7%BD%91%E7%AB%99%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE/6.png"><br>这便相当于有个现成的模拟服务器，各种软件开发，这样模拟数据是不是很轻松！</p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> server </tag>
            
            <tag> network </tag>
            
            <tag> 软件测试 </tag>
            
            <tag> JSON </tag>
            
            <tag> simulation </tag>
            
            <tag> data </tag>
            
            <tag> github </tag>
            
            <tag> Web </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HandyJSON使用</title>
      <link href="/posts/47851.html"/>
      <url>/posts/47851.html</url>
      
        <content type="html"><![CDATA[<h1 id="HandyJSON使用"><a href="#HandyJSON使用" class="headerlink" title="HandyJSON使用"></a>HandyJSON使用</h1><p>========================<br>我觉得看这代码就知道怎么用了，这个大都配合SwiftyJSON使用。</p><h2 id="模型示例"><a href="#模型示例" class="headerlink" title="模型示例"></a>模型示例</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token keyword">import</span> <span class="token class-name">Foundation</span><span class="token keyword">import</span> <span class="token class-name">ObjectMapper</span><span class="token keyword">import</span> <span class="token class-name">Then</span><span class="token keyword">import</span> <span class="token class-name">RxSwift</span><span class="token keyword">import</span> <span class="token class-name">RxCocoa</span><span class="token keyword">import</span> <span class="token class-name">HandyJSON</span><span class="token keyword">struct</span> <span class="token class-name">Introduction</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span><span class="token punctuation">,</span> <span class="token class-name">Decodable</span><span class="token punctuation">,</span> <span class="token class-name">Mappable</span><span class="token punctuation">,</span> <span class="token class-name">HandyJSON</span> <span class="token punctuation">{</span>    <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">init</span><span class="token operator">?</span><span class="token punctuation">(</span>map<span class="token punctuation">:</span> <span class="token class-name">Map</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">var</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> idForDataBase<span class="token punctuation">:</span> <span class="token class-name">Int64</span> <span class="token operator">=</span> <span class="token class-name">Int64</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> image<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> text<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">//这里的date原是想要展示日期，现在就用于当备注</span>    <span class="token keyword">var</span> date<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">init</span><span class="token punctuation">(</span>idForDataBase<span class="token punctuation">:</span> <span class="token class-name">Int64</span><span class="token punctuation">,</span> image<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> date<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">self</span><span class="token punctuation">.</span>idForDataBase <span class="token operator">=</span> idForDataBase        <span class="token keyword">self</span><span class="token punctuation">.</span>image <span class="token operator">=</span> image        <span class="token keyword">self</span><span class="token punctuation">.</span>title <span class="token operator">=</span> title        <span class="token keyword">self</span><span class="token punctuation">.</span>text <span class="token operator">=</span> text        <span class="token keyword">self</span><span class="token punctuation">.</span>date <span class="token operator">=</span> date    <span class="token punctuation">}</span>    <span class="token keyword">mutating</span> <span class="token keyword">func</span> <span class="token function-definition function">mapping</span><span class="token punctuation">(</span>map<span class="token punctuation">:</span> <span class="token class-name">Map</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        id <span class="token operator">&lt;-</span> map<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"id"</span></span><span class="token punctuation">]</span>        idForDataBase <span class="token operator">&lt;-</span> map<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"idForDataBase"</span></span><span class="token punctuation">]</span>        image <span class="token operator">&lt;-</span> map<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"image"</span></span><span class="token punctuation">]</span>        title <span class="token operator">&lt;-</span> map<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"title"</span></span><span class="token punctuation">]</span>        text <span class="token operator">&lt;-</span> map<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"text"</span></span><span class="token punctuation">]</span>        date <span class="token operator">&lt;-</span> map<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"date"</span></span><span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>//解析的话，只遵循HandyJSON协议即可，如下，这样就可以使用了：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">Foundation</span><span class="token keyword">import</span> <span class="token class-name">HandyJSON</span><span class="token keyword">struct</span> <span class="token class-name">Introduction</span><span class="token punctuation">:</span> <span class="token class-name">HandyJSON</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> idForDataBase <span class="token operator">=</span> <span class="token class-name">Int64</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> image<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> text<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> date<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><p>在合适的地方调用，这里主要是<code>JSONDeserializer&lt;Introduction&gt;.deserializeModelArrayFrom(json: culturalRelicsData.description)</code>使用了HandyJSON，不要太轻松。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token comment">//</span><span class="token comment">//  NetworkTool.swift</span><span class="token comment">//  RunInto</span><span class="token comment">//</span><span class="token comment">//  Created by 张赛东（手机：15674119605） on 2021/3/30.</span><span class="token comment">//  Copyright © 2021 adong666666. All rights reserved.</span><span class="token comment">//</span><span class="token comment">//swiftlint:disable void_return</span><span class="token keyword">import</span> <span class="token class-name">Foundation</span><span class="token keyword">import</span> <span class="token class-name">Alamofire</span><span class="token keyword">import</span> <span class="token class-name">SwiftyJSON</span><span class="token keyword">import</span> <span class="token class-name">HandyJSON</span><span class="token keyword">protocol</span> <span class="token class-name">NetworkToolProtocol</span> <span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">loadCulturalRelicsData</span><span class="token punctuation">(</span>input<span class="token punctuation">:</span> <span class="token class-name">IntroductionAPI</span><span class="token punctuation">,</span> completionHandler<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">Introduction</span><span class="token operator">?</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">extension</span> <span class="token class-name">NetworkToolProtocol</span> <span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">loadCulturalRelicsData</span><span class="token punctuation">(</span>input<span class="token punctuation">:</span> <span class="token class-name">IntroductionAPI</span><span class="token punctuation">,</span> completionHandler<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">Introduction</span><span class="token operator">?</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//        AF.request(culturalRelicsDataUrl, method: .get, parameters: [:]).responseJSON(completionHandler: { (response) in</span>        <span class="token comment">//            let value = response.value</span>        <span class="token comment">//            let json = JSON(value as Any)</span>        <span class="token comment">//            log(json)</span>        <span class="token comment">//        })</span>        introductionPovider<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token keyword">in</span>            <span class="token keyword">if</span> <span class="token keyword">case</span> <span class="token keyword">let</span> <span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token operator">=</span> result <span class="token punctuation">{</span>                <span class="token comment">//解析数据</span>                <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">?</span> response<span class="token punctuation">.</span><span class="token function">mapJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">let</span> json <span class="token operator">=</span> <span class="token function">JSON</span><span class="token punctuation">(</span>data<span class="token operator">!</span><span class="token punctuation">)</span>                <span class="token keyword">let</span> culturalRelicsData <span class="token operator">=</span> json<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"data"</span></span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"culturalRelicsData"</span></span><span class="token punctuation">]</span>                <span class="token comment">//log(json)</span>                <span class="token comment">//log(culturalRelicsData)</span>                <span class="token keyword">if</span> <span class="token keyword">let</span> mappedObject <span class="token operator">=</span> <span class="token class-name">JSONDeserializer</span><span class="token operator">&lt;</span><span class="token class-name">Introduction</span><span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token function">deserializeModelArrayFrom</span><span class="token punctuation">(</span>json<span class="token punctuation">:</span> culturalRelicsData<span class="token punctuation">.</span>description<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment">//log(mappedObject)</span>                    <span class="token comment">//log(mappedObject.count)</span>                    <span class="token function">completionHandler</span><span class="token punctuation">(</span>mappedObject<span class="token punctuation">)</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">struct</span> <span class="token class-name">NetworkTool</span><span class="token punctuation">:</span> <span class="token class-name">NetworkToolProtocol</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Moya使用</title>
      <link href="/posts/13900.html"/>
      <url>/posts/13900.html</url>
      
        <content type="html"><![CDATA[<h1 id="Moya使用"><a href="#Moya使用" class="headerlink" title="Moya使用"></a>Moya使用</h1><p>========================<br>我觉得看这代码就知道怎么用了，其实就是一个整理。</p><h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token comment">//</span><span class="token comment">//  IntroductionAPI.swift</span><span class="token comment">//  RunInto</span><span class="token comment">//</span><span class="token comment">//  Created by 张赛东（手机：15674119605） on 2021/3/30.</span><span class="token comment">//  Copyright © 2021 adong666666. All rights reserved.</span><span class="token comment">//</span><span class="token comment">// swiftlint:disable identifier_name</span><span class="token keyword">import</span> <span class="token class-name">Foundation</span><span class="token keyword">import</span> <span class="token class-name">Moya</span><span class="token keyword">import</span> <span class="token class-name">HandyJSON</span><span class="token keyword">let</span> ip <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"http://47.119.162.99"</span></span><span class="token keyword">let</span> culturalRelicsDataUrl <span class="token operator">=</span> ip <span class="token operator">+</span> <span class="token string-literal"><span class="token string">"/runinto/culturalRelicsData"</span></span><span class="token keyword">let</span> models3DDataUrl <span class="token operator">=</span> ip <span class="token operator">+</span>  <span class="token string-literal"><span class="token string">"/runinto/models3DData"</span></span><span class="token keyword">let</span> introductionDataUrl <span class="token operator">=</span> ip <span class="token operator">+</span> <span class="token string-literal"><span class="token string">"/runinto/introductionData"</span></span><span class="token keyword">let</span> paintingModeslDataUrl <span class="token operator">=</span> ip <span class="token operator">+</span> <span class="token string-literal"><span class="token string">"/runinto/paintingModelsData"</span></span><span class="token keyword">let</span> paintinggRomanceDataUrl <span class="token operator">=</span> ip <span class="token operator">+</span> <span class="token string-literal"><span class="token string">"/runinto/paintingRomanceData"</span></span><span class="token keyword">let</span> stylePredictDataUrl <span class="token operator">=</span> ip <span class="token operator">+</span> <span class="token string-literal"><span class="token string">"/runinto/stylePredictData"</span></span><span class="token comment">/// 介绍接口</span><span class="token keyword">let</span> introductionPovider <span class="token operator">=</span> <span class="token class-name">MoyaProvider</span><span class="token operator">&lt;</span><span class="token class-name">IntroductionAPI</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">enum</span> <span class="token class-name">IntroductionAPI</span> <span class="token punctuation">{</span>    <span class="token keyword">case</span> culturalRelicsData    <span class="token keyword">case</span> models3DData    <span class="token keyword">case</span> introductionData    <span class="token keyword">case</span> paintingModeslData    <span class="token keyword">case</span> paintinggRomanceData    <span class="token keyword">case</span> stylePredictData<span class="token punctuation">}</span><span class="token keyword">extension</span> <span class="token class-name">IntroductionAPI</span><span class="token punctuation">:</span> <span class="token class-name">TargetType</span> <span class="token punctuation">{</span>    <span class="token comment">//服务器地址</span>    <span class="token keyword">public</span> <span class="token keyword">var</span> baseURL<span class="token punctuation">:</span> <span class="token constant">URL</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">URL</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> ip<span class="token punctuation">)</span><span class="token operator">!</span>    <span class="token punctuation">}</span>        <span class="token keyword">var</span> path<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>        <span class="token keyword">switch</span> <span class="token keyword">self</span> <span class="token punctuation">{</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>culturalRelicsData<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string-literal"><span class="token string">"/runinto/culturalRelicsData"</span></span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>models3DData<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string-literal"><span class="token string">"/runinto/models3DData"</span></span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>introductionData<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string-literal"><span class="token string">"/runinto/introductionData"</span></span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>paintingModeslData<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string-literal"><span class="token string">"/runinto/paintingModelsData"</span></span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>paintinggRomanceData<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string-literal"><span class="token string">"/runinto/paintingRomanceData"</span></span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>stylePredictData<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string-literal"><span class="token string">"/runinto/stylePredictData"</span></span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>        <span class="token keyword">var</span> method<span class="token punctuation">:</span> <span class="token class-name">Moya</span><span class="token punctuation">.</span><span class="token class-name">Method</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">.</span><span class="token keyword">get</span> <span class="token punctuation">}</span>    <span class="token keyword">var</span> task<span class="token punctuation">:</span> <span class="token class-name">Task</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> parameters<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span>        <span class="token keyword">return</span> <span class="token punctuation">.</span><span class="token function">requestParameters</span><span class="token punctuation">(</span>parameters<span class="token punctuation">:</span> parameters<span class="token punctuation">,</span> encoding<span class="token punctuation">:</span> <span class="token class-name">URLEncoding</span><span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>        <span class="token keyword">var</span> sampleData<span class="token punctuation">:</span> <span class="token class-name">Data</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token string-literal"><span class="token string">""</span></span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>using<span class="token punctuation">:</span> <span class="token punctuation">.</span>utf8<span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">}</span>    <span class="token keyword">var</span> headers<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">]</span><span class="token operator">?</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token nil constant">nil</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><p>在合适的地方调用，<code>mapJSON()</code>也是Moya里的函数。<code>JSON()</code>则是SwiftyJSON里的常用函数</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token comment">//</span><span class="token comment">//  NetworkTool.swift</span><span class="token comment">//  RunInto</span><span class="token comment">//</span><span class="token comment">//  Created by 张赛东（手机：15674119605） on 2021/3/30.</span><span class="token comment">//  Copyright © 2021 adong666666. All rights reserved.</span><span class="token comment">//</span><span class="token comment">//swiftlint:disable void_return</span><span class="token keyword">import</span> <span class="token class-name">Foundation</span><span class="token keyword">import</span> <span class="token class-name">Alamofire</span><span class="token keyword">import</span> <span class="token class-name">SwiftyJSON</span><span class="token keyword">import</span> <span class="token class-name">HandyJSON</span><span class="token keyword">protocol</span> <span class="token class-name">NetworkToolProtocol</span> <span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">loadCulturalRelicsData</span><span class="token punctuation">(</span>input<span class="token punctuation">:</span> <span class="token class-name">IntroductionAPI</span><span class="token punctuation">,</span> completionHandler<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">Introduction</span><span class="token operator">?</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">extension</span> <span class="token class-name">NetworkToolProtocol</span> <span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">loadCulturalRelicsData</span><span class="token punctuation">(</span>input<span class="token punctuation">:</span> <span class="token class-name">IntroductionAPI</span><span class="token punctuation">,</span> completionHandler<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">Introduction</span><span class="token operator">?</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//        AF.request(culturalRelicsDataUrl, method: .get, parameters: [:]).responseJSON(completionHandler: { (response) in</span>        <span class="token comment">//            let value = response.value</span>        <span class="token comment">//            let json = JSON(value as Any)</span>        <span class="token comment">//            log(json)</span>        <span class="token comment">//        })</span>        introductionPovider<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token keyword">in</span>            <span class="token keyword">if</span> <span class="token keyword">case</span> <span class="token keyword">let</span> <span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token operator">=</span> result <span class="token punctuation">{</span>                <span class="token comment">//解析数据</span>                <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">?</span> response<span class="token punctuation">.</span><span class="token function">mapJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">let</span> json <span class="token operator">=</span> <span class="token function">JSON</span><span class="token punctuation">(</span>data<span class="token operator">!</span><span class="token punctuation">)</span>                <span class="token keyword">let</span> culturalRelicsData <span class="token operator">=</span> json<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"data"</span></span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"culturalRelicsData"</span></span><span class="token punctuation">]</span>                <span class="token comment">//log(json)</span>                <span class="token comment">//log(culturalRelicsData)</span>                <span class="token keyword">if</span> <span class="token keyword">let</span> mappedObject <span class="token operator">=</span> <span class="token class-name">JSONDeserializer</span><span class="token operator">&lt;</span><span class="token class-name">Introduction</span><span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token function">deserializeModelArrayFrom</span><span class="token punctuation">(</span>json<span class="token punctuation">:</span> culturalRelicsData<span class="token punctuation">.</span>description<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment">//log(mappedObject)</span>                    <span class="token comment">//log(mappedObject.count)</span>                    <span class="token function">completionHandler</span><span class="token punctuation">(</span>mappedObject<span class="token punctuation">)</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">struct</span> <span class="token class-name">NetworkTool</span><span class="token punctuation">:</span> <span class="token class-name">NetworkToolProtocol</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS开发之真机和模拟器查看本地沙盒数据摘录</title>
      <link href="/posts/1671.html"/>
      <url>/posts/1671.html</url>
      
        <content type="html"><![CDATA[<h1 id="iOS开发之真机和模拟器查看本地沙盒数据摘录"><a href="#iOS开发之真机和模拟器查看本地沙盒数据摘录" class="headerlink" title="iOS开发之真机和模拟器查看本地沙盒数据摘录"></a>iOS开发之真机和模拟器查看本地沙盒数据摘录</h1><p>========================</p><p>我主要是想看看真机下的数据库文件。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331iOS%E5%BC%80%E5%8F%91%E4%B9%8B%E7%9C%9F%E6%9C%BA%E5%92%8C%E6%A8%A1%E6%8B%9F%E5%99%A8%E6%9F%A5%E7%9C%8B%E6%9C%AC%E5%9C%B0%E6%B2%99%E7%9B%92%E6%95%B0%E6%8D%AE%E6%91%98%E5%BD%95/iOS%E5%BC%80%E5%8F%91%E4%B9%8B%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E4%B8%8B%E6%9F%A5%E7%9C%8B%E6%9C%AC%E5%9C%B0%E6%B2%99%E7%9B%92%E6%95%B0%E6%8D%AE.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331iOS%E5%BC%80%E5%8F%91%E4%B9%8B%E7%9C%9F%E6%9C%BA%E5%92%8C%E6%A8%A1%E6%8B%9F%E5%99%A8%E6%9F%A5%E7%9C%8B%E6%9C%AC%E5%9C%B0%E6%B2%99%E7%9B%92%E6%95%B0%E6%8D%AE%E6%91%98%E5%BD%95/1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> 软件测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitbook配置</title>
      <link href="/posts/13006.html"/>
      <url>/posts/13006.html</url>
      
        <content type="html"><![CDATA[<h1 id="gitbook配置"><a href="#gitbook配置" class="headerlink" title="gitbook配置"></a>gitbook配置</h1><p>========================</p><p>首先请看我配置的gitbook，这里是搬了一个RxSwift的中文教程过来。</p><h2 id="gitbook网址：https-3440217568-gitbook-io-rxswift"><a href="#gitbook网址：https-3440217568-gitbook-io-rxswift" class="headerlink" title="gitbook网址：https://3440217568.gitbook.io/rxswift/"></a>gitbook网址：<a href="https://3440217568.gitbook.io/rxswift/">https://3440217568.gitbook.io/rxswift/</a></h2><h2 id="使用的教程"><a href="#使用的教程" class="headerlink" title="使用的教程"></a>使用的教程</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210327gitbook%E9%85%8D%E7%BD%AE/1.png"></p><h2 id="解决“-cb-apply不是函数”错误"><a href="#解决“-cb-apply不是函数”错误" class="headerlink" title="解决“ cb.apply不是函数”错误"></a>解决“ cb.apply不是函数”错误</h2><p>在安装gitbook时，由于mac上的node版本较新，出现了bug，根据下面的文章，我注释了三行代码，解决了这个问题。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210327gitbook%E9%85%8D%E7%BD%AE/2.png"></p><h2 id="为gitbook配置github仓库"><a href="#为gitbook配置github仓库" class="headerlink" title="为gitbook配置github仓库"></a>为gitbook配置github仓库</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210327gitbook%E9%85%8D%E7%BD%AE/3.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210327gitbook%E9%85%8D%E7%BD%AE/4.png"></p><h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>我的域名之前绑定了博客，再绑定这个gitbook估计又得折腾一阵了，所以我暂时先用这个网址<a href="https://3440217568.gitbook.io/rxswift/">https://3440217568.gitbook.io/rxswift/</a>，其实我觉得不一定非得自定义域名。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210327gitbook%E9%85%8D%E7%BD%AE/5.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210327gitbook%E9%85%8D%E7%BD%AE/6.png"></p><h2 id="成果图"><a href="#成果图" class="headerlink" title="成果图"></a>成果图</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210327gitbook%E9%85%8D%E7%BD%AE/7.png"></p><h2 id="工作记录"><a href="#工作记录" class="headerlink" title="工作记录"></a>工作记录</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Last login: Fri Mar <span class="token number">26</span> <span class="token number">11</span>:38:08 on ttys002zhangsaidong@zhangsaidongs-MacBook-Pro ~ % gitbook -VCLI version: <span class="token number">2.3</span>.2Installing GitBook <span class="token number">3.2</span>.3  SOLINK_MODULE<span class="token punctuation">(</span>target<span class="token punctuation">)</span> Release/.node  CXX<span class="token punctuation">(</span>target<span class="token punctuation">)</span> Release/obj.target/fse/fsevents.o  SOLINK_MODULE<span class="token punctuation">(</span>target<span class="token punctuation">)</span> Release/fse.node  SOLINK_MODULE<span class="token punctuation">(</span>target<span class="token punctuation">)</span> Release/.node  CXX<span class="token punctuation">(</span>target<span class="token punctuation">)</span> Release/obj.target/fse/fsevents.o  SOLINK_MODULE<span class="token punctuation">(</span>target<span class="token punctuation">)</span> Release/fse.node/usr/local/lib/node_modules/gitbook-cli/node_modules/npm/node_modules/graceful-fs/polyfills.js:287      <span class="token keyword">if</span> <span class="token punctuation">(</span>cb<span class="token punctuation">)</span> cb.apply<span class="token punctuation">(</span>this, arguments<span class="token punctuation">)</span>                 ^TypeError: cb.apply is not a <span class="token keyword">function</span>    at /usr/local/lib/node_modules/gitbook-cli/node_modules/npm/node_modules/graceful-fs/polyfills.js:287:18    at FSReqCallback.oncomplete <span class="token punctuation">(</span>fs.js:184:5<span class="token punctuation">)</span>zhangsaidong@zhangsaidongs-MacBook-Pro ~ % <span class="token function">open</span> /usr/local/lib/node_modules/gitbook-cli/node_modules/npm/node_modules/graceful-fs/polyfills.jszhangsaidong@zhangsaidongs-MacBook-Pro ~ % gitbook -VCLI version: <span class="token number">2.3</span>.2Installing GitBook <span class="token number">3.2</span>.3  SOLINK_MODULE<span class="token punctuation">(</span>target<span class="token punctuation">)</span> Release/.node  CXX<span class="token punctuation">(</span>target<span class="token punctuation">)</span> Release/obj.target/fse/fsevents.o  SOLINK_MODULE<span class="token punctuation">(</span>target<span class="token punctuation">)</span> Release/fse.node  SOLINK_MODULE<span class="token punctuation">(</span>target<span class="token punctuation">)</span> Release/.node  CXX<span class="token punctuation">(</span>target<span class="token punctuation">)</span> Release/obj.target/fse/fsevents.o  SOLINK_MODULE<span class="token punctuation">(</span>target<span class="token punctuation">)</span> Release/fse.nodegitbook@3.2.3 <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/var/folders/6l/1l7ck2ln26l__7d011xpj3q00000gn/T/tmp-84437JZNGqeaPKI2p/node_modules/gitbook├── escape-html@1.0.3├── escape-string-regexp@1.0.5├── destroy@1.0.4├── ignore@3.1.2├── bash-color@0.0.4├── gitbook-plugin-livereload@0.0.1├── graceful-fs@4.1.4├── nunjucks-do@1.0.0├── cp@0.2.0├── github-slugid@1.0.1├── direction@0.1.5├── q@1.4.1├── spawn-cmd@0.0.2├── gitbook-plugin-fontsettings@2.0.0├── open@0.0.5├── is@3.3.0├── object-path@0.9.2├── extend@3.0.2├── json-schema-defaults@0.1.1├── gitbook-plugin-search@2.2.1├── jsonschema@1.1.0├── crc@3.4.0├── semver@5.1.0├── urijs@1.18.0├── immutable@3.8.2├── front-matter@2.3.0├── omit-keys@0.1.0 <span class="token punctuation">(</span>isobject@0.2.0, array-difference@0.0.1<span class="token punctuation">)</span>├── error@7.0.2 <span class="token punctuation">(</span>xtend@4.0.2, string-template@0.2.1<span class="token punctuation">)</span>├── npmi@2.0.1 <span class="token punctuation">(</span>semver@4.3.6<span class="token punctuation">)</span>├── tmp@0.0.28 <span class="token punctuation">(</span>os-tmpdir@1.0.2<span class="token punctuation">)</span>├── send@0.13.2 <span class="token punctuation">(</span>fresh@0.3.0, etag@1.7.0, range-parser@1.0.3, statuses@1.2.1, ms@0.7.1, depd@1.1.2, mime@1.3.4, debug@2.2.0, http-errors@1.3.1, on-finished@2.3.0<span class="token punctuation">)</span>├── mkdirp@0.5.1 <span class="token punctuation">(</span>minimist@0.0.8<span class="token punctuation">)</span>├── dom-serializer@0.1.0 <span class="token punctuation">(</span>domelementtype@1.1.3, entities@1.1.2<span class="token punctuation">)</span>├── resolve@1.1.7├── rmdir@1.2.0 <span class="token punctuation">(</span>node.flow@1.2.3<span class="token punctuation">)</span>├── fresh-require@1.0.3 <span class="token punctuation">(</span>is-require@0.0.1, shallow-copy@0.0.1, sleuth@0.1.1, astw@1.3.0, through2@0.6.5, escodegen@1.14.3, acorn@0.9.0<span class="token punctuation">)</span>├── cpr@1.1.1 <span class="token punctuation">(</span>rimraf@2.4.5<span class="token punctuation">)</span>├── js-yaml@3.14.1 <span class="token punctuation">(</span>esprima@4.0.1, argparse@1.0.10<span class="token punctuation">)</span>├── gitbook-plugin-theme-default@1.0.7├── tiny-lr@0.2.1 <span class="token punctuation">(</span>parseurl@1.3.3, livereload-js@2.4.0, qs@5.1.0, debug@2.2.0, body-parser@1.14.2, faye-websocket@0.10.0<span class="token punctuation">)</span>├── gitbook-plugin-lunr@1.2.0 <span class="token punctuation">(</span>html-entities@1.2.0, lunr@0.5.12<span class="token punctuation">)</span>├── chokidar@1.5.0 <span class="token punctuation">(</span>async-each@1.0.3, path-is-absolute@1.0.1, inherits@2.0.4, glob-parent@2.0.0, is-glob@2.0.1, is-binary-path@1.0.1, anymatch@1.3.2, fsevents@1.2.13, readdirp@2.2.1<span class="token punctuation">)</span>├── gitbook-plugin-highlight@2.0.2 <span class="token punctuation">(</span>highlight.js@9.2.0<span class="token punctuation">)</span>├── moment@2.13.0├── read-installed@4.0.3 <span class="token punctuation">(</span>debuglog@1.0.1, util-extend@1.0.3, slide@1.1.6, readdir-scoped-modules@1.1.0, read-package-json@2.1.2<span class="token punctuation">)</span>├── gitbook-plugin-sharing@1.0.2 <span class="token punctuation">(</span>lodash@3.10.1<span class="token punctuation">)</span>├── nunjucks@2.5.2 <span class="token punctuation">(</span>asap@2.0.6, yargs@3.32.0, chokidar@1.7.0<span class="token punctuation">)</span>├── i18n-t@1.0.1 <span class="token punctuation">(</span>lodash@4.17.21<span class="token punctuation">)</span>├── cheerio@0.20.0 <span class="token punctuation">(</span>entities@1.1.2, css-select@1.2.0, htmlparser2@3.8.3, jsdom@7.2.2, lodash@4.17.21<span class="token punctuation">)</span>├── gitbook-asciidoc@1.2.2 <span class="token punctuation">(</span>gitbook-html@1.3.3, asciidoctor.js@1.5.5-1, lodash@4.17.21<span class="token punctuation">)</span>├── gitbook-markdown@1.3.2 <span class="token punctuation">(</span>kramed-text-renderer@0.2.1, gitbook-html@1.3.3, kramed@0.5.6, lodash@4.17.21<span class="token punctuation">)</span>├── request@2.72.0 <span class="token punctuation">(</span>tunnel-agent@0.4.3, aws-sign2@0.6.0, forever-agent@0.6.1, oauth-sign@0.8.2, caseless@0.11.0, is-typedarray@1.0.0, stringstream@0.0.6, aws4@1.11.0, isstream@0.1.2, json-stringify-safe@5.0.1, tough-cookie@2.2.2, node-uuid@1.4.8, qs@6.1.2, combined-stream@1.0.8, mime-types@2.1.29, bl@1.1.2, hawk@3.1.3, har-validator@2.0.6, http-signature@1.1.1, form-data@1.0.1<span class="token punctuation">)</span>├── juice@2.0.0 <span class="token punctuation">(</span>deep-extend@0.4.2, slick@1.12.2, batch@0.5.3, cssom@0.3.1, commander@2.9.0, cross-spawn-async@2.2.5, web-resource-inliner@2.0.0<span class="token punctuation">)</span>└── npm@3.9.2GitBook version: <span class="token number">3.2</span>.3zhangsaidong@zhangsaidongs-MacBook-Pro ~ % <span class="token builtin class-name">cd</span> /Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbookzhangsaidong@zhangsaidongs-MacBook-Pro gitbook % gitbook initwarn: no summary <span class="token function">file</span> <span class="token keyword">in</span> this book info: create README.md info: create SUMMARY.md TypeError <span class="token punctuation">[</span>ERR_INVALID_ARG_TYPE<span class="token punctuation">]</span>: The <span class="token string">"data"</span> argument must be of <span class="token builtin class-name">type</span> string or an instance of Buffer, TypedArray, or DataView. Received an instance of Promisezhangsaidong@zhangsaidongs-MacBook-Pro gitbook % gitbook serveLive reload server started on port: <span class="token number">35729</span>Press CTRL+C to quit <span class="token punctuation">..</span>.info: <span class="token number">7</span> plugins are installed info: loading plugin <span class="token string">"livereload"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"highlight"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"search"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"lunr"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"sharing"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"fontsettings"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"theme-default"</span><span class="token punctuation">..</span>. OK info: found <span class="token number">1</span> pages info: found <span class="token number">0</span> asset files info: <span class="token operator">&gt;&gt;</span> generation finished with success <span class="token keyword">in</span> <span class="token number">0</span>.3s <span class="token operator">!</span> Starting server <span class="token punctuation">..</span>.Serving book on http://localhost:4000Restart after change <span class="token keyword">in</span> <span class="token function">file</span> book.jsonStopping serverinfo: <span class="token number">7</span> plugins are installed info: <span class="token number">21</span> explicitly listed Error: Couldn<span class="token string">'t locate plugins "jsbin, anchors, video, ga, toggle-chapters, editlink, include-codeblock, splitter, github-buttons, chart, todo, quiz, include-highlight, tonic", Run '</span>gitbook <span class="token function">install</span><span class="token string">' to install plugins from registry.zhangsaidong@zhangsaidongs-MacBook-Pro gitbook % gitbook serveLive reload server started on port: 35729Press CTRL+C to quit ...info: 7 plugins are installed info: 21 explicitly listed Error: Couldn'</span>t <span class="token function">locate</span> plugins <span class="token string">"jsbin, anchors, video, ga, toggle-chapters, editlink, include-codeblock, splitter, github-buttons, chart, todo, quiz, include-highlight, tonic"</span>, Run <span class="token string">'gitbook install'</span> to <span class="token function">install</span> plugins from registry.zhangsaidong@zhangsaidongs-MacBook-Pro gitbook % gitbook <span class="token function">install</span> ./info: installing <span class="token number">14</span> plugins using npm@3.9.2 info:  info: installing plugin <span class="token string">"jsbin"</span> info: <span class="token function">install</span> plugin <span class="token string">"jsbin"</span> <span class="token punctuation">(</span>*<span class="token punctuation">)</span> from NPM with version <span class="token number">0.0</span>.12 /Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook└── gitbook-plugin-jsbin@0.0.12 info: <span class="token operator">&gt;&gt;</span> plugin <span class="token string">"jsbin"</span> installed with success info:  info: installing plugin <span class="token string">"anchors"</span> runTopLevelLifecycles → <span class="token number">2</span> ▄ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├─┬ gitbook-plugin-anchors@0.7.1 │ ├─┬ cheerio@0.22.0 │ │ ├─┬ css-select@1.2.0 │ │ │ ├── boolbase@1.0.0 │ │ │ ├── css-what@2.1.3 │ │ │ ├── domutils@1.5.1 │ │ │ └── nth-check@1.0.2 │ │ ├─┬ dom-serializer@0.1.1 │ │ │ └── domelementtype@1.3.1 │ │ ├── entities@1.1.2 │ │ ├─┬ htmlparser2@3.10.1 │ │ │ ├── domhandler@2.4.2 │ │ │ ├── inherits@2.0.4 │ │ │ └─┬ readable-stream@3.6.0 │ │ │   ├─┬ string_decoder@1.3.0 │ │ │   │ └── safe-buffer@5.2.1 │ │ │   └── util-deprecate@1.0.2 │ │ ├── lodash.assignin@4.2.0 │ │ ├── lodash.bind@4.2.1 │ │ ├── lodash.defaults@4.2.0 │ │ ├── lodash.filter@4.6.0 │ │ ├── lodash.flatten@4.4.0 │ │ ├── lodash.foreach@4.5.0 │ │ ├── lodash.map@4.6.0 │ │ ├── lodash.merge@4.6.2 │ │ ├── lodash.pick@4.4.0 │ │ ├── lodash.reduce@4.6.0 │ │ ├── lodash.reject@4.6.0 │ │ └── lodash.some@4.6.0 │ └── github-slugid@1.0.1 └── gitbook-plugin-jsbin@0.0.12 info: <span class="token operator">&gt;&gt;</span> plugin <span class="token string">"anchors"</span> installed with success info:  info: installing plugin <span class="token string">"video"</span> runTopLevelLifecycles → <span class="token number">2</span> ▄ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-jsbin@0.0.12 └── gitbook-plugin-video@0.0.3 info: <span class="token operator">&gt;&gt;</span> plugin <span class="token string">"video"</span> installed with success info:  info: installing plugin <span class="token string">"ga"</span> runTopLevelLifecycles → <span class="token number">2</span> ▀ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-ga@1.0.1 ├── gitbook-plugin-jsbin@0.0.12 └── gitbook-plugin-video@0.0.3 info: <span class="token operator">&gt;&gt;</span> plugin <span class="token string">"ga"</span> installed with success info:  info: installing plugin <span class="token string">"toggle-chapters"</span> runTopLevelLifecycles → <span class="token number">2</span> ▌ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-ga@1.0.1 ├── gitbook-plugin-jsbin@0.0.12 ├── gitbook-plugin-toggle-chapters@0.0.3 └── gitbook-plugin-video@0.0.3 info: <span class="token operator">&gt;&gt;</span> plugin <span class="token string">"toggle-chapters"</span> installed with success info:  info: installing plugin <span class="token string">"editlink"</span> runTopLevelLifecycles → <span class="token number">2</span> ▐ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-editlink@1.0.2 ├── gitbook-plugin-ga@1.0.1 ├── gitbook-plugin-jsbin@0.0.12 ├── gitbook-plugin-toggle-chapters@0.0.3 └── gitbook-plugin-video@0.0.3 info: <span class="token operator">&gt;&gt;</span> plugin <span class="token string">"editlink"</span> installed with success info:  info: installing plugin <span class="token string">"include-codeblock"</span> runTopLevelLifecycles → <span class="token number">2</span> ▌ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-editlink@1.0.2 ├── gitbook-plugin-ga@1.0.1 ├─┬ gitbook-plugin-include-codeblock@3.2.2 │ ├─┬ handlebars@4.7.7 │ │ ├── minimist@1.2.5 │ │ ├── neo-async@2.6.2 │ │ ├── source-map@0.6.1 │ │ ├── uglify-js@3.13.2 │ │ └── wordwrap@1.0.0 │ ├── language-map@1.4.0 │ ├─┬ meow@4.0.1 │ │ ├─┬ camelcase-keys@4.2.0 │ │ │ ├── camelcase@4.1.0 │ │ │ ├── map-obj@2.0.0 │ │ │ └── quick-lru@1.1.0 │ │ ├─┬ decamelize-keys@1.1.0 │ │ │ ├── decamelize@1.2.0 │ │ │ └── map-obj@1.0.1 │ │ ├─┬ loud-rejection@1.6.0 │ │ │ ├─┬ currently-unhandled@0.4.1 │ │ │ │ └── array-find-index@1.0.2 │ │ │ └── signal-exit@3.0.3 │ │ ├─┬ minimist-options@3.0.2 │ │ │ ├── arrify@1.0.1 │ │ │ └── is-plain-obj@1.1.0 │ │ ├─┬ normalize-package-data@2.5.0 │ │ │ ├── hosted-git-info@2.8.8 │ │ │ ├─┬ resolve@1.20.0 │ │ │ │ ├─┬ is-core-module@2.2.0 │ │ │ │ │ └─┬ has@1.0.3 │ │ │ │ │   └── function-bind@1.1.1 │ │ │ │ └── path-parse@1.0.6 │ │ │ ├── semver@5.7.1 │ │ │ └─┬ validate-npm-package-license@3.0.4 │ │ │   ├─┬ spdx-correct@3.1.1 │ │ │   │ └── spdx-license-ids@3.0.7 │ │ │   └─┬ spdx-expression-parse@3.0.1 │ │ │     └── spdx-exceptions@2.3.0 │ │ ├─┬ read-pkg-up@3.0.0 │ │ │ ├─┬ find-up@2.1.0 │ │ │ │ └─┬ locate-path@2.0.0 │ │ │ │   ├─┬ p-locate@2.0.0 │ │ │ │   │ └─┬ p-limit@1.3.0 │ │ │ │   │   └── p-try@1.0.0 │ │ │ │   └── path-exists@3.0.0 │ │ │ └─┬ read-pkg@3.0.0 │ │ │   ├─┬ load-json-file@4.0.0 │ │ │   │ ├── graceful-fs@4.2.6 │ │ │   │ ├─┬ parse-json@4.0.0 │ │ │   │ │ ├─┬ error-ex@1.3.2 │ │ │   │ │ │ └── is-arrayish@0.2.1 │ │ │   │ │ └── json-parse-better-errors@1.0.2 │ │ │   │ ├── pify@3.0.0 │ │ │   │ └── strip-bom@3.0.0 │ │ │   └── path-type@3.0.0 │ │ ├─┬ redent@2.0.0 │ │ │ ├── indent-string@3.2.0 │ │ │ └── strip-indent@2.0.0 │ │ └── trim-newlines@2.0.0 │ └─┬ winston-color@1.0.0 │   └─┬ winston@2.4.5 │     ├── async@1.0.0 │     ├── colors@1.0.3 │     ├── cycle@1.0.3 │     ├── eyes@0.1.8 │     ├── isstream@0.1.2 │     └── stack-trace@0.0.10 ├── gitbook-plugin-jsbin@0.0.12 ├── gitbook-plugin-toggle-chapters@0.0.3 └── gitbook-plugin-video@0.0.3 info: <span class="token operator">&gt;&gt;</span> plugin <span class="token string">"include-codeblock"</span> installed with success info:  info: installing plugin <span class="token string">"splitter"</span> runTopLevelLifecycles → <span class="token number">2</span> ▄ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-editlink@1.0.2 ├── gitbook-plugin-ga@1.0.1 ├── gitbook-plugin-include-codeblock@3.2.2 ├── gitbook-plugin-jsbin@0.0.12 ├── gitbook-plugin-splitter@0.0.8 ├── gitbook-plugin-toggle-chapters@0.0.3 └── gitbook-plugin-video@0.0.3 info: <span class="token operator">&gt;&gt;</span> plugin <span class="token string">"splitter"</span> installed with success info:  info: installing plugin <span class="token string">"github-buttons"</span> runTopLevelLifecycles → <span class="token number">2</span> ▌ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-editlink@1.0.2 ├── gitbook-plugin-ga@1.0.1 ├── gitbook-plugin-github-buttons@3.0.0 ├── gitbook-plugin-include-codeblock@3.2.2 ├── gitbook-plugin-jsbin@0.0.12 ├── gitbook-plugin-splitter@0.0.8 ├── gitbook-plugin-toggle-chapters@0.0.3 └── gitbook-plugin-video@0.0.3 info: <span class="token operator">&gt;&gt;</span> plugin <span class="token string">"github-buttons"</span> installed with success info:  info: installing plugin <span class="token string">"chart"</span> runTopLevelLifecycles → <span class="token number">2</span> ▄ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├─┬ gitbook-plugin-chart@0.2.2 │ └─┬ js-yaml@3.14.1 │   ├─┬ argparse@1.0.10 │   │ └── sprintf-js@1.0.3 │   └── esprima@4.0.1 ├── gitbook-plugin-editlink@1.0.2 ├── gitbook-plugin-ga@1.0.1 ├── gitbook-plugin-github-buttons@3.0.0 ├── gitbook-plugin-include-codeblock@3.2.2 ├── gitbook-plugin-jsbin@0.0.12 ├── gitbook-plugin-splitter@0.0.8 ├── gitbook-plugin-toggle-chapters@0.0.3 └── gitbook-plugin-video@0.0.3 info: <span class="token operator">&gt;&gt;</span> plugin <span class="token string">"chart"</span> installed with success info:  info: installing plugin <span class="token string">"todo"</span> runTopLevelLifecycles → <span class="token number">2</span> ▄ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-chart@0.2.2 ├── gitbook-plugin-editlink@1.0.2 ├── gitbook-plugin-ga@1.0.1 ├── gitbook-plugin-github-buttons@3.0.0 ├── gitbook-plugin-include-codeblock@3.2.2 ├── gitbook-plugin-jsbin@0.0.12 ├── gitbook-plugin-splitter@0.0.8 ├─┬ gitbook-plugin-todo@0.1.3 │ ├─┬ cheerio@0.19.0 │ │ ├─┬ css-select@1.0.0 │ │ │ ├── css-what@1.0.0 │ │ │ └── domutils@1.4.3 │ │ ├─┬ htmlparser2@3.8.3 │ │ │ ├── domhandler@2.3.0 │ │ │ ├── domutils@1.5.1 │ │ │ ├── entities@1.0.0 │ │ │ └─┬ readable-stream@1.1.14 │ │ │   ├── core-util-is@1.0.2 │ │ │   ├── isarray@0.0.1 │ │ │   └── string_decoder@0.10.31 │ │ └── lodash@3.10.1 │ └── underscore@1.12.1 ├── gitbook-plugin-toggle-chapters@0.0.3 └── gitbook-plugin-video@0.0.3 info: <span class="token operator">&gt;&gt;</span> plugin <span class="token string">"todo"</span> installed with success info:  info: installing plugin <span class="token string">"quiz"</span> runTopLevelLifecycles → <span class="token number">2</span> ▀ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-chart@0.2.2 ├── gitbook-plugin-editlink@1.0.2 ├── gitbook-plugin-ga@1.0.1 ├── gitbook-plugin-github-buttons@3.0.0 ├── gitbook-plugin-include-codeblock@3.2.2 ├── gitbook-plugin-jsbin@0.0.12 ├─┬ gitbook-plugin-quiz@0.3.0 │ └── jquery@2.2.4 ├── gitbook-plugin-splitter@0.0.8 ├─┬ gitbook-plugin-todo@0.1.3 │ └─┬ cheerio@0.19.0│   └─┬ htmlparser2@3.8.3│     └── domutils@1.5.1 ├── gitbook-plugin-toggle-chapters@0.0.3 └── gitbook-plugin-video@0.0.3 info: <span class="token operator">&gt;&gt;</span> plugin <span class="token string">"quiz"</span> installed with success info:  info: installing plugin <span class="token string">"include-highlight"</span> runTopLevelLifecycles → <span class="token number">2</span> ▄ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-chart@0.2.2 ├── gitbook-plugin-editlink@1.0.2 ├── gitbook-plugin-ga@1.0.1 ├── gitbook-plugin-github-buttons@3.0.0 ├── gitbook-plugin-include-codeblock@3.2.2 ├─┬ gitbook-plugin-include-highlight@0.2.1 │ ├─┬ path@0.12.7 │ │ ├── process@0.11.10 │ │ └─┬ util@0.10.4 │ │   └── inherits@2.0.3 │ └── q@1.5.1 ├── gitbook-plugin-jsbin@0.0.12 ├── gitbook-plugin-quiz@0.3.0 ├── gitbook-plugin-splitter@0.0.8 ├─┬ gitbook-plugin-todo@0.1.3 │ └─┬ cheerio@0.19.0│   └─┬ htmlparser2@3.8.3│     └── domutils@1.5.1 ├── gitbook-plugin-toggle-chapters@0.0.3 └── gitbook-plugin-video@0.0.3 info: <span class="token operator">&gt;&gt;</span> plugin <span class="token string">"include-highlight"</span> installed with success info:  info: installing plugin <span class="token string">"tonic"</span> runTopLevelLifecycles → <span class="token number">2</span> ▀ ╢███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████░░░░░╟/Users/zhangsaidong/Desktop/project/Self/BlogSource/gitbook├── gitbook-plugin-anchors@0.7.1 ├── gitbook-plugin-chart@0.2.2 ├── gitbook-plugin-editlink@1.0.2 ├── gitbook-plugin-ga@1.0.1 ├── gitbook-plugin-github-buttons@3.0.0 ├── gitbook-plugin-include-codeblock@3.2.2 ├── gitbook-plugin-include-highlight@0.2.1 ├── gitbook-plugin-jsbin@0.0.12 ├── gitbook-plugin-quiz@0.3.0 ├── gitbook-plugin-splitter@0.0.8 ├─┬ gitbook-plugin-todo@0.1.3 │ └─┬ cheerio@0.19.0│   └─┬ htmlparser2@3.8.3│     └── domutils@1.5.1 ├── gitbook-plugin-toggle-chapters@0.0.3 ├── gitbook-plugin-tonic@1.1.0 └── gitbook-plugin-video@0.0.3 info: <span class="token operator">&gt;&gt;</span> plugin <span class="token string">"tonic"</span> installed with success zhangsaidong@zhangsaidongs-MacBook-Pro gitbook % <span class="token function">git</span> servegit: <span class="token string">'serve'</span> is not a <span class="token function">git</span> command. See <span class="token string">'git --help'</span><span class="token builtin class-name">.</span>The <span class="token function">most</span> similar <span class="token builtin class-name">command</span> is    mergezhangsaidong@zhangsaidongs-MacBook-Pro gitbook % gitbook serveLive reload server started on port: <span class="token number">35729</span>Press CTRL+C to quit <span class="token punctuation">..</span>.info: <span class="token number">21</span> plugins are installed info: loading plugin <span class="token string">"jsbin"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"anchors"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"video"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"ga"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"toggle-chapters"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"editlink"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"include-codeblock"</span><span class="token punctuation">..</span>. warn: ace features disabled <span class="token punctuation">(</span><span class="token variable"><span class="token variable">`</span>gitbook-plugin-ace<span class="token variable">`</span></span> required<span class="token punctuation">)</span>OK info: loading plugin <span class="token string">"splitter"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"github-buttons"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"chart"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"todo"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"quiz"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"include-highlight"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"tonic"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"livereload"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"highlight"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"search"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"lunr"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"sharing"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"fontsettings"</span><span class="token punctuation">..</span>. OK info: loading plugin <span class="token string">"theme-default"</span><span class="token punctuation">..</span>. OK info: found <span class="token number">108</span> pages info: found <span class="token number">181</span> asset files warn: <span class="token string">"options"</span> property is deprecated, use config.get<span class="token punctuation">(</span>key<span class="token punctuation">)</span> instead info: <span class="token operator">&gt;&gt;</span> generation finished with success <span class="token keyword">in</span> <span class="token number">12</span>.0s <span class="token operator">!</span> Starting server <span class="token punctuation">..</span>.Serving book on http://localhost:4000<span class="token punctuation">(</span>node:84994<span class="token punctuation">)</span> <span class="token punctuation">[</span>DEP0066<span class="token punctuation">]</span> DeprecationWarning: OutgoingMessage.prototype._headers is deprecated<span class="token punctuation">(</span>Use <span class="token variable"><span class="token variable">`</span><span class="token function">node</span> --trace-deprecation <span class="token punctuation">..</span>.<span class="token variable">`</span></span> to show where the warning was created<span class="token punctuation">)</span>^Czhangsaidong@zhangsaidongs-MacBook-Pro gitbook % <span class="token builtin class-name">cd</span> /Users/zhangsaidong/Desktop/project/Self/BlogSource zhangsaidong@zhangsaidongs-MacBook-Pro BlogSource % <span class="token function">git</span> clone https://git.gitbook.com/chengweiv5/test.gitCloning into <span class="token string">'test'</span><span class="token punctuation">..</span>.Username <span class="token keyword">for</span> <span class="token string">'https://git.gitbook.com'</span><span class="token builtin class-name">:</span> ^Czhangsaidong@zhangsaidongs-MacBook-Pro BlogSource % <span class="token function">git</span> clone https://git.gitbook.com/3440217568/rxswift.gitCloning into <span class="token string">'rxswift'</span><span class="token punctuation">..</span>.Username <span class="token keyword">for</span> <span class="token string">'https://git.gitbook.com'</span><span class="token builtin class-name">:</span> <span class="token number">34402217568</span>       Password <span class="token keyword">for</span> <span class="token string">'https://34402217568@git.gitbook.com'</span><span class="token builtin class-name">:</span> remote: Book not foundfatal: repository <span class="token string">'https://git.gitbook.com/3440217568/rxswift.git/'</span> not foundzhangsaidong@zhangsaidongs-MacBook-Pro BlogSource % <span class="token function">git</span> clone https://git.gitbook.com/3440217568/RxSwift.gitCloning into <span class="token string">'RxSwift'</span><span class="token punctuation">..</span>.Username <span class="token keyword">for</span> <span class="token string">'https://git.gitbook.com'</span><span class="token builtin class-name">:</span> <span class="token number">3440217568</span>@qq.comPassword <span class="token keyword">for</span> <span class="token string">'https://3440217568@qq.com@git.gitbook.com'</span><span class="token builtin class-name">:</span> remote: Book not foundfatal: repository <span class="token string">'https://git.gitbook.com/3440217568/RxSwift.git/'</span> not foundzhangsaidong@zhangsaidongs-MacBook-Pro BlogSource % <span class="token function">git</span> clone https://github.com/adong666666/RxSwiftDoc.gitCloning into <span class="token string">'RxSwiftDoc'</span><span class="token punctuation">..</span>.warning: You appear to have cloned an empty repository.zhangsaidong@zhangsaidongs-MacBook-Pro BlogSource % <span class="token builtin class-name">cd</span> /Users/zhangsaidong/Desktop/project/Self/RxSwiftDoc zhangsaidong@zhangsaidongs-MacBook-Pro RxSwiftDoc % <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token function">git</span> %                                                                                                                                                              zhangsaidong@zhangsaidongs-MacBook-Pro RxSwiftDoc % <span class="token function">git</span> commit -m <span class="token string">"fix"</span><span class="token punctuation">[</span>master <span class="token punctuation">(</span>root-commit<span class="token punctuation">)</span> 2719ead<span class="token punctuation">]</span> fix <span class="token number">291</span> files changed, <span class="token number">11003</span> insertions<span class="token punctuation">(</span>+<span class="token punctuation">)</span> create mode <span class="token number">100644</span> .gitignore create mode <span class="token number">100644</span> CHANGELOG.md create mode <span class="token number">100644</span> LICENSE create mode <span class="token number">100644</span> README.md create mode <span class="token number">100644</span> SUMMARY.md create mode <span class="token number">100644</span> assets/Architecture/Architecture.png create mode <span class="token number">100644</span> assets/Architecture/MVVM/GitHubSignupViewController.png create mode <span class="token number">100644</span> assets/Architecture/MVVM/GithubSignupFull.gif create mode <span class="token number">100644</span> assets/Architecture/MVVM/GithubSignupViewModel.png create mode <span class="token number">100644</span> assets/Architecture/MVVM/MVC.png create mode <span class="token number">100644</span> assets/Architecture/MVVM/MVVM.png create mode <span class="token number">100644</span> assets/Architecture/MVVM/Service.png create mode <span class="token number">100644</span> assets/Architecture/MVVM/ViewModel.png create mode <span class="token number">100644</span> assets/Architecture/ReactorKit/BasicConcept.png create mode <span class="token number">100644</span> assets/Architecture/ReactorKit/GithubPaginatedSearchFull.gif create mode <span class="token number">100644</span> assets/Architecture/ReactorKit/Reactor.png create mode <span class="token number">100644</span> assets/Architecture/ReactorKit/ReactorKit.png create mode <span class="token number">100644</span> assets/Architecture/RxFeedback/All.png create mode <span class="token number">100644</span> assets/Architecture/RxFeedback/Counter.gif create mode <span class="token number">100644</span> assets/Architecture/RxFeedback/Event.png create mode <span class="token number">100644</span> assets/Architecture/RxFeedback/FeedbackLoop.png create mode <span class="token number">100644</span> assets/Architecture/RxFeedback/GithubPaginatedSearchFull.gif create mode <span class="token number">100644</span> assets/Architecture/RxFeedback/QueriedState.png create mode <span class="token number">100644</span> assets/Architecture/RxFeedback/RxFeedback.png create mode <span class="token number">100644</span> assets/Architecture/RxFeedback/State.png create mode <span class="token number">100644</span> assets/Disposable/Disposable.png create mode <span class="token number">100644</span> assets/Disposable/DisposeBag.png create mode <span class="token number">100644</span> assets/Disposable/TakeUntil.png create mode <span class="token number">100644</span> assets/FunctionalReactiveProgramming/Binding.png create mode <span class="token number">100644</span> assets/FunctionalReactiveProgramming/FunctionalProgramming.png create mode <span class="token number">100644</span> assets/FunctionalReactiveProgramming/FunctionalProgrammingBanner.png create mode <span class="token number">100644</span> assets/FunctionalReactiveProgramming/FunctionalReactiveProgramming.png create mode <span class="token number">100644</span> assets/FunctionalReactiveProgramming/TapArray.png create mode <span class="token number">100644</span> assets/FunctionalReactiveProgramming/TapObservable.png create mode <span class="token number">100644</span> assets/GithubSearch.gif create mode <span class="token number">100644</span> assets/MoreDemo/Calculator/All.png create mode <span class="token number">100644</span> assets/MoreDemo/Calculator/CalculatorCommand.png create mode <span class="token number">100644</span> assets/MoreDemo/Calculator/CalculatorFull.gif create mode <span class="token number">100644</span> assets/MoreDemo/Calculator/CalculatorState.png create mode <span class="token number">100644</span> assets/MoreDemo/Calculator/State.png create mode <span class="token number">100644</span> assets/MoreDemo/Calculator/StateObserver.png create mode <span class="token number">100644</span> assets/MoreDemo/ImagePicker/All.png create mode <span class="token number">100644</span> assets/MoreDemo/ImagePicker/ImagePickerFull.gif create mode <span class="token number">100644</span> assets/MoreDemo/ImagePicker/Operator.png create mode <span class="token number">100644</span> assets/MoreDemo/TableViewSectionedViewController/All.png create mode <span class="token number">100644</span> assets/MoreDemo/TableViewSectionedViewController/TableViewSectionedViewControllerFull.png create mode <span class="token number">100644</span> assets/MoreDemo/TableViewSectionedViewController/bindings.png create mode <span class="token number">100644</span> assets/Observable/Callback.png create mode <span class="token number">100644</span> assets/Observable/JSON.png create mode <span class="token number">100644</span> assets/Observable/Obervable.png create mode <span class="token number">100644</span> assets/Observable/OnePiece.png create mode <span class="token number">100644</span> assets/Observable/Temperature.png create mode <span class="token number">100644</span> assets/ObservableAndObserver/AsyncSubject.png create mode <span class="token number">100644</span> assets/ObservableAndObserver/AsyncSubject1.png create mode <span class="token number">100644</span> assets/ObservableAndObserver/BehaviorSubject.png create mode <span class="token number">100644</span> assets/ObservableAndObserver/BehaviorSubject1.png create mode <span class="token number">100644</span> assets/ObservableAndObserver/ObservableAndObserver.png create mode <span class="token number">100644</span> assets/ObservableAndObserver/PublishSubject.png create mode <span class="token number">100644</span> assets/ObservableAndObserver/PublishSubject1.png create mode <span class="token number">100644</span> assets/ObservableAndObserver/ReplaySubject.png create mode <span class="token number">100644</span> assets/Observer/Callback.png create mode <span class="token number">100644</span> assets/Observer/JSON.png create mode <span class="token number">100644</span> assets/Observer/Observer.png create mode <span class="token number">100644</span> assets/Observer/OnePiece.png create mode <span class="token number">100644</span> assets/Observer/Temperature.png create mode <span class="token number">100644</span> assets/Operator/Operator.png create mode <span class="token number">100644</span> assets/Operator/filter.png create mode <span class="token number">100644</span> assets/Operator/map.png create mode <span class="token number">100644</span> assets/Operator/zip.png create mode <span class="token number">100644</span> assets/README/FunctionalReactiveProgramming.png create mode <span class="token number">100644</span> assets/README/Introduction.png create mode <span class="token number">100644</span> assets/README/OperatorCreate.png create mode <span class="token number">100644</span> assets/README/RxSwiftEcosystem.png create mode <span class="token number">100644</span> assets/Recipes/Recipes.jpg create mode <span class="token number">100644</span> assets/Recipes/WhatsNewInRxSwift5/RxSwift4Bind.png create mode <span class="token number">100644</span> assets/Recipes/WhatsNewInRxSwift5/RxSwift4Do.png create mode <span class="token number">100644</span> assets/Recipes/WhatsNewInRxSwift5/RxSwift4Element.png create mode <span class="token number">100644</span> assets/Recipes/WhatsNewInRxSwift5/RxSwift4FilterNil.png create mode <span class="token number">100644</span> assets/Recipes/WhatsNewInRxSwift5/RxSwift4TimeInterval.png create mode <span class="token number">100644</span> assets/Recipes/WhatsNewInRxSwift5/RxSwift4ToArray.png create mode <span class="token number">100644</span> assets/Recipes/WhatsNewInRxSwift5/RxSwift4Variable.png create mode <span class="token number">100644</span> assets/Recipes/WhatsNewInRxSwift5/RxSwift5Bind.png create mode <span class="token number">100644</span> assets/Recipes/WhatsNewInRxSwift5/RxSwift5DispatchTimeInterval.png create mode <span class="token number">100644</span> assets/Recipes/WhatsNewInRxSwift5/RxSwift5Do.png create mode <span class="token number">100644</span> assets/Recipes/WhatsNewInRxSwift5/RxSwift5Element.png create mode <span class="token number">100644</span> assets/Recipes/WhatsNewInRxSwift5/RxSwift5FilterNil.png create mode <span class="token number">100644</span> assets/Recipes/WhatsNewInRxSwift5/RxSwift5ToArray.png create mode <span class="token number">100644</span> assets/Recipes/WhatsNewInRxSwift5/RxSwift5Variable.png create mode <span class="token number">100644</span> assets/Recipes/WhatsNewInRxSwift5/RxSwiftDpendencyGraph.png create mode <span class="token number">100644</span> assets/RxSwiftCore.png create mode <span class="token number">100644</span> assets/Rx_Logo_M.png create mode <span class="token number">100644</span> assets/Schedulers/Scheduler.png create mode <span class="token number">100644</span> assets/SimpleValid/All.png create mode <span class="token number">100644</span> assets/SimpleValid/LoginAction.png create mode <span class="token number">100644</span> assets/SimpleValid/LoginButtonValid.png create mode <span class="token number">100644</span> assets/SimpleValid/PasswordValid.png create mode <span class="token number">100644</span> assets/SimpleValid/SimpleValidationFull.gif create mode <span class="token number">100644</span> assets/SimpleValid/UsernameValid.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/amb.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/buffer.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/catchError.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/combineLatest.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/concat.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/concatMap.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/create.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/debounce.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/deferred.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/delay.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/delaySubscription.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/dematerialize.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/distinctUntilChanged.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/do.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/elementAt.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/empty.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/error.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/filter.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/flatMap.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/flatMapLatest.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/from.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/groupBy.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/ignoreElements.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/interval.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/just.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/map.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/materialize.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/merge.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/never.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/observeOn.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/observeOn1.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/publish.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/reduce.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/refCount.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/repeatElement.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/replay.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/retry.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/sample.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/scan.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/schedulers.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/single.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/skip.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/skipUntil.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/skipWhile.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/startWith.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/subscribeOn.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/take.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/takeLast.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/takeUntil.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/takeWhile.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/timeout.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/timer.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/timer1.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/using.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/window.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/withLatestFrom.png create mode <span class="token number">100644</span> assets/WhichOperator/Operators/zip.png create mode <span class="token number">100644</span> assets/WhichOperator/WhichOperator.png create mode <span class="token number">100644</span> assets/WhyRxSwiftAgain/ReactiveX.png create mode <span class="token number">100644</span> assets/WhyRxSwiftAgain/RxDataSources.gif create mode <span class="token number">100644</span> assets/WhyRxSwiftAgain/RxSwiftCommunity.png create mode <span class="token number">100644</span> book.json create mode <span class="token number">100644</span> content/about.md create mode <span class="token number">100644</span> content/architecture.md create mode <span class="token number">100644</span> content/architecture/mvvm.md create mode <span class="token number">100644</span> content/architecture/mvvm/github_signup.md create mode <span class="token number">100644</span> content/architecture/reactorkit.md create mode <span class="token number">100644</span> content/architecture/reactorkit/github_search.md create mode <span class="token number">100644</span> content/architecture/rxfeedback.md create mode <span class="token number">100644</span> content/architecture/rxfeedback/github_search.md create mode <span class="token number">100644</span> content/decision_tree.md create mode <span class="token number">100644</span> content/decision_tree/amb.md create mode <span class="token number">100644</span> content/decision_tree/buffer.md create mode <span class="token number">100644</span> content/decision_tree/catchError.md create mode <span class="token number">100644</span> content/decision_tree/combineLatest.md create mode <span class="token number">100644</span> content/decision_tree/concat.md create mode <span class="token number">100644</span> content/decision_tree/concatMap.md create mode <span class="token number">100644</span> content/decision_tree/connect.md create mode <span class="token number">100644</span> content/decision_tree/create.md create mode <span class="token number">100644</span> content/decision_tree/debounce.md create mode <span class="token number">100644</span> content/decision_tree/debug.md create mode <span class="token number">100644</span> content/decision_tree/deferred.md create mode <span class="token number">100644</span> content/decision_tree/delay.md create mode <span class="token number">100644</span> content/decision_tree/delaySubscription.md create mode <span class="token number">100644</span> content/decision_tree/dematerialize.md create mode <span class="token number">100644</span> content/decision_tree/distinctUntilChanged.md create mode <span class="token number">100644</span> content/decision_tree/do.md create mode <span class="token number">100644</span> content/decision_tree/elementAt.md create mode <span class="token number">100644</span> content/decision_tree/empty.md create mode <span class="token number">100644</span> content/decision_tree/error.md create mode <span class="token number">100644</span> content/decision_tree/filter.md create mode <span class="token number">100644</span> content/decision_tree/flatMap.md create mode <span class="token number">100644</span> content/decision_tree/flatMapLatest.md create mode <span class="token number">100644</span> content/decision_tree/from.md create mode <span class="token number">100644</span> content/decision_tree/groupBy.md create mode <span class="token number">100644</span> content/decision_tree/ignoreElements.md create mode <span class="token number">100644</span> content/decision_tree/interval.md create mode <span class="token number">100644</span> content/decision_tree/just.md create mode <span class="token number">100644</span> content/decision_tree/map.md create mode <span class="token number">100644</span> content/decision_tree/materialize.md create mode <span class="token number">100644</span> content/decision_tree/merge.md create mode <span class="token number">100644</span> content/decision_tree/never.md create mode <span class="token number">100644</span> content/decision_tree/observeOn.md create mode <span class="token number">100644</span> content/decision_tree/publish.md create mode <span class="token number">100644</span> content/decision_tree/reduce.md create mode <span class="token number">100644</span> content/decision_tree/refCount.md create mode <span class="token number">100644</span> content/decision_tree/repeatElement.md create mode <span class="token number">100644</span> content/decision_tree/replay.md create mode <span class="token number">100644</span> content/decision_tree/retry.md create mode <span class="token number">100644</span> content/decision_tree/sample.md create mode <span class="token number">100644</span> content/decision_tree/scan.md create mode <span class="token number">100644</span> content/decision_tree/shareReplay.md create mode <span class="token number">100644</span> content/decision_tree/single.md create mode <span class="token number">100644</span> content/decision_tree/skip.md create mode <span class="token number">100644</span> content/decision_tree/skipUntil.md create mode <span class="token number">100644</span> content/decision_tree/skipWhile.md create mode <span class="token number">100644</span> content/decision_tree/startWith.md create mode <span class="token number">100644</span> content/decision_tree/subscribeOn.md create mode <span class="token number">100644</span> content/decision_tree/take.md create mode <span class="token number">100644</span> content/decision_tree/takeLast.md create mode <span class="token number">100644</span> content/decision_tree/takeUntil.md create mode <span class="token number">100644</span> content/decision_tree/takeWhile.md create mode <span class="token number">100644</span> content/decision_tree/timeout.md create mode <span class="token number">100644</span> content/decision_tree/timer.md create mode <span class="token number">100644</span> content/decision_tree/using.md create mode <span class="token number">100644</span> content/decision_tree/window.md create mode <span class="token number">100644</span> content/decision_tree/withLatestFrom.md create mode <span class="token number">100644</span> content/decision_tree/zip.md create mode <span class="token number">100644</span> content/first_app.md create mode <span class="token number">100644</span> content/more_demo.md create mode <span class="token number">100644</span> content/more_demo/calculator.md create mode <span class="token number">100644</span> content/more_demo/image_picker.md create mode <span class="token number">100644</span> content/more_demo/tableView_sectioned_viewController.md create mode <span class="token number">100644</span> content/recipes.md create mode <span class="token number">100644</span> content/recipes/pure_function.md create mode <span class="token number">100644</span> content/recipes/rxrelay.md create mode <span class="token number">100644</span> content/recipes/share_side_effects.md create mode <span class="token number">100644</span> content/recipes/side_effects.md create mode <span class="token number">100644</span> content/recipes/whats_new_in_rxswift_5.md create mode <span class="token number">100644</span> content/resource.md create mode <span class="token number">100644</span> content/rxswift_core.md create mode <span class="token number">100644</span> content/rxswift_core/disposable.md create mode <span class="token number">100644</span> content/rxswift_core/error_handling.md create mode <span class="token number">100644</span> content/rxswift_core/observable.md create mode <span class="token number">100644</span> content/rxswift_core/observable/completable.md create mode <span class="token number">100644</span> content/rxswift_core/observable/control_event.md create mode <span class="token number">100644</span> content/rxswift_core/observable/driver.md create mode <span class="token number">100644</span> content/rxswift_core/observable/maybe.md create mode <span class="token number">100644</span> content/rxswift_core/observable/signal.md create mode <span class="token number">100644</span> content/rxswift_core/observable/single.md create mode <span class="token number">100644</span> content/rxswift_core/observable_and_observer.md create mode <span class="token number">100644</span> content/rxswift_core/observable_and_observer/async_subject.md create mode <span class="token number">100644</span> content/rxswift_core/observable_and_observer/behavior_subject.md create mode <span class="token number">100644</span> content/rxswift_core/observable_and_observer/control_property.md create mode <span class="token number">100644</span> content/rxswift_core/observable_and_observer/publish_subject.md create mode <span class="token number">100644</span> content/rxswift_core/observable_and_observer/replay_subject.md create mode <span class="token number">100644</span> content/rxswift_core/observable_and_observer/variable.md create mode <span class="token number">100644</span> content/rxswift_core/observer.md create mode <span class="token number">100644</span> content/rxswift_core/observer/any_observer.md create mode <span class="token number">100644</span> content/rxswift_core/observer/binder.md create mode <span class="token number">100644</span> content/rxswift_core/operator.md create mode <span class="token number">100644</span> content/rxswift_core/schedulers.md create mode <span class="token number">100644</span> content/rxswift_ecosystem.md create mode <span class="token number">100644</span> content/think_reactive.md create mode <span class="token number">100644</span> content/think_reactive/data_binding.md create mode <span class="token number">100644</span> content/think_reactive/functional_reactive_progaramming.md create mode <span class="token number">100644</span> content/think_reactive/funtional_programming.md create mode <span class="token number">100644</span> content/why_rxswift.md create mode <span class="token number">100644</span> gitbook/fonts/fontawesome/FontAwesome.otf create mode <span class="token number">100644</span> gitbook/fonts/fontawesome/fontawesome-webfont.eot create mode <span class="token number">100644</span> gitbook/fonts/fontawesome/fontawesome-webfont.svg create mode <span class="token number">100644</span> gitbook/fonts/fontawesome/fontawesome-webfont.ttf create mode <span class="token number">100644</span> gitbook/fonts/fontawesome/fontawesome-webfont.woff create mode <span class="token number">100644</span> gitbook/fonts/fontawesome/fontawesome-webfont.woff2 create mode <span class="token number">100644</span> gitbook/gitbook-plugin-fontsettings/fontsettings.js create mode <span class="token number">100644</span> gitbook/gitbook-plugin-fontsettings/website.css create mode <span class="token number">100644</span> gitbook/gitbook-plugin-highlight/ebook.css create mode <span class="token number">100644</span> gitbook/gitbook-plugin-highlight/website.css create mode <span class="token number">100644</span> gitbook/gitbook-plugin-lunr/lunr.min.js create mode <span class="token number">100644</span> gitbook/gitbook-plugin-lunr/search-lunr.js create mode <span class="token number">100644</span> gitbook/gitbook-plugin-search/lunr.min.js create mode <span class="token number">100644</span> gitbook/gitbook-plugin-search/search-engine.js create mode <span class="token number">100644</span> gitbook/gitbook-plugin-search/search.css create mode <span class="token number">100644</span> gitbook/gitbook-plugin-search/search.js create mode <span class="token number">100644</span> gitbook/gitbook-plugin-sharing/buttons.js create mode <span class="token number">100644</span> gitbook/gitbook.js create mode <span class="token number">100644</span> gitbook/images/apple-touch-icon-precomposed-152.png create mode <span class="token number">100644</span> gitbook/images/favicon.ico create mode <span class="token number">100644</span> gitbook/style.css create mode <span class="token number">100644</span> gitbook/theme.js create mode <span class="token number">100644</span> introduction.md create mode <span class="token number">100755</span> publish_gitbook.sh create mode <span class="token number">100644</span> search_index.jsonzhangsaidong@zhangsaidongs-MacBook-Pro RxSwiftDoc % <span class="token function">git</span> ppushgit: <span class="token string">'ppush'</span> is not a <span class="token function">git</span> command. See <span class="token string">'git --help'</span><span class="token builtin class-name">.</span>The <span class="token function">most</span> similar <span class="token builtin class-name">command</span> is    pushzhangsaidong@zhangsaidongs-MacBook-Pro RxSwiftDoc % <span class="token function">git</span> push Enumerating objects: <span class="token number">336</span>, done.Counting objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">336</span>/336<span class="token punctuation">)</span>, done.Delta compression using up to <span class="token number">16</span> threadsCompressing objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">330</span>/330<span class="token punctuation">)</span>, done.Writing objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">336</span>/336<span class="token punctuation">)</span>, <span class="token number">15.77</span> MiB <span class="token operator">|</span> <span class="token number">116.00</span> KiB/s, done.Total <span class="token number">336</span> <span class="token punctuation">(</span>delta <span class="token number">5</span><span class="token punctuation">)</span>, reused <span class="token number">0</span> <span class="token punctuation">(</span>delta <span class="token number">0</span><span class="token punctuation">)</span>remote: Resolving deltas: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">5</span>/5<span class="token punctuation">)</span>, done.To https://github.com/adong666666/RxSwiftDoc.git * <span class="token punctuation">[</span>new branch<span class="token punctuation">]</span>      master -<span class="token operator">&gt;</span> masterzhangsaidong@zhangsaidongs-MacBook-Pro RxSwiftDoc % lsszsh: <span class="token builtin class-name">command</span> not found: lsszhangsaidong@zhangsaidongs-MacBook-Pro RxSwiftDoc % <span class="token function">ls</span>CHANGELOG.md        SUMMARY.md        book.json        introduction.md        search_index.jsonLICENSE            _book            content            node_modulesREADME.md        assets            gitbook            publish_gitbook.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 文档处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
            <tag> 博文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS之制作xcframework摘录</title>
      <link href="/posts/10391.html"/>
      <url>/posts/10391.html</url>
      
        <content type="html"><![CDATA[<h1 id="iOS之制作xcframework摘录"><a href="#iOS之制作xcframework摘录" class="headerlink" title="iOS之制作xcframework摘录"></a>iOS之制作xcframework摘录</h1><p>========================</p><p>最近RxSwift 6开始需要xcframework拖到工程中（感觉有点麻烦，直接让我们pod就能用，他不香吗），然后我就去搜了网上的教程制作xcframework，真是很麻烦，幸好结合下面两篇教程最后还是搞定了。</p><p>附网址：<a href="https://www.shareintelli.com/1087/">https://www.shareintelli.com/1087/</a><br> 附网址：<a href="https://blog.csdn.net/zr_csdn/article/details/112298965">https://blog.csdn.net/zr_csdn/article/details/112298965</a></p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210322iOS%E4%B9%8B%E5%88%B6%E4%BD%9Cxcframework%E6%91%98%E5%BD%95/1.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210322iOS%E4%B9%8B%E5%88%B6%E4%BD%9Cxcframework%E6%91%98%E5%BD%95/2.png"></p><h2 id="截图看不到的命令行"><a href="#截图看不到的命令行" class="headerlink" title="截图看不到的命令行"></a>截图看不到的命令行</h2><pre class="line-numbers language-none"><code class="language-none">xcodebuild -create-xcframework -framework &lt;第一个库的路径&gt; -framework &lt;第二个库的路径&gt; -output &lt;输出路径/库名称.xcframework&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">xcodebuild -create-xcframework -framework /Users/admin/Library/Developer/Xcode/DerivedData/MyTools-ciyqnqacjemhpfbqswwhrlyvstsb/Build/Products/Release-iphoneos/MyTools.framework -framework /Users/admin/Library/Developer/Xcode/DerivedData/MyTools-ciyqnqacjemhpfbqswwhrlyvstsb/Build/Products/Release-iphonesimulator/MyTools.framework -output ~/Desktop/MyToolsOutput/MyTools.xcframework// 成功后的日志xcframework successfully written out to: /Users/admin/Desktop/MyToolsOutput/MyTools.xcframework<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="工作记录"><a href="#工作记录" class="headerlink" title="工作记录"></a>工作记录</h2><p>这里因为在博客就直接给内容哈：</p><pre class="line-numbers language-none"><code class="language-none">Last login: Sun Mar 21 16:16:57 on ttys000zhangsaidong@zhangsaidongs-MacBook-Pro ~ % cd /Users/zhangsaidong/Desktop/project2/iOS/someProjectzhangsaidong@zhangsaidongs-MacBook-Pro someProject % zhangsaidong@zhangsaidongs-MacBook-Pro someProject % git clone https://github.com/ReactiveX/RxSwift.gitCloning into 'RxSwift'...remote: Enumerating objects: 36, done.remote: Counting objects: 100% (36/36), done.remote: Compressing objects: 100% (33/33), done.remote: Total 39525 (delta 9), reused 9 (delta 3), pack-reused 39489Receiving objects: 100% (39525/39525), 15.15 MiB | 1.85 MiB/s, done.Resolving deltas: 100% (29174/29174), done.zhangsaidong@zhangsaidongs-MacBook-Pro someProject % xcodebuildCommand line invocation:    /Applications/Xcode.app/Contents/Developer/usr/bin/xcodebuildxcodebuild: error: The directory /Users/zhangsaidong/Desktop/project2/iOS/someProject does not contain an Xcode project.zhangsaidong@zhangsaidongs-MacBook-Pro someProject % cd /Users/zhangsaidong/Desktop/project2/iOS/someProject/RxSwift/RxExample/RxExample.xcodeprojzhangsaidong@zhangsaidongs-MacBook-Pro RxExample.xcodeproj % cd ..zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcode buildzsh: command not found: xcodezhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuildCommand line invocation:    /Applications/Xcode.app/Contents/Developer/usr/bin/xcodebuildnote: Using new build systemnote: Planning buildnote: Constructing build descriptionwarning: ONLY_ACTIVE_ARCH=YES requested with multiple ARCHS and no run destination to provide an active architecture; building for all applicable architectures (in target 'RxCocoa' from project 'Rx')error: No profiles for 'io.rx.example.4.3.0' were found: Xcode couldn't find any iOS App Development provisioning profiles matching 'io.rx.example.4.3.0'. Automatic signing is disabled and unable to generate a profile. To enable automatic signing, pass -allowProvisioningUpdates to xcodebuild. (in target 'RxExample-iOS' from project 'RxExample')error: Building for iOS, but the linked framework 'RxSwift.framework' is building for macOS. You may need to configure 'RxSwift.framework' to build for iOS. (in target 'RxExample-iOS' from project 'RxExample')error: Building for iOS, but the linked framework 'RxCocoa.framework' is building for macOS. You may need to configure 'RxCocoa.framework' to build for iOS. (in target 'RxExample-iOS' from project 'RxExample')zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release/RxCocoa.framework  -framework/Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphonesimulator/RxCocoa.frameworkerror: invalid argument '-framework/Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxCocoa.framework'.zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release/RxCocoa.framework  -framework/Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphonesimulator/RxCocoa.framework -output ~/Desktop/RxCocoa.xcframeworkerror: invalid argument '-framework/Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxCocoa.framework'.zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release/RxCocoa.framework  -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphonesimulator/RxCocoa.framework -output ~/Desktop/RxCocoa.xcframeworkxcframework successfully written out to: /Users/zhangsaidong/Desktop/RxCocoa.xcframeworkzhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release/RxRelay.frameworkerror: no output was specified.zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release/RxRelay.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxRelay.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphonesimulator/RxRelay.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-appletvos/RxRelay.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-watchos/RxRelay.framework output ~/Desktop/RxRelay.xcframeworkerror: invalid argument 'output'.zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release/RxRelay.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxRelay.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphonesimulator/RxRelay.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-appletvos/RxRelay.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-watchos/RxRelay.framework -output ~/Desktop/RxRelay.xcframeworkxcframework successfully written out to: /Users/zhangsaidong/Desktop/RxRelay.xcframeworkzhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-appletvos/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxCocoa.frameworkerror: no output was specified.zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-appletvos/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphonesimulator/RxCocoa.frameworkerror: no output was specified.zhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-appletvos/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphonesimulator/RxCocoa.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-watchos/RxCocoa.framework -output ~/Desktop/RxCocoa.xcframeworkxcframework successfully written out to: /Users/zhangsaidong/Desktop/RxCocoa.xcframeworkzhangsaidong@zhangsaidongs-MacBook-Pro RxExample % xcodebuild -create-xcframework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release/RxSwift.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-appletvos/RxSwift.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphoneos/RxSwift.framework  -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-iphonesimulator/RxSwift.framework -framework /Users/zhangsaidong/Library/Developer/Xcode/DerivedData/RxExample-dzmpynlazvvqfffzdantespvadrq/Build/Products/Release-watchos/RxSwift.framework  -output ~/Desktop/RxSwift.xcframeworkxcframework successfully written out to: /Users/zhangsaidong/Desktop/RxSwift.xcframeworkzhangsaidong@zhangsaidongs-MacBook-Pro RxExample % <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Perfect部署到云服务器摘录</title>
      <link href="/posts/48709.html"/>
      <url>/posts/48709.html</url>
      
        <content type="html"><![CDATA[<h1 id="Perfect部署到云服务器摘录"><a href="#Perfect部署到云服务器摘录" class="headerlink" title="Perfect部署到云服务器摘录"></a>Perfect部署到云服务器摘录</h1><p>========================<br>部署过程中我先用的下面的教程<br>附链接:<a href="https://blog.csdn.net/z123sen/article/details/80248345">https://blog.csdn.net/z123sen/article/details/80248345</a><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/1.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/2.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/3.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/4.png"></p><h1 id="遇到的第一个问题"><a href="#遇到的第一个问题" class="headerlink" title="遇到的第一个问题"></a>遇到的第一个问题</h1><h3 id="linux-下解压-tar-gz文件"><a href="#linux-下解压-tar-gz文件" class="headerlink" title="linux 下解压 tar.gz文件"></a>linux 下解压 tar.gz文件</h3><p>百度了之后，使用命令行<code>tar -xvzf filename.tar.gz</code>解决</p><h1 id="遇到的第二个问题"><a href="#遇到的第二个问题" class="headerlink" title="遇到的第二个问题"></a>遇到的第二个问题</h1><h3 id="云服务器搭建Swift环境"><a href="#云服务器搭建Swift环境" class="headerlink" title="云服务器搭建Swift环境"></a>云服务器搭建Swift环境</h3><p>这里我发现前面的教程不够好，总是搭建不成功，于是我又找到了其他教程<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/5.png"><br>使用这个教程我成功搭建了Swift环境</p><h1 id="遇到的第三个问题"><a href="#遇到的第三个问题" class="headerlink" title="遇到的第三个问题"></a>遇到的第三个问题</h1><h3 id="这段时间github访问不了，需要翻墙"><a href="#这段时间github访问不了，需要翻墙" class="headerlink" title="这段时间github访问不了，需要翻墙"></a>这段时间github访问不了，需要翻墙</h3><p>Perfect有许多依赖库在github上面，所以需要获取到github上的依赖库<br>现在我想到了两个办法，一是服务器翻墙，二是在mac上翻墙，然后将依赖库下载下来，上传到没有被墙的代码托管仓库，我会选择Coding，因为之前就用过，在这之后，修改Perfect各个依赖仓库的代码，把有关github的url全部改成Coding的url,标签尽量保持一致。<br>权衡之下，我选择了第二个办法，linux翻墙也是件麻烦事，mac上我有无数个vpn随便翻<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/6.png"><br>不过也是很麻烦，费了几个小时整理依赖库，修改代码。<br>幸运的是，不出所料，一顿改动后，代码总算是运行起来了，这个时候已经出现了<code>[INFO] Starting HTTP server localhost on 0.0.0.0:8080</code>。<br>也就是说我成功将Perfect项目在服务器跑了起来。</p><h1 id="遇到的第四个问题"><a href="#遇到的第四个问题" class="headerlink" title="遇到的第四个问题"></a>遇到的第四个问题</h1><h3 id="公网无法访问"><a href="#公网无法访问" class="headerlink" title="公网无法访问"></a>公网无法访问</h3><p>到这里，项目只能在服务器localhost上跑，公网访问不到<br>然后我又找了半天，找到Perfect官方文档的一个nginx配置教程，链接是<a href="https://github.com/PerfectlySoft/PerfectDocs/blob/master/guide.zh_CN/deployment-DigitalOcean.md">https://github.com/PerfectlySoft/PerfectDocs/blob/master/guide.zh_CN/deployment-DigitalOcean.md</a><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/7.png"></p><h1 id="遇到的第五个问题"><a href="#遇到的第五个问题" class="headerlink" title="遇到的第五个问题"></a>遇到的第五个问题</h1><h3 id="nginx配置到想吐"><a href="#nginx配置到想吐" class="headerlink" title="nginx配置到想吐"></a>nginx配置到想吐</h3><p>上面那个文档写得很一般，我配了半天，也只是配出个 bad gateways<br>然后我又找了其他教程<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/8.png"><br>虽然用处不大，但我还是想到了把<code>http://127.0.0.1:8181</code>换成了<code>http://localhost:8080</code></p><h1 id="遇到的第六个问题"><a href="#遇到的第六个问题" class="headerlink" title="遇到的第六个问题"></a>遇到的第六个问题</h1><h3 id="一顿nigix配置下来，还是无法从公网访问"><a href="#一顿nigix配置下来，还是无法从公网访问" class="headerlink" title="一顿nigix配置下来，还是无法从公网访问"></a>一顿nigix配置下来，还是无法从公网访问</h3><p>然后我又找了一堆内网穿透教程、外网访问服务器教程等等，皆无果<br>我觉得我需要海量Perfect部署至服务器教程，我就又这样搜起来了，总有成功访问的吧。<br>我又找到了下面这个教程<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/9.png"><br>对比了之前的教程，我发现了一个非常严重却不容易发现的问题</p><h1 id="遇到的第七个问题"><a href="#遇到的第七个问题" class="headerlink" title="遇到的第七个问题"></a>遇到的第七个问题</h1><h3 id="安全组设置问题"><a href="#安全组设置问题" class="headerlink" title="安全组设置问题"></a>安全组设置问题</h3><p>我为Perfect项目设置了8080窗口<br>在云服务器控制台，我以为安全组有个80就可以了，没怎么关注这个安全组，真是上面的教程救我于危难之际。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/10.png"><br>居然要配置这么个东西，端口范围，他配置的是8181/8181<br>那么我岂不是要配置个8080/8080，我就抱着试试的态度，没想到居然成功了，外网一直无法访问，竟然是因为安全组的这个端口范围，我真是一把辛酸泪啊，终于成功了！<br>附上该教程链接，我超喜欢这个教程<a href="https://www.foolishtalk.org/2017/08/21/%E5%A6%82%E4%BD%95%E5%9C%A8%E9%98%BF%E9%87%8C%E4%BA%91%E4%B8%8A%E9%83%A8%E7%BD%B2Perfect%E6%9C%8D%E5%8A%A1%E5%99%A8/">https://www.foolishtalk.org/2017/08/21/%E5%A6%82%E4%BD%95%E5%9C%A8%E9%98%BF%E9%87%8C%E4%BA%91%E4%B8%8A%E9%83%A8%E7%BD%B2Perfect%E6%9C%8D%E5%8A%A1%E5%99%A8/</a><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/11.png"><br>这个时候已经可以从公网调用接口了，感觉稳了，一切都值得<br>没想到还有第八个问题</p><h1 id="遇到的第八个问题"><a href="#遇到的第八个问题" class="headerlink" title="遇到的第八个问题"></a>遇到的第八个问题</h1><h3 id="项目无法持续在服务器跑"><a href="#项目无法持续在服务器跑" class="headerlink" title="项目无法持续在服务器跑"></a>项目无法持续在服务器跑</h3><p>我远程连接一关，远程的终端一关，这个服务器他就不跑了，可我需要这个项目在服务器上一直跑下去，这样我才能随时调用接口<br>于是我又搜教程，然后一篇文章给了我启发，利用nohup来让Perfect项目保持运行<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210320Perfect%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%91%98%E5%BD%95/12.png"><br>我并没有按照上面教程来<br>我使用的是<code>apt install coreutils</code>、<code>vi ~/.profile</code>(我在.profile中按照教程写入了<code>PATH=$PATH:$HOME/bin:/usr/bin</code>)、<code>source ~/.profile</code><br>弄完这些<br>我在Perfect项目目录下使用 <code>swift build</code>、编译完之后使用<code>nohup .build/debug/PerfectTemplate</code>成功地让项目保持运行<br>如果想要停止运行，只需要关闭端口即可<br>即<code>lsof -i:端口号</code>获取到Perfect项目在对应端口号下的PID<br>使用<code>kill 该PID</code>便能关闭端口，停止项目的运行<br>好了，本次Swift Perfect部署至云服务器之旅便到此结束了！！！真的很开心！！！向着全栈的方向越走越远！！！</p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Perfect部署到服务器工作记录</title>
      <link href="/posts/50921.html"/>
      <url>/posts/50921.html</url>
      
        <content type="html"><![CDATA[<h1 id="Perfect部署到服务器工作记录"><a href="#Perfect部署到服务器工作记录" class="headerlink" title="Perfect部署到服务器工作记录"></a>Perfect部署到服务器工作记录</h1><p>========================</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Welcome to Ubuntu <span class="token number">20.04</span>.1 LTS <span class="token punctuation">(</span>GNU/Linux <span class="token number">5.4</span>.0-65-generic x86_64<span class="token punctuation">)</span> * Documentation:  https://help.ubuntu.com * Management:     https://landscape.canonical.com * Support:        https://ubuntu.com/advantageWelcome to Alibaba Cloud Elastic Compute Service <span class="token operator">!</span>Last login: Sat Mar <span class="token number">20</span> <span class="token number">16</span>:36:55 <span class="token number">2021</span> from <span class="token number">47.96</span>.60.213root@iZwz9ir4og87e0nnfrmugkZ:~<span class="token comment"># cd ..</span>root@iZwz9ir4og87e0nnfrmugkZ:/<span class="token comment"># cd home</span>root@iZwz9ir4og87e0nnfrmugkZ:/home<span class="token comment"># ls</span>Code  Swift  swift-5.3.3-RELEASE-ubuntu20.04  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz.sig  wget-logroot@iZwz9ir4og87e0nnfrmugkZ:/home<span class="token comment"># cd Code</span>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code<span class="token comment"># ls</span>Server-tencet2root@iZwz9ir4og87e0nnfrmugkZ:/home/Code<span class="token comment"># cd Server-tencet2</span>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="token comment"># swift build</span>error: root manifest not foundroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="token comment"># ls</span>LICENSE  Perfect  PerfectTemplate  README.md  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz.sigroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="token comment"># cd PerfectTemplate</span>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="token comment"># swift build</span>Updating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTPServer-tencent.gitFetching https://github.com/PerfectlySoft/Perfect-HTTP.git^Croot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="token comment"># cd ..</span>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="token comment"># git pull</span>Username <span class="token keyword">for</span> <span class="token string">'https://e.coding.net'</span><span class="token builtin class-name">:</span> <span class="token number">3440217568</span>@qq.comPassword <span class="token keyword">for</span> <span class="token string">'https://3440217568@qq.com@e.coding.net'</span><span class="token builtin class-name">:</span> remote: Enumerating objects: <span class="token number">9</span>, done.remote: Counting objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">9</span>/9<span class="token punctuation">)</span>, done.remote: Compressing objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">5</span>/5<span class="token punctuation">)</span>, done.remote: Total <span class="token number">7</span> <span class="token punctuation">(</span>delta <span class="token number">2</span><span class="token punctuation">)</span>, reused <span class="token number">0</span> <span class="token punctuation">(</span>delta <span class="token number">0</span><span class="token punctuation">)</span>, pack-reused <span class="token number">0</span>Unpacking objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">7</span>/7<span class="token punctuation">)</span>, <span class="token number">558</span> bytes <span class="token operator">|</span> <span class="token number">558.00</span> KiB/s, done.From https://e.coding.net/Zhangsaidong/server-tencet2/Server-tencet2   <span class="token number">5495386</span><span class="token punctuation">..</span>830be1e  master     -<span class="token operator">&gt;</span> origin/masterUpdating <span class="token number">5495386</span><span class="token punctuation">..</span>830be1eFast-forward Perfect/.swiftpm/xcode/package.xcworkspace/contents.xcworkspacedata <span class="token operator">|</span> <span class="token number">7</span> +++++++ <span class="token number">1</span> <span class="token function">file</span> changed, <span class="token number">7</span> insertions<span class="token punctuation">(</span>+<span class="token punctuation">)</span> create mode <span class="token number">100644</span> Perfect/.swiftpm/xcode/package.xcworkspace/contents.xcworkspacedataroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="token comment"># ls</span>LICENSE  Perfect  PerfectTemplate  README.md  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz.sigroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="token comment"># cd PerfectTemplate</span>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="token comment"># swift build</span>Updating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTPServer-tencent.gitFetching https://github.com/PerfectlySoft/Perfect-HTTP.git^Croot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="token comment"># cd ..</span>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="token comment"># cd PerfecttTemplate</span>-bash: cd: PerfecttTemplate: No such <span class="token function">file</span> or directoryroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="token comment"># cd PerfectTemplate</span>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="token comment"># ls</span>LICENSE  LICENSE.zh_CN  Package.swift  README.md  README.zh_CN.md  Sourcesroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="token comment"># ls -a</span><span class="token builtin class-name">.</span>  <span class="token punctuation">..</span>  .build  .gitignore  LICENSE  LICENSE.zh_CN  Package.swift  README.md  README.zh_CN.md  Sources  .swiftpmroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="token comment"># rm -rf .build</span>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="token comment"># ls</span>LICENSE  LICENSE.zh_CN  Package.swift  README.md  README.zh_CN.md  Sourcesroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="token comment"># ls -a</span><span class="token builtin class-name">.</span>  <span class="token punctuation">..</span>  .gitignore  LICENSE  LICENSE.zh_CN  Package.swift  README.md  README.zh_CN.md  Sources  .swiftpmroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="token comment"># swift build</span>Fetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTPServer-tencent.gitFetching https://github.com/PerfectlySoft/Perfect-HTTP.git^Cerror: Failed to clone https://github.com/PerfectlySoft/Perfect-HTTP.git:    Cloning into bare repository <span class="token string">'/home/Code/Server-tencet2/PerfectTemplate/.build/repositories/Perfect-HTTP-3192655d'</span><span class="token punctuation">..</span>.root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="token comment"># cd Perfect</span>-bash: cd: Perfect: No such <span class="token function">file</span> or directoryroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="token comment"># ls</span>LICENSE  LICENSE.zh_CN  Package.swift  README.md  README.zh_CN.md  Sourcesroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="token comment"># cd Package.swift</span>-bash: cd: Package.swift: Not a directoryroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="token comment"># vi Package.swift</span>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="token comment"># cd ..</span>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="token comment"># git pull</span>Username <span class="token keyword">for</span> <span class="token string">'https://e.coding.net'</span><span class="token builtin class-name">:</span> <span class="token number">3440217568</span>@qq.comPassword <span class="token keyword">for</span> <span class="token string">'https://3440217568@qq.com@e.coding.net'</span><span class="token builtin class-name">:</span> remote: Enumerating objects: <span class="token number">7</span>, done.remote: Counting objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">7</span>/7<span class="token punctuation">)</span>, done.remote: Compressing objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">4</span>/4<span class="token punctuation">)</span>, done.remote: Total <span class="token number">4</span> <span class="token punctuation">(</span>delta <span class="token number">3</span><span class="token punctuation">)</span>, reused <span class="token number">0</span> <span class="token punctuation">(</span>delta <span class="token number">0</span><span class="token punctuation">)</span>, pack-reused <span class="token number">0</span>Unpacking objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">4</span>/4<span class="token punctuation">)</span>, <span class="token number">322</span> bytes <span class="token operator">|</span> <span class="token number">322.00</span> KiB/s, done.From https://e.coding.net/Zhangsaidong/server-tencet2/Server-tencet2   830be1e<span class="token punctuation">..</span>a6d4c36  master     -<span class="token operator">&gt;</span> origin/masterUpdating 830be1e<span class="token punctuation">..</span>a6d4c36Fast-forward PerfectTemplate/Package.swift <span class="token operator">|</span> <span class="token number">2</span> +- <span class="token number">1</span> <span class="token function">file</span> changed, <span class="token number">1</span> insertion<span class="token punctuation">(</span>+<span class="token punctuation">)</span>, <span class="token number">1</span> deletion<span class="token punctuation">(</span>-<span class="token punctuation">)</span>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="token comment"># ls</span>LICENSE  Perfect  PerfectTemplate  README.md  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz  swift-5.3.3-RELEASE-ubuntu20.04.tar.gz.sigroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="token comment"># cd PerfectTemplatet</span>-bash: cd: PerfectTemplatet: No such <span class="token function">file</span> or directoryroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="token comment"># cd PerfectTemplate</span>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="token comment"># swift build</span>Updating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTPServer-tencent.gitFetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTP-tencent.gitFetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-CZlib-src-tencent.gitFetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Net-tencent.gitFetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-LinuxBridge-tencent.gitFetching https://e.coding.net/Zhangsaidong/server-tencet2/PerfectLib-tencent.gitFetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Thread-tencent.gitFetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Crypto-tencent.githttps://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Crypto-tencent.git @ <span class="token number">4.0</span>.0: error: duplicate dependency <span class="token string">'perfectlib-tencent'</span>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="token comment"># swift build</span>Updating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTPServer-tencent.gitUpdating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTP-tencent.gitUpdating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-CZlib-src-tencent.gitUpdating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Net-tencent.gitUpdating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-LinuxBridge-tencent.gitUpdating https://e.coding.net/Zhangsaidong/server-tencet2/PerfectLib-tencent.gitUpdating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Thread-tencent.gitUpdating https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Crypto-tencent.gitFetching https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-COpenSSL-Linux-tencent.gitCloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-COpenSSL-Linux-tencent.gitResolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-COpenSSL-Linux-tencent.git at <span class="token number">4.0</span>.2Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Net-tencent.gitResolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Net-tencent.git at <span class="token number">4.0</span>.0Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-CZlib-src-tencent.gitResolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-CZlib-src-tencent.git at <span class="token number">0.0</span>.4Cloning https://e.coding.net/Zhangsaidong/server-tencet2/PerfectLib-tencent.gitResolving https://e.coding.net/Zhangsaidong/server-tencet2/PerfectLib-tencent.git at <span class="token number">4.0</span>.1Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-LinuxBridge-tencent.gitResolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-LinuxBridge-tencent.git at <span class="token number">3.1</span>.0Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Crypto-tencent.gitResolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Crypto-tencent.git at <span class="token number">4.0</span>.0Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTPServer-tencent.gitResolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTPServer-tencent.git at <span class="token number">3.0</span>.23Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTP-tencent.gitResolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTP-tencent.git at <span class="token number">3.3</span>.0Cloning https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Thread-tencent.gitResolving https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-Thread-tencent.git at <span class="token number">3.0</span>.7warning: failed to retrieve search paths with pkg-config<span class="token punctuation">;</span> maybe pkg-config is not installedwarning: you may be able to <span class="token function">install</span> openssl using your system-packager:    <span class="token function">apt-get</span> <span class="token function">install</span> openssl libssl-dev/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetAddress.swift:97:26: warning: variable <span class="token string">'resultList'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                guard result <span class="token operator">==</span> <span class="token number">0</span>, var resultList <span class="token operator">=</span> resultListPtr <span class="token keyword">else</span> <span class="token punctuation">{</span>                                   ~~~ ^                                   <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:41:7: warning: variable <span class="token string">'addr'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var addr <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>sockaddr_un<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:42:7: warning: variable <span class="token string">'len'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var len <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>socklen_t<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:70:7: warning: variable <span class="token string">'addr'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var addr <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>sockaddr_un<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:71:7: warning: variable <span class="token string">'len'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var len <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>socklen_t<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:209:7: warning: variable <span class="token string">'nothingPtr'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var nothingPtr <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>iovec<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:210:7: warning: variable <span class="token string">'nothing'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var nothing <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>CChar<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:273:7: warning: variable <span class="token string">'nothingPtr'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var nothingPtr <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>iovec<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:274:7: warning: variable <span class="token string">'nothing'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var nothing <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>CChar<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetAddress.swift:97:26: warning: variable <span class="token string">'resultList'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                guard result <span class="token operator">==</span> <span class="token number">0</span>, var resultList <span class="token operator">=</span> resultListPtr <span class="token keyword">else</span> <span class="token punctuation">{</span>                                   ~~~ ^                                   <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:41:7: warning: variable <span class="token string">'addr'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var addr <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>sockaddr_un<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:42:7: warning: variable <span class="token string">'len'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var len <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>socklen_t<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:70:7: warning: variable <span class="token string">'addr'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var addr <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>sockaddr_un<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:71:7: warning: variable <span class="token string">'len'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var len <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>socklen_t<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:209:7: warning: variable <span class="token string">'nothingPtr'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var nothingPtr <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>iovec<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:210:7: warning: variable <span class="token string">'nothing'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var nothing <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>CChar<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:273:7: warning: variable <span class="token string">'nothingPtr'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var nothingPtr <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>iovec<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:274:7: warning: variable <span class="token string">'nothing'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var nothing <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>CChar<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetAddress.swift:97:26: warning: variable <span class="token string">'resultList'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                guard result <span class="token operator">==</span> <span class="token number">0</span>, var resultList <span class="token operator">=</span> resultListPtr <span class="token keyword">else</span> <span class="token punctuation">{</span>                                   ~~~ ^                                   <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:41:7: warning: variable <span class="token string">'addr'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var addr <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>sockaddr_un<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:42:7: warning: variable <span class="token string">'len'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var len <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>socklen_t<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:70:7: warning: variable <span class="token string">'addr'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var addr <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>sockaddr_un<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:71:7: warning: variable <span class="token string">'len'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var len <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>socklen_t<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:209:7: warning: variable <span class="token string">'nothingPtr'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var nothingPtr <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>iovec<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:210:7: warning: variable <span class="token string">'nothing'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var nothing <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>CChar<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:273:7: warning: variable <span class="token string">'nothingPtr'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var nothingPtr <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>iovec<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:274:7: warning: variable <span class="token string">'nothing'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var nothing <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>CChar<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetAddress.swift:97:26: warning: variable <span class="token string">'resultList'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                guard result <span class="token operator">==</span> <span class="token number">0</span>, var resultList <span class="token operator">=</span> resultListPtr <span class="token keyword">else</span> <span class="token punctuation">{</span>                                   ~~~ ^                                   <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:41:7: warning: variable <span class="token string">'addr'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var addr <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>sockaddr_un<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:42:7: warning: variable <span class="token string">'len'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var len <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>socklen_t<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:70:7: warning: variable <span class="token string">'addr'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var addr <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>sockaddr_un<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:71:7: warning: variable <span class="token string">'len'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var len <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>socklen_t<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:209:7: warning: variable <span class="token string">'nothingPtr'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var nothingPtr <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>iovec<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:210:7: warning: variable <span class="token string">'nothing'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var nothing <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>CChar<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:273:7: warning: variable <span class="token string">'nothingPtr'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var nothingPtr <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>iovec<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetNamedPipe.swift:274:7: warning: variable <span class="token string">'nothing'</span> was never mutated<span class="token punctuation">;</span> consider changing to <span class="token string">'let'</span> constant                var nothing <span class="token operator">=</span> UnsafeMutablePointer<span class="token operator">&lt;</span>CChar<span class="token operator">&gt;</span>.allocate<span class="token punctuation">(</span>capacity: <span class="token number">1</span><span class="token punctuation">)</span>                ~~~ ^                <span class="token builtin class-name">let</span>/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:219:42: warning: <span class="token string">'TLSv1_2_method()'</span> is deprecated                <span class="token keyword">case</span> .tlsV1_2: newSslCtx <span class="token operator">=</span> SSL_CTX_new<span class="token punctuation">(</span>TLSv1_2_method<span class="token punctuation">(</span><span class="token punctuation">))</span>                                                       ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:220:42: warning: <span class="token string">'TLSv1_1_method()'</span> is deprecated                <span class="token keyword">case</span> .tlsV1_1: newSslCtx <span class="token operator">=</span> SSL_CTX_new<span class="token punctuation">(</span>TLSv1_1_method<span class="token punctuation">(</span><span class="token punctuation">))</span>                                                       ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:221:40: warning: <span class="token string">'TLSv1_method()'</span> is deprecated                <span class="token keyword">case</span> .tlsV1: newSslCtx <span class="token operator">=</span> SSL_CTX_new<span class="token punctuation">(</span>TLSv1_method<span class="token punctuation">(</span><span class="token punctuation">))</span>                                                     ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:219:42: warning: <span class="token string">'TLSv1_2_method()'</span> is deprecated                <span class="token keyword">case</span> .tlsV1_2: newSslCtx <span class="token operator">=</span> SSL_CTX_new<span class="token punctuation">(</span>TLSv1_2_method<span class="token punctuation">(</span><span class="token punctuation">))</span>                                                       ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:220:42: warning: <span class="token string">'TLSv1_1_method()'</span> is deprecated                <span class="token keyword">case</span> .tlsV1_1: newSslCtx <span class="token operator">=</span> SSL_CTX_new<span class="token punctuation">(</span>TLSv1_1_method<span class="token punctuation">(</span><span class="token punctuation">))</span>                                                       ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:221:40: warning: <span class="token string">'TLSv1_method()'</span> is deprecated                <span class="token keyword">case</span> .tlsV1: newSslCtx <span class="token operator">=</span> SSL_CTX_new<span class="token punctuation">(</span>TLSv1_method<span class="token punctuation">(</span><span class="token punctuation">))</span>                                                     ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:219:42: warning: <span class="token string">'TLSv1_2_method()'</span> is deprecated                <span class="token keyword">case</span> .tlsV1_2: newSslCtx <span class="token operator">=</span> SSL_CTX_new<span class="token punctuation">(</span>TLSv1_2_method<span class="token punctuation">(</span><span class="token punctuation">))</span>                                                       ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:220:42: warning: <span class="token string">'TLSv1_1_method()'</span> is deprecated                <span class="token keyword">case</span> .tlsV1_1: newSslCtx <span class="token operator">=</span> SSL_CTX_new<span class="token punctuation">(</span>TLSv1_1_method<span class="token punctuation">(</span><span class="token punctuation">))</span>                                                       ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-Net-tencent/Sources/PerfectNet/NetTCPSSL.swift:221:40: warning: <span class="token string">'TLSv1_method()'</span> is deprecated                <span class="token keyword">case</span> .tlsV1: newSslCtx <span class="token operator">=</span> SSL_CTX_new<span class="token punctuation">(</span>TLSv1_method<span class="token punctuation">(</span><span class="token punctuation">))</span>                                                     ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:41:15: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTPRequestHeader.Name'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                        public var hashValue: Int <span class="token punctuation">{</span>                                   ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:242:15: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTPResponseHeader.Name'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                        public var hashValue: Int <span class="token punctuation">{</span>                                   ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPMethod.swift:67:14: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTPMethod'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                public var hashValue: Int <span class="token punctuation">{</span>                           ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:41:15: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTPRequestHeader.Name'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                        public var hashValue: Int <span class="token punctuation">{</span>                                   ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:242:15: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTPResponseHeader.Name'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                        public var hashValue: Int <span class="token punctuation">{</span>                                   ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPMethod.swift:67:14: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTPMethod'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                public var hashValue: Int <span class="token punctuation">{</span>                           ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:41:15: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTPRequestHeader.Name'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                        public var hashValue: Int <span class="token punctuation">{</span>                                   ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:242:15: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTPResponseHeader.Name'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                        public var hashValue: Int <span class="token punctuation">{</span>                                   ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPMethod.swift:67:14: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTPMethod'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                public var hashValue: Int <span class="token punctuation">{</span>                           ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:41:15: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTPRequestHeader.Name'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                        public var hashValue: Int <span class="token punctuation">{</span>                                   ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:242:15: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTPResponseHeader.Name'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                        public var hashValue: Int <span class="token punctuation">{</span>                                   ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPMethod.swift:67:14: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTPMethod'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                public var hashValue: Int <span class="token punctuation">{</span>                           ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:41:15: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTPRequestHeader.Name'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                        public var hashValue: Int <span class="token punctuation">{</span>                                   ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPHeaders.swift:242:15: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTPResponseHeader.Name'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                        public var hashValue: Int <span class="token punctuation">{</span>                                   ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/HTTPMethod.swift:67:14: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTPMethod'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                public var hashValue: Int <span class="token punctuation">{</span>                           ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:17: warning: initialization of <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                                        <span class="token builtin class-name">let</span> qPtr <span class="token operator">=</span> UnsafePointer<span class="token operator">&lt;</span>UInt<span class="token operator"><span class="token file-descriptor important">8</span>&gt;</span><span class="token punctuation">(</span>byts<span class="token punctuation">)</span>                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(_:)'</span>                                        <span class="token builtin class-name">let</span> qPtr <span class="token operator">=</span> UnsafePointer<span class="token operator">&lt;</span>UInt<span class="token operator"><span class="token file-descriptor important">8</span>&gt;</span><span class="token punctuation">(</span>byts<span class="token punctuation">)</span>                                                                        ^~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                                        <span class="token builtin class-name">let</span> qPtr <span class="token operator">=</span> UnsafePointer<span class="token operator">&lt;</span>UInt<span class="token operator"><span class="token file-descriptor important">8</span>&gt;</span><span class="token punctuation">(</span>byts<span class="token punctuation">)</span>                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:17: warning: initialization of <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                                        <span class="token builtin class-name">let</span> qPtr <span class="token operator">=</span> UnsafePointer<span class="token operator">&lt;</span>UInt<span class="token operator"><span class="token file-descriptor important">8</span>&gt;</span><span class="token punctuation">(</span>byts<span class="token punctuation">)</span>                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(_:)'</span>                                        <span class="token builtin class-name">let</span> qPtr <span class="token operator">=</span> UnsafePointer<span class="token operator">&lt;</span>UInt<span class="token operator"><span class="token file-descriptor important">8</span>&gt;</span><span class="token punctuation">(</span>byts<span class="token punctuation">)</span>                                                                        ^~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                                        <span class="token builtin class-name">let</span> qPtr <span class="token operator">=</span> UnsafePointer<span class="token operator">&lt;</span>UInt<span class="token operator"><span class="token file-descriptor important">8</span>&gt;</span><span class="token punctuation">(</span>byts<span class="token punctuation">)</span>                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:17: warning: initialization of <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                                        <span class="token builtin class-name">let</span> qPtr <span class="token operator">=</span> UnsafePointer<span class="token operator">&lt;</span>UInt<span class="token operator"><span class="token file-descriptor important">8</span>&gt;</span><span class="token punctuation">(</span>byts<span class="token punctuation">)</span>                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(_:)'</span>                                        <span class="token builtin class-name">let</span> qPtr <span class="token operator">=</span> UnsafePointer<span class="token operator">&lt;</span>UInt<span class="token operator"><span class="token file-descriptor important">8</span>&gt;</span><span class="token punctuation">(</span>byts<span class="token punctuation">)</span>                                                                        ^~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                                        <span class="token builtin class-name">let</span> qPtr <span class="token operator">=</span> UnsafePointer<span class="token operator">&lt;</span>UInt<span class="token operator"><span class="token file-descriptor important">8</span>&gt;</span><span class="token punctuation">(</span>byts<span class="token punctuation">)</span>                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:17: warning: initialization of <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                                        <span class="token builtin class-name">let</span> qPtr <span class="token operator">=</span> UnsafePointer<span class="token operator">&lt;</span>UInt<span class="token operator"><span class="token file-descriptor important">8</span>&gt;</span><span class="token punctuation">(</span>byts<span class="token punctuation">)</span>                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(_:)'</span>                                        <span class="token builtin class-name">let</span> qPtr <span class="token operator">=</span> UnsafePointer<span class="token operator">&lt;</span>UInt<span class="token operator"><span class="token file-descriptor important">8</span>&gt;</span><span class="token punctuation">(</span>byts<span class="token punctuation">)</span>                                                                        ^~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                                        <span class="token builtin class-name">let</span> qPtr <span class="token operator">=</span> UnsafePointer<span class="token operator">&lt;</span>UInt<span class="token operator"><span class="token file-descriptor important">8</span>&gt;</span><span class="token punctuation">(</span>byts<span class="token punctuation">)</span>                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:17: warning: initialization of <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                                        <span class="token builtin class-name">let</span> qPtr <span class="token operator">=</span> UnsafePointer<span class="token operator">&lt;</span>UInt<span class="token operator"><span class="token file-descriptor important">8</span>&gt;</span><span class="token punctuation">(</span>byts<span class="token punctuation">)</span>                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(_:)'</span>                                        <span class="token builtin class-name">let</span> qPtr <span class="token operator">=</span> UnsafePointer<span class="token operator">&lt;</span>UInt<span class="token operator"><span class="token file-descriptor important">8</span>&gt;</span><span class="token punctuation">(</span>byts<span class="token punctuation">)</span>                                                                        ^~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTP-tencent/Sources/PerfectHTTP/MimeReader.swift:362:38: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                                        <span class="token builtin class-name">let</span> qPtr <span class="token operator">=</span> UnsafePointer<span class="token operator">&lt;</span>UInt<span class="token operator"><span class="token file-descriptor important">8</span>&gt;</span><span class="token punctuation">(</span>byts<span class="token punctuation">)</span>                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTP2Session'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                var hashValue: Int <span class="token punctuation">{</span> <span class="token builtin class-name">return</span> Int<span class="token punctuation">(</span>net.fd.fd<span class="token punctuation">)</span> <span class="token punctuation">}</span>                    ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of <span class="token string">'UnsafeMutablePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(mutating:)'</span>                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                                                        ^~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTP2Session'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                var hashValue: Int <span class="token punctuation">{</span> <span class="token builtin class-name">return</span> Int<span class="token punctuation">(</span>net.fd.fd<span class="token punctuation">)</span> <span class="token punctuation">}</span>                    ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of <span class="token string">'UnsafeMutablePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(mutating:)'</span>                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                                                        ^~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTP2Session'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                var hashValue: Int <span class="token punctuation">{</span> <span class="token builtin class-name">return</span> Int<span class="token punctuation">(</span>net.fd.fd<span class="token punctuation">)</span> <span class="token punctuation">}</span>                    ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of <span class="token string">'UnsafeMutablePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(mutating:)'</span>                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                                                        ^~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTP2Session'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                var hashValue: Int <span class="token punctuation">{</span> <span class="token builtin class-name">return</span> Int<span class="token punctuation">(</span>net.fd.fd<span class="token punctuation">)</span> <span class="token punctuation">}</span>                    ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of <span class="token string">'UnsafeMutablePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(mutating:)'</span>                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                                                        ^~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTP2Session'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                var hashValue: Int <span class="token punctuation">{</span> <span class="token builtin class-name">return</span> Int<span class="token punctuation">(</span>net.fd.fd<span class="token punctuation">)</span> <span class="token punctuation">}</span>                    ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of <span class="token string">'UnsafeMutablePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(mutating:)'</span>                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                                                        ^~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTP2Session'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                var hashValue: Int <span class="token punctuation">{</span> <span class="token builtin class-name">return</span> Int<span class="token punctuation">(</span>net.fd.fd<span class="token punctuation">)</span> <span class="token punctuation">}</span>                    ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of <span class="token string">'UnsafeMutablePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(mutating:)'</span>                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                                                        ^~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTP2Session'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                var hashValue: Int <span class="token punctuation">{</span> <span class="token builtin class-name">return</span> Int<span class="token punctuation">(</span>net.fd.fd<span class="token punctuation">)</span> <span class="token punctuation">}</span>                    ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of <span class="token string">'UnsafeMutablePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(mutating:)'</span>                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                                                        ^~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTP2Session'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                var hashValue: Int <span class="token punctuation">{</span> <span class="token builtin class-name">return</span> Int<span class="token punctuation">(</span>net.fd.fd<span class="token punctuation">)</span> <span class="token punctuation">}</span>                    ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of <span class="token string">'UnsafeMutablePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(mutating:)'</span>                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                                                        ^~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP2/HTTP2Session.swift:73:7: warning: <span class="token string">'Hashable.hashValue'</span> is deprecated as a protocol requirement<span class="token punctuation">;</span> conform <span class="token builtin class-name">type</span> <span class="token string">'HTTP2Session'</span> to <span class="token string">'Hashable'</span> by implementing <span class="token string">'hash(into:)'</span> instead                var hashValue: Int <span class="token punctuation">{</span> <span class="token builtin class-name">return</span> Int<span class="token punctuation">(</span>net.fd.fd<span class="token punctuation">)</span> <span class="token punctuation">}</span>                    ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:21: warning: initialization of <span class="token string">'UnsafeMutablePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(mutating:)'</span>                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                                                        ^~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTPContentCompression.swift:52:52: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                        stream.next_in <span class="token operator">=</span> UnsafeMutablePointer<span class="token punctuation">(</span>mutating: bytes<span class="token punctuation">)</span>                                                                        ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of <span class="token string">'UnsafeMutableRawPointer'</span> results <span class="token keyword">in</span> a dangling pointer                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafeRawPointer'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(mutating:)'</span>                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                                                  ^~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the <span class="token string">'withUnsafeBytes'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    ^~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(_:)'</span>                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of <span class="token string">'UnsafeMutableRawPointer'</span> results <span class="token keyword">in</span> a dangling pointer                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafeRawPointer'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(mutating:)'</span>                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                                                  ^~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the <span class="token string">'withUnsafeBytes'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    ^~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(_:)'</span>                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of <span class="token string">'UnsafeMutableRawPointer'</span> results <span class="token keyword">in</span> a dangling pointer                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafeRawPointer'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(mutating:)'</span>                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                                                  ^~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the <span class="token string">'withUnsafeBytes'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    ^~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(_:)'</span>                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of <span class="token string">'UnsafeMutableRawPointer'</span> results <span class="token keyword">in</span> a dangling pointer                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafeRawPointer'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(mutating:)'</span>                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                                                  ^~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the <span class="token string">'withUnsafeBytes'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    ^~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(_:)'</span>                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of <span class="token string">'UnsafeMutableRawPointer'</span> results <span class="token keyword">in</span> a dangling pointer                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafeRawPointer'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(mutating:)'</span>                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                                                  ^~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the <span class="token string">'withUnsafeBytes'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    ^~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(_:)'</span>                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of <span class="token string">'UnsafeMutableRawPointer'</span> results <span class="token keyword">in</span> a dangling pointer                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafeRawPointer'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(mutating:)'</span>                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                                                  ^~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the <span class="token string">'withUnsafeBytes'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    ^~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(_:)'</span>                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of <span class="token string">'UnsafeMutableRawPointer'</span> results <span class="token keyword">in</span> a dangling pointer                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafeRawPointer'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(mutating:)'</span>                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                                                  ^~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the <span class="token string">'withUnsafeBytes'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    ^~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(_:)'</span>                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of <span class="token string">'UnsafeMutableRawPointer'</span> results <span class="token keyword">in</span> a dangling pointer                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafeRawPointer'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(mutating:)'</span>                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                                                  ^~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the <span class="token string">'withUnsafeBytes'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    ^~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(_:)'</span>                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:44: warning: initialization of <span class="token string">'UnsafeMutableRawPointer'</span> results <span class="token keyword">in</span> a dangling pointer                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafeRawPointer'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(mutating:)'</span>                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                                                  ^~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:386:78: note: use the <span class="token string">'withUnsafeBytes'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                        lastHeaderName <span class="token operator">=</span> String<span class="token punctuation">(</span>validatingUTF8: UnsafeMutableRawPointer<span class="token punctuation">(</span>mutating: workingBuffer<span class="token punctuation">)</span>.assumingMemoryBound<span class="token punctuation">(</span>to: Int8.self<span class="token punctuation">))</span>                                                                                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:7: warning: initialization of <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> results <span class="token keyword">in</span> a dangling pointer                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    ^~~~~~~~~~~~~~~~/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: implicit argument conversion from <span class="token string">'[UInt8]'</span> to <span class="token string">'UnsafePointer&lt;UInt8&gt;'</span> produces a pointer valid only <span class="token keyword">for</span> the duration of the call to <span class="token string">'init(_:)'</span>                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                  ^/home/Code/Server-tencet2/PerfectTemplate/.build/checkouts/Perfect-HTTPServer-tencent/Sources/PerfectHTTPServer/HTTP11/HTTP11Request.swift:467:21: note: use the <span class="token string">'withUnsafeBufferPointer'</span> method on Array <span class="token keyword">in</span> order to explicitly convert argument to buffer pointer valid <span class="token keyword">for</span> a defined scope                _ <span class="token operator">=</span> UnsafePointer<span class="token punctuation">(</span>b<span class="token punctuation">)</span>.withMemoryRebound<span class="token punctuation">(</span>to: Int8.self, capacity: b.count<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                  ^<span class="token punctuation">[</span><span class="token number">88</span>/88<span class="token punctuation">]</span> Linking PerfectTemplateroot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="token comment"># .build/debug/PerfectTemplate</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Starting HTTP server localhost on <span class="token number">0.0</span>.0.0:8181^Croot@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2/PerfectTemplate<span class="token comment"># cd ..</span>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code/Server-tencet2<span class="token comment"># cd ..</span>root@iZwz9ir4og87e0nnfrmugkZ:/home/Code<span class="token comment"># cd ..</span>root@iZwz9ir4og87e0nnfrmugkZ:/home<span class="token comment"># mkdir WebService</span>root@iZwz9ir4og87e0nnfrmugkZ:/home<span class="token comment"># cd WebService</span>root@iZwz9ir4og87e0nnfrmugkZ:/home/WebService<span class="token comment"># swift package init --type=executable</span>Creating executable package: WebServiceCreating Package.swiftCreating README.mdCreating .gitignoreCreating Sources/Creating Sources/WebService/main.swiftCreating Tests/Creating Tests/LinuxMain.swiftCreating Tests/WebServiceTests/Creating Tests/WebServiceTests/WebServiceTests.swiftCreating Tests/WebServiceTests/XCTestManifests.swiftroot@iZwz9ir4og87e0nnfrmugkZ:/home/WebService<span class="token comment"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git发布tag</title>
      <link href="/posts/40815.html"/>
      <url>/posts/40815.html</url>
      
        <content type="html"><![CDATA[<h1 id="git发布tag"><a href="#git发布tag" class="headerlink" title="git发布tag"></a>git发布tag</h1><p>========================<br>有些命令行老是要找半天，这里记录下git发布tag<br>举例来说，要发布一个3.3.0的tag ，就用<code>git tag 3.3.0</code><br>然后推送到远程仓库用<code>git push origin 3.3.0</code>，注意<code>origin</code>不能省略<br>删除tag用<code>git tag -d 3.3.0</code><br>查看tag用<code>git tag</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">zhangsaidong@zhangsaidongs-MacBook-Pro Perfect-HTTP-tencent % <span class="token function">git</span> tag <span class="token number">3.3</span>.0zhangsaidong@zhangsaidongs-MacBook-Pro Perfect-HTTP-tencent % <span class="token function">git</span> push <span class="token number">3.3</span>.0fatal: <span class="token string">'3.3.0'</span> does not appear to be a <span class="token function">git</span> repositoryfatal: Could not <span class="token builtin class-name">read</span> from remote repository.Please <span class="token function">make</span> sure you have the correct access rightsand the repository exists.zhangsaidong@zhangsaidongs-MacBook-Pro Perfect-HTTP-tencent % <span class="token function">git</span> push origin <span class="token number">3.3</span>.0Total <span class="token number">0</span> <span class="token punctuation">(</span>delta <span class="token number">0</span><span class="token punctuation">)</span>, reused <span class="token number">0</span> <span class="token punctuation">(</span>delta <span class="token number">0</span><span class="token punctuation">)</span>To https://e.coding.net/Zhangsaidong/server-tencet2/Perfect-HTTP-tencent.git * <span class="token punctuation">[</span>new tag<span class="token punctuation">]</span>         <span class="token number">3.3</span>.0 -<span class="token operator">&gt;</span> <span class="token number">3.3</span>.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 版本控制git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac命令行关闭端口</title>
      <link href="/posts/15967.html"/>
      <url>/posts/15967.html</url>
      
        <content type="html"><![CDATA[<h1 id="Mac命令行关闭端口"><a href="#Mac命令行关闭端口" class="headerlink" title="Mac命令行关闭端口"></a>Mac命令行关闭端口</h1><p>========================</p><h2 id="lsof-i-端口号"><a href="#lsof-i-端口号" class="headerlink" title="lsof -i:端口号"></a>lsof -i:端口号</h2><p>这里项目PefectTemplate占用了8181端口号，因此我输入的是<code>lsof -i:8181</code>，可以看到PerfectTemplate的进程ID为1869。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Mac%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%85%B3%E9%97%AD%E7%AB%AF%E5%8F%A3/lsof.png" alt="查看端口号"></p><h2 id="kill-PID"><a href="#kill-PID" class="headerlink" title="kill PID"></a>kill PID</h2><p>得到PID为1869后，我需要关闭端口，只需要使用<code>kill 1869</code>即可。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">zhangsaidong@zhangsaidongs-MacBook-Pro PerfectTemplate % <span class="token function">lsof</span> -i:8181COMMAND    PID         <span class="token environment constant">USER</span>   FD   TYPE            DEVICE SIZE/OFF NODE NAMEGoogle     <span class="token number">574</span> zhangsaidong   38u  IPv4 0xe91302581543067      0t0  TCP localhost:56525-<span class="token operator">&gt;</span>localhost:8181 <span class="token punctuation">(</span>ESTABLISHED<span class="token punctuation">)</span>Google     <span class="token number">574</span> zhangsaidong   44u  IPv4 0xe91302581f1b067      0t0  TCP localhost:56526-<span class="token operator">&gt;</span>localhost:8181 <span class="token punctuation">(</span>ESTABLISHED<span class="token punctuation">)</span>PerfectTe <span class="token number">1869</span> zhangsaidong    3u  IPv4 0xe91302587abea7f      0t0  TCP *:8181 <span class="token punctuation">(</span>LISTEN<span class="token punctuation">)</span>PerfectTe <span class="token number">1869</span> zhangsaidong    4u  IPv4 0xe91302582798067      0t0  TCP localhost:8181-<span class="token operator">&gt;</span>localhost:56525 <span class="token punctuation">(</span>ESTABLISHED<span class="token punctuation">)</span>PerfectTe <span class="token number">1869</span> zhangsaidong    5u  IPv4 0xe91302579eaa807      0t0  TCP localhost:8181-<span class="token operator">&gt;</span>localhost:56526 <span class="token punctuation">(</span>ESTABLISHED<span class="token punctuation">)</span>zhangsaidong@zhangsaidongs-MacBook-Pro PerfectTemplate % <span class="token function">kill</span> <span class="token number">1869</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h2><h3 id="关闭前"><a href="#关闭前" class="headerlink" title="关闭前"></a>关闭前</h3><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Mac%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%85%B3%E9%97%AD%E7%AB%AF%E5%8F%A3/%E5%85%B3%E9%97%AD%E5%89%8D.png" alt="关闭前"></p><h3 id="关闭后"><a href="#关闭后" class="headerlink" title="关闭后"></a>关闭后</h3><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Mac%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%85%B3%E9%97%AD%E7%AB%AF%E5%8F%A3/%E5%85%B3%E9%97%AD%E5%90%8E.png" alt="关闭后"><br>至此端口被成功关闭。</p>]]></content>
      
      
      <categories>
          
          <category> 脚本语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift多线程摘录</title>
      <link href="/posts/58771.html"/>
      <url>/posts/58771.html</url>
      
        <content type="html"><![CDATA[<h1 id="Swift-多线程摘录"><a href="#Swift-多线程摘录" class="headerlink" title="Swift 多线程摘录"></a>Swift 多线程摘录</h1><p>========================</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210316Swift%E5%A4%9A%E7%BA%BF%E7%A8%8B/Swift%E5%A4%9A%E7%BA%BF%E7%A8%8B.png" alt="Swift多线程"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> 多线程 </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQLite.swift使用</title>
      <link href="/posts/63335.html"/>
      <url>/posts/63335.html</url>
      
        <content type="html"><![CDATA[<h1 id="SQLite-swift使用"><a href="#SQLite-swift使用" class="headerlink" title="SQLite.swift使用"></a>SQLite.swift使用</h1><p>========================<br>对于这个，我只想上代码。</p><h2 id="数据库代码示例"><a href="#数据库代码示例" class="headerlink" title="数据库代码示例"></a>数据库代码示例</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token comment">//</span><span class="token comment">//  DataBase.swift</span><span class="token comment">//  RunInto</span><span class="token comment">//</span><span class="token comment">//  Created by 张赛东（手机：15674119605） on 2021/3/3.</span><span class="token comment">//  Copyright © 2021 adong666666. All rights reserved.</span><span class="token comment">//</span><span class="token keyword">import</span> <span class="token class-name">Foundation</span><span class="token keyword">import</span> <span class="token class-name">SQLite</span><span class="token keyword">struct</span>  <span class="token class-name">DataCenterConstant</span> <span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">let</span> dbName <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"db.sqlite"</span></span>    <span class="token keyword">static</span> <span class="token keyword">let</span> dbFilePath <span class="token operator">=</span> <span class="token class-name">NSHomeDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string-literal"><span class="token string">"/Documents/"</span></span> <span class="token operator">+</span> <span class="token class-name">DataCenterConstant</span><span class="token punctuation">.</span>dbName<span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">DataBase</span> <span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">let</span> shared <span class="token operator">=</span> <span class="token class-name">DataBase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> dataBase<span class="token punctuation">:</span> <span class="token class-name">Connection</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token keyword">do</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">try</span> <span class="token class-name">Connection</span><span class="token punctuation">(</span><span class="token class-name">DataCenterConstant</span><span class="token punctuation">.</span>dbFilePath<span class="token punctuation">)</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>            <span class="token function">assertionFailure</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Fail to Create DataBase"</span></span><span class="token punctuation">)</span>            <span class="token function">debugPrint</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token nil constant">nil</span>    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">var</span> cuturalRelicsIntroduction <span class="token operator">=</span> <span class="token class-name">CulturalRelicsIntroduction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        cuturalRelicsIntroduction<span class="token punctuation">.</span><span class="token function">setupTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">// MARK: - Query</span><span class="token keyword">extension</span> <span class="token class-name">DataBase</span> <span class="token punctuation">{</span>    <span class="token comment">// 查询所有文物介绍</span>    <span class="token keyword">func</span> <span class="token function-definition function">queryCulturalRelicsIntroduction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token class-name">Introduction</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> intro <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">Introduction</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">do</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> value <span class="token keyword">in</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token keyword">try</span> <span class="token class-name">DataBase</span><span class="token punctuation">.</span>dataBase<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">prepare</span><span class="token punctuation">(</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>table<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">let</span> idForDB <span class="token operator">=</span> value<span class="token punctuation">[</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>id<span class="token punctuation">]</span>                <span class="token keyword">let</span> name <span class="token operator">=</span> value<span class="token punctuation">[</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>name<span class="token punctuation">]</span>                <span class="token keyword">let</span> introduction <span class="token operator">=</span> value<span class="token punctuation">[</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>introduction<span class="token punctuation">]</span>                <span class="token keyword">let</span> photo <span class="token operator">=</span> value<span class="token punctuation">[</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>photo<span class="token punctuation">]</span>                <span class="token keyword">let</span> remark <span class="token operator">=</span> value<span class="token punctuation">[</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>remark<span class="token punctuation">]</span>                <span class="token keyword">let</span> tempIntroduction <span class="token operator">=</span> <span class="token class-name">Introduction</span><span class="token punctuation">(</span>idForDataBase<span class="token punctuation">:</span> idForDB<span class="token punctuation">,</span> image<span class="token punctuation">:</span> photo<span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span>introduction<span class="token punctuation">)</span><span class="token punctuation">,</span> date<span class="token punctuation">:</span> <span class="token class-name">I18n</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span>remark<span class="token punctuation">)</span><span class="token punctuation">)</span>                intro<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>tempIntroduction<span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>            <span class="token function">assertionFailure</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">error</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> intro    <span class="token punctuation">}</span>    <span class="token comment">//查询个别文物介绍</span>    <span class="token keyword">func</span> <span class="token function-definition function">queryIntroduction</span><span class="token punctuation">(</span>with id<span class="token punctuation">:</span> <span class="token class-name">Int64</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Introduction</span><span class="token operator">?</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> filter <span class="token operator">=</span> cuturalRelicsIntroduction<span class="token punctuation">.</span>table<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>id <span class="token operator">==</span> cuturalRelicsIntroduction<span class="token punctuation">.</span>id<span class="token punctuation">)</span>        <span class="token keyword">do</span> <span class="token punctuation">{</span>            <span class="token keyword">guard</span> <span class="token keyword">let</span> pluck <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">DataBase</span><span class="token punctuation">.</span>dataBase<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">pluck</span><span class="token punctuation">(</span>filter<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token nil constant">nil</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span>  <span class="token class-name">Introduction</span><span class="token punctuation">(</span>idForDataBase<span class="token punctuation">:</span> pluck<span class="token punctuation">[</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>id<span class="token punctuation">]</span><span class="token punctuation">,</span>                                 image<span class="token punctuation">:</span> pluck<span class="token punctuation">[</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>photo<span class="token punctuation">]</span><span class="token punctuation">,</span>                                 title<span class="token punctuation">:</span> pluck<span class="token punctuation">[</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>name<span class="token punctuation">]</span><span class="token punctuation">,</span>                                 text<span class="token punctuation">:</span> pluck<span class="token punctuation">[</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>introduction<span class="token punctuation">]</span><span class="token punctuation">,</span>                                 date<span class="token punctuation">:</span> pluck<span class="token punctuation">[</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>remark<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>            <span class="token function">assertionFailure</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token nil constant">nil</span>    <span class="token punctuation">}</span>    <span class="token keyword">func</span> <span class="token function-definition function">queryIntroduction</span><span class="token punctuation">(</span>with name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Introduction</span><span class="token operator">?</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> filter <span class="token operator">=</span> cuturalRelicsIntroduction<span class="token punctuation">.</span>table<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>name <span class="token operator">==</span> cuturalRelicsIntroduction<span class="token punctuation">.</span>name<span class="token punctuation">)</span>        <span class="token keyword">do</span> <span class="token punctuation">{</span>            <span class="token keyword">guard</span> <span class="token keyword">let</span> pluck <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">DataBase</span><span class="token punctuation">.</span>dataBase<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">pluck</span><span class="token punctuation">(</span>filter<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token nil constant">nil</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span>  <span class="token class-name">Introduction</span><span class="token punctuation">(</span>idForDataBase<span class="token punctuation">:</span> pluck<span class="token punctuation">[</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>id<span class="token punctuation">]</span><span class="token punctuation">,</span>                                 image<span class="token punctuation">:</span> pluck<span class="token punctuation">[</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>photo<span class="token punctuation">]</span><span class="token punctuation">,</span>                                 title<span class="token punctuation">:</span> pluck<span class="token punctuation">[</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>name<span class="token punctuation">]</span><span class="token punctuation">,</span>                                 text<span class="token punctuation">:</span> pluck<span class="token punctuation">[</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>introduction<span class="token punctuation">]</span><span class="token punctuation">,</span>                                 date<span class="token punctuation">:</span> pluck<span class="token punctuation">[</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>remark<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>            <span class="token function">assertionFailure</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token nil constant">nil</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">// MARK: - Insert</span><span class="token keyword">extension</span> <span class="token class-name">DataBase</span> <span class="token punctuation">{</span>    <span class="token comment">//插入文物介绍</span>    <span class="token attribute atrule">@discardableResult</span>    <span class="token keyword">func</span> <span class="token function-definition function">insertCulturalRelicsIntroduction</span><span class="token punctuation">(</span>with intro<span class="token punctuation">:</span> <span class="token class-name">Introduction</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token class-name">Int64</span><span class="token operator">?</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">do</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">try</span> <span class="token class-name">DataBase</span><span class="token punctuation">.</span>dataBase<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">pluck</span><span class="token punctuation">(</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>table<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>id <span class="token operator">==</span> intro<span class="token punctuation">.</span>idForDataBase<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token nil constant">nil</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token nil constant">nil</span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"the cultural relics exsit"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">}</span>            <span class="token keyword">let</span> insert <span class="token operator">=</span> cuturalRelicsIntroduction<span class="token punctuation">.</span>table<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>name <span class="token operator">&lt;-</span> intro<span class="token punctuation">.</span>title<span class="token punctuation">,</span>                                                                cuturalRelicsIntroduction<span class="token punctuation">.</span>id <span class="token operator">&lt;-</span> intro<span class="token punctuation">.</span>idForDataBase<span class="token punctuation">,</span>                                                                cuturalRelicsIntroduction<span class="token punctuation">.</span>introduction <span class="token operator">&lt;-</span> intro<span class="token punctuation">.</span>text<span class="token punctuation">,</span>                                                                cuturalRelicsIntroduction<span class="token punctuation">.</span>photo <span class="token operator">&lt;-</span> intro<span class="token punctuation">.</span>image<span class="token punctuation">,</span>                                                                cuturalRelicsIntroduction<span class="token punctuation">.</span>remark <span class="token operator">&lt;-</span> intro<span class="token punctuation">.</span>date<span class="token punctuation">)</span>            <span class="token keyword">let</span> insertIntroduction <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">?</span> <span class="token class-name">DataBase</span><span class="token punctuation">.</span>dataBase<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>insert<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span>insertIntroduction<span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"inserted successfully"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>            <span class="token function">assertionFailure</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span><span class="token punctuation">(</span><span class="token nil constant">nil</span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"inserted unsuccessfully"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">// MARK: - Delete</span><span class="token keyword">extension</span> <span class="token class-name">DataBase</span> <span class="token punctuation">{</span>    <span class="token comment">//删除文物介绍</span>    <span class="token attribute atrule">@discardableResult</span>    <span class="token keyword">func</span> <span class="token function-definition function">deletetCulturalRelicsIntroduction</span><span class="token punctuation">(</span>with id<span class="token punctuation">:</span> <span class="token class-name">Int64</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token class-name">Int</span><span class="token operator">?</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> filter <span class="token operator">=</span> cuturalRelicsIntroduction<span class="token punctuation">.</span>table<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>id <span class="token operator">==</span> cuturalRelicsIntroduction<span class="token punctuation">.</span>id<span class="token punctuation">)</span>        <span class="token keyword">do</span> <span class="token punctuation">{</span>            <span class="token keyword">let</span> delete <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">DataBase</span><span class="token punctuation">.</span>dataBase<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>filter<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span>delete<span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"deleted successfully"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>            <span class="token function">assertionFailure</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token nil constant">nil</span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"deleted unsuccessfully"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token attribute atrule">@discardableResult</span>    <span class="token keyword">func</span> <span class="token function-definition function">deletetCulturalRelicsIntroduction</span><span class="token punctuation">(</span>with name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token class-name">Int</span><span class="token operator">?</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> filter <span class="token operator">=</span> cuturalRelicsIntroduction<span class="token punctuation">.</span>table<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>name <span class="token operator">==</span> cuturalRelicsIntroduction<span class="token punctuation">.</span>name<span class="token punctuation">)</span>        <span class="token keyword">do</span> <span class="token punctuation">{</span>            <span class="token keyword">let</span> deleteIntroduction <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">DataBase</span><span class="token punctuation">.</span>dataBase<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>filter<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span>deleteIntroduction<span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"deleted successfully"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>            <span class="token function">assertionFailure</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token nil constant">nil</span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"deleted unsuccessfully"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">// MARK: - Update</span><span class="token keyword">extension</span> <span class="token class-name">DataBase</span> <span class="token punctuation">{</span>    <span class="token comment">//修改文物介绍数据</span>    <span class="token keyword">func</span> <span class="token function-definition function">update</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> intro<span class="token punctuation">:</span> <span class="token class-name">Introduction</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token class-name">Int</span><span class="token operator">?</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">guard</span> <span class="token punctuation">(</span><span class="token keyword">try</span><span class="token operator">?</span> <span class="token class-name">DataBase</span><span class="token punctuation">.</span>dataBase<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">pluck</span><span class="token punctuation">(</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>table<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>id <span class="token operator">==</span> intro<span class="token punctuation">.</span>idForDataBase<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token nil constant">nil</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token nil constant">nil</span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"the cultural relics not exsit"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">do</span> <span class="token punctuation">{</span>            <span class="token keyword">let</span> update <span class="token operator">=</span> cuturalRelicsIntroduction<span class="token punctuation">.</span>table<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>cuturalRelicsIntroduction<span class="token punctuation">.</span>name <span class="token operator">&lt;-</span> intro<span class="token punctuation">.</span>title<span class="token punctuation">,</span>                                                                cuturalRelicsIntroduction<span class="token punctuation">.</span>id <span class="token operator">&lt;-</span> intro<span class="token punctuation">.</span>idForDataBase<span class="token punctuation">,</span>                                                                cuturalRelicsIntroduction<span class="token punctuation">.</span>introduction <span class="token operator">&lt;-</span> intro<span class="token punctuation">.</span>text<span class="token punctuation">,</span>                                                                cuturalRelicsIntroduction<span class="token punctuation">.</span>photo <span class="token operator">&lt;-</span> intro<span class="token punctuation">.</span>image<span class="token punctuation">,</span>                                                                cuturalRelicsIntroduction<span class="token punctuation">.</span>remark <span class="token operator">&lt;-</span> intro<span class="token punctuation">.</span>date<span class="token punctuation">)</span>            <span class="token keyword">let</span> updateIntroduction <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">DataBase</span><span class="token punctuation">.</span>dataBase<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>update<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span>updateIntroduction<span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"updated successfully"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span>            <span class="token function">assertionFailure</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token nil constant">nil</span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"updated unsuccessfully"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="建表示例"><a href="#建表示例" class="headerlink" title="建表示例"></a>建表示例</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token comment">//</span><span class="token comment">//  CulturalRelicsIntroduction.swift</span><span class="token comment">//  RunInto</span><span class="token comment">//</span><span class="token comment">//  Created by 张赛东（手机：15674119605） on 2021/3/3.</span><span class="token comment">//  Copyright © 2021 adong666666. All rights reserved.</span><span class="token comment">//</span><span class="token keyword">import</span> <span class="token class-name">Foundation</span><span class="token keyword">import</span> <span class="token class-name">SQLite</span><span class="token keyword">class</span> <span class="token class-name">CulturalRelicsIntroduction</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> table <span class="token operator">=</span> <span class="token class-name">Table</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"CulturalRelicsIntroduction"</span></span><span class="token punctuation">)</span>    <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token class-name">Expression</span><span class="token operator">&lt;</span><span class="token class-name">Int64</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"id"</span></span><span class="token punctuation">)</span>    <span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token class-name">Expression</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"name"</span></span><span class="token punctuation">)</span>    <span class="token keyword">let</span> introduction <span class="token operator">=</span> <span class="token class-name">Expression</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"introduction"</span></span><span class="token punctuation">)</span>    <span class="token keyword">let</span> photo <span class="token operator">=</span> <span class="token class-name">Expression</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"photo"</span></span><span class="token punctuation">)</span>    <span class="token keyword">let</span> remark <span class="token operator">=</span> <span class="token class-name">Expression</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"remark"</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">extension</span> <span class="token class-name">CulturalRelicsIntroduction</span> <span class="token punctuation">{</span>    <span class="token keyword">func</span> <span class="token function-definition function">setupTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">do</span> <span class="token punctuation">{</span>            <span class="token keyword">guard</span> <span class="token keyword">let</span> cmd <span class="token operator">=</span> <span class="token function">createTableCMD</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">}</span>            <span class="token keyword">try</span> <span class="token class-name">DataBase</span><span class="token punctuation">.</span>dataBase<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span> <span class="token function">print</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">func</span> <span class="token function-definition function">createTableCMD</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">String</span><span class="token operator">?</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> table<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>ifNotExists<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> primaryKey<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span>            <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>            <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span>introduction<span class="token punctuation">)</span>            <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span>photo<span class="token punctuation">)</span>            <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span>remark<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><p>在合适的地方调用</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">DataBase</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span><span class="token function">insertCulturalRelicsIntroduction</span><span class="token punctuation">(</span>with<span class="token punctuation">:</span> intro<span class="token operator">!</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Help</span><span class="token punctuation">(</span>show<span class="token punctuation">:</span> $showContent<span class="token punctuation">,</span> datas<span class="token punctuation">:</span> <span class="token class-name">DataBase</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span><span class="token function">queryCulturalRelicsIntroduction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="查看sqlite文件"><a href="#查看sqlite文件" class="headerlink" title="查看sqlite文件"></a>查看sqlite文件</h2><p>下载真机的沙盒数据，查看后缀名为.sqlite的文件，即为生成的数据库，在应用商店搜“sqlite”,有很多软件可以查看<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331SQLite.swift%E4%BD%BF%E7%94%A8/%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%BA%93.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/20210331SQLite.swift%E4%BD%BF%E7%94%A8/%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%BA%932.png"></p><h2 id="导出的表"><a href="#导出的表" class="headerlink" title="导出的表"></a>导出的表</h2><table><thead><tr><th align="left">id</th><th align="left">name</th><th align="left">introduction</th><th align="left">photo</th><th align="left">remark</th></tr></thead><tbody><tr><td align="left">20210303063005</td><td align="left">bottle</td><td align="left">郎窑红釉穿带直口瓶，清康熙，高20.8cm，口径6.1cm，足径9.1cm。瓶直口，长颈，垂腹，圈足外撇。足外墙两侧各有一长方形穿孔，可穿系绳带。在容器上系带是对无梁、无系、无扳手的器物进行提拿的传统方法，拆卸容易而又非常实用，也可以使器物在摆放位置上固定，不致被损坏。</td><td align="left">郎窑红釉穿带直口瓶</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063006</td><td align="left">box</td><td align="left">张成是元代雕漆大家，其传世作品被一致认为是雕漆作品里的珍品。张成造款雕漆云纹盘为故宫漆器的代表作品。高3.3cm，口径19.2cm.盘木胎黑漆，内外均雕云纹。堆漆甚厚，晶莹照人，刻工圆润。从此件具款的剔犀圆盘可知张成不仅是剔红高手，剔犀技巧也精湛至极，此盘为研究元代剔犀工艺提供了实例。</td><td align="left">张成造款雕漆云纹盒</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063007</td><td align="left">clock</td><td align="left">黑漆彩绘楼阁群仙祝寿钟为故宫钟表的代表作。高185cm，面宽102cm，侧宽70cm.此钟共有7套机械系统，分别控制走时、报时、景箱内的活动装置等，技术水准相当高。根据记录，从乾隆八年接旨着手设计到十四年完工，历时五年多。</td><td align="left">彩漆描金楼阁式自开门群仙祝寿御制钟</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063008</td><td align="left">cup</td><td align="left">宫廷之宝乾隆款金瓯永固杯为故宫宫廷文物的代表作。高12.5厘米，口径8厘米，足高5厘米，口边刻有回纹。根据清“内务府活计档”记载，乾隆皇帝对此杯的制作十分重视，不仅调用内库黄金、珍珠、宝石等珍贵材料，而且精工细作，曾多次修改，直至皇帝满意为止。因此，该杯一直被清代皇帝视为珍贵的祖传法宝。</td><td align="left">乾隆款金瓯永固杯</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063009</td><td align="left">ear_furnace</td><td align="left">掐丝珐琅缠枝莲纹象耳炉，元，通高13.9cm，口径16cm，足径13.5cm。清宫旧藏。炉铜胎，圆形，鼓腹，象首卷鼻耳，圈足。炉颈部浅蓝釉地，饰黄、白、红、紫四色菊花12朵。腹部宝蓝釉地，饰红、白、黄三色掐丝珐琅缠枝莲花6朵。其下饰莲瓣纹一周。</td><td align="left">掐丝珐琅缠枝莲纹象耳炉</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063010</td><td align="left">grain_furnace</td><td align="left">青玉云龙纹炉为故宫玉器的代表作品。宋代出品，高7.9cm，口径12.8cm.炉青玉质。通体以“工”字纹为底，上饰游龙、祥云和海水纹。器内底阴刻乾隆七言诗一首：“何年庙器赞天经，刻作飞龙殿四灵。毛伯邢侯异周制，祖丁父癸似商形。依然韫匵阅桑海，所惜从薪遇丙叮土气羊脂胥变幻，只余云水淡拖青。”</td><td align="left">青玉云龙纹炉</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063011</td><td align="left">painting</td><td align="left">《清明上河图》为故宫书画代表作品，该画为张择端所作，以精致的工笔记录了北宋末叶、徽宗时代首都汴京(今开封)郊区和城内汴河两岸的建筑和民生。全图分为三个段落。作品以长卷形式，采用散点透视的构图法，将繁杂的景物纳入统一而富于变化的画面中。在5米多长的画卷里，共绘了550多个各色人物。</td><td align="left">清明上河图</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063012</td><td align="left">placard</td><td align="left">西晋陆机的《平复帖》是故宫法帖的代表作品，也是目前存世最早的名人墨迹，内容为陆机向朋友问候疾病的书札。</td><td align="left">平复帖</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063013</td><td align="left">zun</td><td align="left">青铜之宝酗亚方尊为故宫青铜器的代表作品。青铜器的产生是古代中国从野蛮时代走向文明时代的重要标志之一。尊是盛酒器，流行于商早期至春秋战国时期。方尊传世较少。上世纪70年代在山东益都苏埠屯出土了几件带有亚铭文的青铜器，从挖掘的墓穴来看，规模都不小，加上众多带有亚铭记的器物，说明它们所代表的可能是一个大族。</td><td align="left">酗亚方尊</td><td align="left">故宫镇馆之宝</td></tr><tr><td align="left">20210303063014</td><td align="left">magpie</td><td align="left">沈子蕃缂丝《梅鹊图》轴为故宫织绣的代表作品。图轴纵104cm，宽36cm.中国古代缂丝被认为是丝织工艺中最为高贵的品种，古人以“一寸缂丝一寸金”言缂丝作品之珍贵。缂丝之高贵，首先因其耗费工时巨大，以万缕千丝成其工巧，其次，缂技易学难精，虽摹缂书画，并非简单的照葫芦画瓢。</td><td align="left">沈子蕃缂丝《梅鹊图》轴</td><td align="left">故宫镇馆之宝</td></tr></tbody></table><h2 id="导出的JSON"><a href="#导出的JSON" class="headerlink" title="导出的JSON"></a>导出的JSON</h2><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span>  <span class="token punctuation">{</span>    <span class="token property">"photo"</span> <span class="token operator">:</span> <span class="token string">"郎窑红釉穿带直口瓶"</span><span class="token punctuation">,</span>    <span class="token property">"remark"</span> <span class="token operator">:</span> <span class="token string">"故宫镇馆之宝"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"bottle"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span> <span class="token operator">:</span> <span class="token string">"郎窑红釉穿带直口瓶，清康熙，高20.8cm，口径6.1cm，足径9.1cm。瓶直口，长颈，垂腹，圈足外撇。足外墙两侧各有一长方形穿孔，可穿系绳带。在容器上系带是对无梁、无系、无扳手的器物进行提拿的传统方法，拆卸容易而又非常实用，也可以使器物在摆放位置上固定，不致被损坏。"</span><span class="token punctuation">,</span>    <span class="token property">"id"</span> <span class="token operator">:</span> <span class="token number">20210303063005</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    <span class="token property">"id"</span> <span class="token operator">:</span> <span class="token number">20210303063006</span><span class="token punctuation">,</span>    <span class="token property">"remark"</span> <span class="token operator">:</span> <span class="token string">"故宫镇馆之宝"</span><span class="token punctuation">,</span>    <span class="token property">"photo"</span> <span class="token operator">:</span> <span class="token string">"张成造款雕漆云纹盒"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"box"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span> <span class="token operator">:</span> <span class="token string">"张成是元代雕漆大家，其传世作品被一致认为是雕漆作品里的珍品。张成造款雕漆云纹盘为故宫漆器的代表作品。高3.3cm，口径19.2cm.盘木胎黑漆，内外均雕云纹。堆漆甚厚，晶莹照人，刻工圆润。从此件具款的剔犀圆盘可知张成不仅是剔红高手，剔犀技巧也精湛至极，此盘为研究元代剔犀工艺提供了实例。"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    <span class="token property">"id"</span> <span class="token operator">:</span> <span class="token number">20210303063007</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span> <span class="token operator">:</span> <span class="token string">"黑漆彩绘楼阁群仙祝寿钟为故宫钟表的代表作。高185cm，面宽102cm，侧宽70cm.此钟共有7套机械系统，分别控制走时、报时、景箱内的活动装置等，技术水准相当高。根据记录，从乾隆八年接旨着手设计到十四年完工，历时五年多。"</span><span class="token punctuation">,</span>    <span class="token property">"photo"</span> <span class="token operator">:</span> <span class="token string">"彩漆描金楼阁式自开门群仙祝寿御制钟"</span><span class="token punctuation">,</span>    <span class="token property">"remark"</span> <span class="token operator">:</span> <span class="token string">"故宫镇馆之宝"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"clock"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"cup"</span><span class="token punctuation">,</span>    <span class="token property">"photo"</span> <span class="token operator">:</span> <span class="token string">"乾隆款金瓯永固杯"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span> <span class="token operator">:</span> <span class="token string">"宫廷之宝乾隆款金瓯永固杯为故宫宫廷文物的代表作。高12.5厘米，口径8厘米，足高5厘米，口边刻有回纹。根据清“内务府活计档”记载，乾隆皇帝对此杯的制作十分重视，不仅调用内库黄金、珍珠、宝石等珍贵材料，而且精工细作，曾多次修改，直至皇帝满意为止。因此，该杯一直被清代皇帝视为珍贵的祖传法宝。"</span><span class="token punctuation">,</span>    <span class="token property">"id"</span> <span class="token operator">:</span> <span class="token number">20210303063008</span><span class="token punctuation">,</span>    <span class="token property">"remark"</span> <span class="token operator">:</span> <span class="token string">"故宫镇馆之宝"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    <span class="token property">"photo"</span> <span class="token operator">:</span> <span class="token string">"掐丝珐琅缠枝莲纹象耳炉"</span><span class="token punctuation">,</span>    <span class="token property">"remark"</span> <span class="token operator">:</span> <span class="token string">"故宫镇馆之宝"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span> <span class="token operator">:</span> <span class="token string">"掐丝珐琅缠枝莲纹象耳炉，元，通高13.9cm，口径16cm，足径13.5cm。清宫旧藏。炉铜胎，圆形，鼓腹，象首卷鼻耳，圈足。炉颈部浅蓝釉地，饰黄、白、红、紫四色菊花12朵。腹部宝蓝釉地，饰红、白、黄三色掐丝珐琅缠枝莲花6朵。其下饰莲瓣纹一周。"</span><span class="token punctuation">,</span>    <span class="token property">"id"</span> <span class="token operator">:</span> <span class="token number">20210303063009</span><span class="token punctuation">,</span>    <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"ear_furnace"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    <span class="token property">"id"</span> <span class="token operator">:</span> <span class="token number">20210303063010</span><span class="token punctuation">,</span>    <span class="token property">"remark"</span> <span class="token operator">:</span> <span class="token string">"故宫镇馆之宝"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"grain_furnace"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span> <span class="token operator">:</span> <span class="token string">"青玉云龙纹炉为故宫玉器的代表作品。宋代出品，高7.9cm，口径12.8cm.炉青玉质。通体以“工”字纹为底，上饰游龙、祥云和海水纹。器内底阴刻乾隆七言诗一首：“何年庙器赞天经，刻作飞龙殿四灵。毛伯邢侯异周制，祖丁父癸似商形。依然韫匵阅桑海，所惜从薪遇丙叮土气羊脂胥变幻，只余云水淡拖青。”"</span><span class="token punctuation">,</span>    <span class="token property">"photo"</span> <span class="token operator">:</span> <span class="token string">"青玉云龙纹炉"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    <span class="token property">"remark"</span> <span class="token operator">:</span> <span class="token string">"故宫镇馆之宝"</span><span class="token punctuation">,</span>    <span class="token property">"photo"</span> <span class="token operator">:</span> <span class="token string">"清明上河图"</span><span class="token punctuation">,</span>    <span class="token property">"id"</span> <span class="token operator">:</span> <span class="token number">20210303063011</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span> <span class="token operator">:</span> <span class="token string">"《清明上河图》为故宫书画代表作品，该画为张择端所作，以精致的工笔记录了北宋末叶、徽宗时代首都汴京(今开封)郊区和城内汴河两岸的建筑和民生。全图分为三个段落。作品以长卷形式，采用散点透视的构图法，将繁杂的景物纳入统一而富于变化的画面中。在5米多长的画卷里，共绘了550多个各色人物。"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"painting"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    <span class="token property">"photo"</span> <span class="token operator">:</span> <span class="token string">"平复帖"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span> <span class="token operator">:</span> <span class="token string">"西晋陆机的《平复帖》是故宫法帖的代表作品，也是目前存世最早的名人墨迹，内容为陆机向朋友问候疾病的书札。"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"placard"</span><span class="token punctuation">,</span>    <span class="token property">"remark"</span> <span class="token operator">:</span> <span class="token string">"故宫镇馆之宝"</span><span class="token punctuation">,</span>    <span class="token property">"id"</span> <span class="token operator">:</span> <span class="token number">20210303063012</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    <span class="token property">"id"</span> <span class="token operator">:</span> <span class="token number">20210303063013</span><span class="token punctuation">,</span>    <span class="token property">"photo"</span> <span class="token operator">:</span> <span class="token string">"酗亚方尊"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"zun"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span> <span class="token operator">:</span> <span class="token string">"青铜之宝酗亚方尊为故宫青铜器的代表作品。青铜器的产生是古代中国从野蛮时代走向文明时代的重要标志之一。尊是盛酒器，流行于商早期至春秋战国时期。方尊传世较少。上世纪70年代在山东益都苏埠屯出土了几件带有亚铭文的青铜器，从挖掘的墓穴来看，规模都不小，加上众多带有亚铭记的器物，说明它们所代表的可能是一个大族。"</span><span class="token punctuation">,</span>    <span class="token property">"remark"</span> <span class="token operator">:</span> <span class="token string">"故宫镇馆之宝"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    <span class="token property">"id"</span> <span class="token operator">:</span> <span class="token number">20210303063014</span><span class="token punctuation">,</span>    <span class="token property">"name"</span> <span class="token operator">:</span> <span class="token string">"magpie"</span><span class="token punctuation">,</span>    <span class="token property">"photo"</span> <span class="token operator">:</span> <span class="token string">"沈子蕃缂丝《梅鹊图》轴"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span> <span class="token operator">:</span> <span class="token string">"沈子蕃缂丝《梅鹊图》轴为故宫织绣的代表作品。图轴纵104cm，宽36cm.中国古代缂丝被认为是丝织工艺中最为高贵的品种，古人以“一寸缂丝一寸金”言缂丝作品之珍贵。缂丝之高贵，首先因其耗费工时巨大，以万缕千丝成其工巧，其次，缂技易学难精，虽摹缂书画，并非简单的照葫芦画瓢。"</span><span class="token punctuation">,</span>    <span class="token property">"remark"</span> <span class="token operator">:</span> <span class="token string">"故宫镇馆之宝"</span>  <span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="导出的插入语句"><a href="#导出的插入语句" class="headerlink" title="导出的插入语句"></a>导出的插入语句</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">BEGIN</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> CulturalRelicsIntroduction<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> introduction<span class="token punctuation">,</span> photo<span class="token punctuation">,</span> remark<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">20210303063005</span><span class="token punctuation">,</span> <span class="token string">'bottle'</span><span class="token punctuation">,</span> <span class="token string">'郎窑红釉穿带直口瓶，清康熙，高20.8cm，口径6.1cm，足径9.1cm。瓶直口，长颈，垂腹，圈足外撇。足外墙两侧各有一长方形穿孔，可穿系绳带。在容器上系带是对无梁、无系、无扳手的器物进行提拿的传统方法，拆卸容易而又非常实用，也可以使器物在摆放位置上固定，不致被损坏。'</span><span class="token punctuation">,</span> <span class="token string">'郎窑红釉穿带直口瓶'</span><span class="token punctuation">,</span> <span class="token string">'故宫镇馆之宝'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> CulturalRelicsIntroduction<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> introduction<span class="token punctuation">,</span> photo<span class="token punctuation">,</span> remark<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">20210303063006</span><span class="token punctuation">,</span> <span class="token string">'box'</span><span class="token punctuation">,</span> <span class="token string">'张成是元代雕漆大家，其传世作品被一致认为是雕漆作品里的珍品。张成造款雕漆云纹盘为故宫漆器的代表作品。高3.3cm，口径19.2cm.盘木胎黑漆，内外均雕云纹。堆漆甚厚，晶莹照人，刻工圆润。从此件具款的剔犀圆盘可知张成不仅是剔红高手，剔犀技巧也精湛至极，此盘为研究元代剔犀工艺提供了实例。'</span><span class="token punctuation">,</span> <span class="token string">'张成造款雕漆云纹盒'</span><span class="token punctuation">,</span> <span class="token string">'故宫镇馆之宝'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> CulturalRelicsIntroduction<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> introduction<span class="token punctuation">,</span> photo<span class="token punctuation">,</span> remark<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">20210303063007</span><span class="token punctuation">,</span> <span class="token string">'clock'</span><span class="token punctuation">,</span> <span class="token string">'黑漆彩绘楼阁群仙祝寿钟为故宫钟表的代表作。高185cm，面宽102cm，侧宽70cm.此钟共有7套机械系统，分别控制走时、报时、景箱内的活动装置等，技术水准相当高。根据记录，从乾隆八年接旨着手设计到十四年完工，历时五年多。'</span><span class="token punctuation">,</span> <span class="token string">'彩漆描金楼阁式自开门群仙祝寿御制钟'</span><span class="token punctuation">,</span> <span class="token string">'故宫镇馆之宝'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> CulturalRelicsIntroduction<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> introduction<span class="token punctuation">,</span> photo<span class="token punctuation">,</span> remark<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">20210303063008</span><span class="token punctuation">,</span> <span class="token string">'cup'</span><span class="token punctuation">,</span> <span class="token string">'宫廷之宝乾隆款金瓯永固杯为故宫宫廷文物的代表作。高12.5厘米，口径8厘米，足高5厘米，口边刻有回纹。根据清“内务府活计档”记载，乾隆皇帝对此杯的制作十分重视，不仅调用内库黄金、珍珠、宝石等珍贵材料，而且精工细作，曾多次修改，直至皇帝满意为止。因此，该杯一直被清代皇帝视为珍贵的祖传法宝。'</span><span class="token punctuation">,</span> <span class="token string">'乾隆款金瓯永固杯'</span><span class="token punctuation">,</span> <span class="token string">'故宫镇馆之宝'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> CulturalRelicsIntroduction<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> introduction<span class="token punctuation">,</span> photo<span class="token punctuation">,</span> remark<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">20210303063009</span><span class="token punctuation">,</span> <span class="token string">'ear_furnace'</span><span class="token punctuation">,</span> <span class="token string">'掐丝珐琅缠枝莲纹象耳炉，元，通高13.9cm，口径16cm，足径13.5cm。清宫旧藏。炉铜胎，圆形，鼓腹，象首卷鼻耳，圈足。炉颈部浅蓝釉地，饰黄、白、红、紫四色菊花12朵。腹部宝蓝釉地，饰红、白、黄三色掐丝珐琅缠枝莲花6朵。其下饰莲瓣纹一周。'</span><span class="token punctuation">,</span> <span class="token string">'掐丝珐琅缠枝莲纹象耳炉'</span><span class="token punctuation">,</span> <span class="token string">'故宫镇馆之宝'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> CulturalRelicsIntroduction<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> introduction<span class="token punctuation">,</span> photo<span class="token punctuation">,</span> remark<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">20210303063010</span><span class="token punctuation">,</span> <span class="token string">'grain_furnace'</span><span class="token punctuation">,</span> <span class="token string">'青玉云龙纹炉为故宫玉器的代表作品。宋代出品，高7.9cm，口径12.8cm.炉青玉质。通体以“工”字纹为底，上饰游龙、祥云和海水纹。器内底阴刻乾隆七言诗一首：“何年庙器赞天经，刻作飞龙殿四灵。毛伯邢侯异周制，祖丁父癸似商形。依然韫匵阅桑海，所惜从薪遇丙叮土气羊脂胥变幻，只余云水淡拖青。”'</span><span class="token punctuation">,</span> <span class="token string">'青玉云龙纹炉'</span><span class="token punctuation">,</span> <span class="token string">'故宫镇馆之宝'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> CulturalRelicsIntroduction<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> introduction<span class="token punctuation">,</span> photo<span class="token punctuation">,</span> remark<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">20210303063011</span><span class="token punctuation">,</span> <span class="token string">'painting'</span><span class="token punctuation">,</span> <span class="token string">'《清明上河图》为故宫书画代表作品，该画为张择端所作，以精致的工笔记录了北宋末叶、徽宗时代首都汴京(今开封)郊区和城内汴河两岸的建筑和民生。全图分为三个段落。作品以长卷形式，采用散点透视的构图法，将繁杂的景物纳入统一而富于变化的画面中。在5米多长的画卷里，共绘了550多个各色人物。'</span><span class="token punctuation">,</span> <span class="token string">'清明上河图'</span><span class="token punctuation">,</span> <span class="token string">'故宫镇馆之宝'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> CulturalRelicsIntroduction<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> introduction<span class="token punctuation">,</span> photo<span class="token punctuation">,</span> remark<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">20210303063012</span><span class="token punctuation">,</span> <span class="token string">'placard'</span><span class="token punctuation">,</span> <span class="token string">'西晋陆机的《平复帖》是故宫法帖的代表作品，也是目前存世最早的名人墨迹，内容为陆机向朋友问候疾病的书札。'</span><span class="token punctuation">,</span> <span class="token string">'平复帖'</span><span class="token punctuation">,</span> <span class="token string">'故宫镇馆之宝'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> CulturalRelicsIntroduction<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> introduction<span class="token punctuation">,</span> photo<span class="token punctuation">,</span> remark<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">20210303063013</span><span class="token punctuation">,</span> <span class="token string">'zun'</span><span class="token punctuation">,</span> <span class="token string">'青铜之宝酗亚方尊为故宫青铜器的代表作品。青铜器的产生是古代中国从野蛮时代走向文明时代的重要标志之一。尊是盛酒器，流行于商早期至春秋战国时期。方尊传世较少。上世纪70年代在山东益都苏埠屯出土了几件带有亚铭文的青铜器，从挖掘的墓穴来看，规模都不小，加上众多带有亚铭记的器物，说明它们所代表的可能是一个大族。'</span><span class="token punctuation">,</span> <span class="token string">'酗亚方尊'</span><span class="token punctuation">,</span> <span class="token string">'故宫镇馆之宝'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> CulturalRelicsIntroduction<span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> introduction<span class="token punctuation">,</span> photo<span class="token punctuation">,</span> remark<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token number">20210303063014</span><span class="token punctuation">,</span> <span class="token string">'magpie'</span><span class="token punctuation">,</span> <span class="token string">'沈子蕃缂丝《梅鹊图》轴为故宫织绣的代表作品。图轴纵104cm，宽36cm.中国古代缂丝被认为是丝织工艺中最为高贵的品种，古人以“一寸缂丝一寸金”言缂丝作品之珍贵。缂丝之高贵，首先因其耗费工时巨大，以万缕千丝成其工巧，其次，缂技易学难精，虽摹缂书画，并非简单的照葫芦画瓢。'</span><span class="token punctuation">,</span> <span class="token string">'沈子蕃缂丝《梅鹊图》轴'</span><span class="token punctuation">,</span> <span class="token string">'故宫镇馆之宝'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> DataBase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PodfileKit summarizes the common iOS (Swift) third-party frameworks on GitHub (cocoapods)</title>
      <link href="/posts/50954.html"/>
      <url>/posts/50954.html</url>
      
        <content type="html"><![CDATA[<h1 id="PodfileKit"><a href="#PodfileKit" class="headerlink" title="PodfileKit"></a>PodfileKit</h1><p>========================</p><p>Easy Podfile !</p><p>PodfileKit summarizes the common iOS (Swift) third-party frameworks on GitHub, and classifies the frameworks, which provides convenience for users to manage the third-party frameworks.</p><h1 id="github：https-github-com-adong666666-PodfileKit"><a href="#github：https-github-com-adong666666-PodfileKit" class="headerlink" title="github：https://github.com/adong666666/PodfileKit"></a>github：<a href="https://github.com/adong666666/PodfileKit">https://github.com/adong666666/PodfileKit</a></h1><ul><li><a href="#set-up-platform">Set up Platform</a></li><li><a href="#designated-third-party-framework">Designated Third Party framework</a></li><li><a href="#framework-classification">Framework Classification</a></li><li><a href="#subframework">Subframework</a></li><li><a href="#set-up-groups">Set up groups</a></li><li><a href="#use">Use</a></li><li><a href="#contributing">Contributing</a></li><li><a href="#license">License</a><h2 id="Set-up-Platform"><a href="#Set-up-Platform" class="headerlink" title="Set up Platform"></a>Set up Platform</h2><code>platform:ios '13.0'</code>. The <code>'13.0'</code>here is the lowest iOS system version that the app can support. You can replace it with <code>'11.0', '12.3' , '14.0'</code>and so on.</li></ul><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README.en/SetUpPlatform.png" alt="SetUpPlatform"></p><h2 id="Designated-Third-Party-framework"><a href="#Designated-Third-Party-framework" class="headerlink" title="Designated Third Party framework"></a>Designated Third Party framework</h2><p><code>Pod 'ARVideoKit'</code> specifies a framework named <code>'ARVideoKit'</code> to download. You can replace <code>'ARVideoKit'</code> with <code>'name of the framework you want to install'</code>. Specify the corresponding URL by <code>: git = &gt;</code>, specify the corresponding branch by <code>: Branch = &gt;</code>, specify the submitted version by <code>commit:</code>, specify the marked submitted version by <code>: tag = &gt;</code>, and specify the submitted version by <code>: inhibit'_ Warnings = &gt; true </code> to avoid warnings from a single framework. Of course, the relevant specifications after <code>pod' ARVideoKit</code> can be omitted. In this way, you will download the default version of the framework, which is generally the latest version suitable for your project.<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README.en/Example.png" alt="Example"></p><h2 id="Framework-Classification"><a href="#Framework-Classification" class="headerlink" title="Framework Classification"></a>Framework Classification</h2><p>The frameworks are classified, you can also classify according to your own preferences.<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README.en/FrameworkClassification.png" alt="FrameworkClassification"><br>When there is a framework you need to use in the classification, you can delete “#“.<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README.en/FrameworkSelection.png" alt="FrameworkSelection"></p><h2 id="Subframework"><a href="#Subframework" class="headerlink" title="Subframework"></a>Subframework</h2><p>For some frameworks, if only some of the functions in the framework are used, it is not necessary to download the whole framework, only its sub frameworks.</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README.en/Subframework.png" alt="Subframework"></p><h2 id="Set-up-groups"><a href="#Set-up-groups" class="headerlink" title="Set up groups"></a>Set up groups</h2><p>You can use</p><pre class="line-numbers language-none"><code class="language-none">def groupName  pod ... ...end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>to set up groups, for example, some frameworks are used for debugging, some frameworks are used for app publishing, and some frameworks are special. After <code>target</code>, you need to replace <code>ProjectName</code> with the name of your project.<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README.en/SetUpGroups.png" alt="SetUpGroups"></p><h2 id="Use"><a href="#Use" class="headerlink" title="Use"></a>Use</h2><ul><li>Clone the repository to get the <code>PodFile</code> file in the repository</li><li>Directly download the <code>PodFile</code> in the repository and put it under the directory of the project folder</li><li>Copy the contents of the <code>PodFile</code> in the repository to your own generated <code>PodFile</code></li><li>Use the terminal to open the project directory and run the following command<pre class="line-numbers language-none"><code class="language-none">$ pod install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Contributing"><a href="#Contributing" class="headerlink" title="Contributing"></a>Contributing</h2></li><li>Fork it !</li><li>Create your feature branch: <code>git checkout -b my-new-feature</code></li><li>Commit your changes: <code>git commit -am 'Add some feature'</code></li><li>Push to the branch: <code>git push origin my-new-feature</code></li><li>Submit a pull request<h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2>PodfileKit is released under the MIT license. <a href="https://github.com/adong666666/PodfileKit/blob/master/LICENSE">See LICENSE</a> for details.<h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">source <span class="token string-literal"><span class="token string">'https://github.com/CocoaPods/Specs.git'</span></span><span class="token comment"># Minimum supported iOS system version</span><span class="token symbol">platform</span><span class="token symbol">:ios</span><span class="token punctuation">,</span><span class="token string-literal"><span class="token string">'13.0'</span></span>use_frameworks<span class="token operator">!</span><span class="token comment"># Inhibit the warning of the third party library</span>inhibit_all_warnings<span class="token operator">!</span><span class="token keyword">def</span> <span class="token method-definition"><span class="token function">thirdParty</span></span>  <span class="token comment"># eg. # AR Video</span>  <span class="token comment"># Git specifies the web address, branch specifies the branch, commit specifies the submitted version, tag specifies the marked submitted version and inhibit_ Warnings to avoid warnings from a single framework</span>  <span class="token comment"># pod 'ARVideoKit', :git =&gt; 'https://github.com/AFathi/ARVideoKit.git', :branch =&gt; 'swift_5', commit: "b7e1facdedd8fe16d04ef5f47c4697e89bad9f27",'~&gt; 5.0', :tag =&gt; '1.6.0', :inhibit_warnings =&gt; true</span>    <span class="token comment"># Network Request</span>  <span class="token comment"># pod 'Alamofire'</span>  <span class="token comment"># pod 'Moya'</span>  <span class="token comment"># pod 'AlamofireObjectMapper'</span>    <span class="token comment"># JSON Parsing</span>  <span class="token comment"># pod 'SwiftyJSON'</span>  <span class="token comment"># pod 'HandyJSON'</span>  <span class="token comment"># pod 'Argo'</span>  <span class="token comment"># pod 'Sync'</span>    <span class="token comment"># Detect Network Status</span>  <span class="token comment"># pod 'ReachabilitySwift'</span>    <span class="token comment"># Data Stream</span>  <span class="token comment"># pod 'RxSwift'</span>  <span class="token comment"># pod 'RxCocoa'</span>  <span class="token comment"># pod 'ObjectMapper'</span>  <span class="token comment"># pod 'ReSwift'</span>  <span class="token comment"># pod 'ReactiveSwift'</span>  <span class="token comment"># pod 'ReactorKit'</span>    <span class="token comment"># Internet Pictures</span>  <span class="token comment"># pod 'Kingfisher'</span>    <span class="token comment"># Layout</span>  <span class="token comment"># pod 'SnapKit'</span>  <span class="token comment"># pod 'Cartography'</span>  <span class="token comment"># pod 'Neon'</span>  <span class="token comment"># pod 'AnimatedCollectionViewLayout'</span>  <span class="token comment"># pod "BouncyLayout"</span>  <span class="token comment"># pod 'TangramKit'</span>  <span class="token comment"># pod 'TinyConstraints'</span>  <span class="token comment"># pod 'LayoutKit'</span>  <span class="token comment"># pod 'SteviaLayout'</span>    <span class="token comment"># Animation</span>  <span class="token comment"># pod 'Spring', :git =&gt; 'https://github.com/MengTo/Spring.git'</span>  <span class="token comment"># pod 'lottie-ios'</span>  <span class="token comment"># pod 'ViewAnimator'</span>  <span class="token comment"># pod 'Advance'</span>  <span class="token comment"># pod 'Pastel'</span>  <span class="token comment"># pod 'YapAnimator'</span>    <span class="token comment"># Transition</span>  <span class="token comment"># pod 'Hero'</span>  <span class="token comment"># pod 'Transition'</span>  <span class="token comment"># pod 'Jelly'</span>    <span class="token comment"># Code Rules</span>  <span class="token comment"># pod 'SwiftLint'</span>    <span class="token comment"># UserDefault</span>  <span class="token comment"># pod 'SwiftyUserDefaults'</span>    <span class="token comment"># Data Base</span>  <span class="token comment"># pod 'SQLite.swift'</span>  <span class="token comment"># pod 'GRDB.swift'</span>  <span class="token comment"># pod 'FMDB'</span>  <span class="token comment"># pod 'RealmSwift'</span>  <span class="token comment"># pod 'YapDatabase'</span>  <span class="token comment"># pod 'CoreStore'</span>    <span class="token comment"># Extension</span>  <span class="token comment"># pod 'SwifterSwift'</span>  <span class="token comment">## pod 'SwifterSwift/SwiftStdlib'</span>  <span class="token comment">## pod 'SwifterSwift/Foundation'</span>  <span class="token comment">## pod 'SwifterSwift/UIKit'</span>  <span class="token comment">## pod 'SwifterSwift/AppKit'</span>  <span class="token comment">## pod 'SwifterSwift/MapKit'</span>  <span class="token comment">## pod 'SwifterSwift/CoreGraphics'</span>  <span class="token comment">## pod 'SwifterSwift/CoreLocation'</span>  <span class="token comment">## pod 'SwifterSwift/SpriteKit'</span>  <span class="token comment">## pod 'SwifterSwift/SceneKit'</span>  <span class="token comment">## pod 'SwifterSwift/StoreKit'</span>  <span class="token comment">## pod 'SwifterSwift/Dispatch'</span>  <span class="token comment"># pod 'Then'</span>  <span class="token comment">### Use 'SwiftUIX'</span>  <span class="token comment"># pod 'EZSwiftExtensions'</span>    <span class="token comment"># Resources (picture, color, localized string)</span>  <span class="token comment"># pod 'R.swift'</span>  <span class="token comment"># pod 'SwiftGen'</span>    <span class="token comment"># Monitor</span>  <span class="token comment"># pod 'Crashlytics'</span>  <span class="token comment"># pod 'Fabric'</span>  <span class="token comment"># pod 'Bugly'</span>   <span class="token comment"># Bind</span>  <span class="token comment"># pod 'bond'</span>    <span class="token comment"># Alert</span>  <span class="token comment"># pod 'JGProgressHUD'</span>  <span class="token comment"># pod 'SwiftMessages'</span>  <span class="token comment"># pod 'SwiftEntryKit'</span>  <span class="token comment"># pod 'SPPermissions'</span>  <span class="token comment"># pod 'NotificationBanner'</span>  <span class="token comment"># pod 'Whisper'</span>  <span class="token comment"># pod 'PopupDialog'</span>  <span class="token comment"># pod 'Toast-Swift'</span>    <span class="token comment"># Side Menu</span>  <span class="token comment"># pod 'SideMenu'</span>  <span class="token comment"># pod 'YALSideMenu'</span>    <span class="token comment"># Drop-down Menu</span>  <span class="token comment"># pod 'BTNavigationDropdownMenu'</span>    <span class="token comment"># Pagination Menu</span>  <span class="token comment"># pod 'Parchment'</span>  <span class="token comment"># pod 'Tabman'</span>    <span class="token comment"># UI Controls</span>  <span class="token comment"># pod 'LYEmptyView'</span>  <span class="token comment"># pod 'CollectionKit'</span>  <span class="token comment"># pod 'DifferenceKit'</span>  <span class="token comment"># pod 'ACBadge'</span>  <span class="token comment"># pod 'LTMorphingLabel'</span>  <span class="token comment"># pod 'SkeletonView'</span>  <span class="token comment"># pod 'NVActivityIndicatorView'</span>  <span class="token comment"># pod 'FSPagerView'</span>  <span class="token comment"># pod 'TextFieldEffects'</span>  <span class="token comment"># pod 'SwipeCellKit'</span>  <span class="token comment"># pod 'ScrollableGraphView'</span>  <span class="token comment"># pod 'SCLAlertView'</span>  <span class="token comment"># pod 'SkyFloatingLabelTextField'</span>  <span class="token comment"># pod 'ActiveLabel'</span>  <span class="token comment"># pod 'MarqueeLabel'</span>  <span class="token comment"># pod 'DOFavoriteButton'</span>  <span class="token comment"># pod 'Persei' # top menu for UITableView / UICollectionView / UIScrollView</span>  <span class="token comment"># pod 'XLActionController'</span>  <span class="token comment"># pod 'LNPopupController'</span>  <span class="token comment"># pod 'CHIPageControl'</span>  <span class="token comment"># pod 'EasyTipView'</span>  <span class="token comment"># pod 'CardParts'</span>  <span class="token comment"># pod 'PMAlertController'</span>  <span class="token comment"># pod 'Segmentio'</span>  <span class="token comment"># pod 'HGCircularSlider'</span>  <span class="token comment"># pod 'ZLSwipeableViewSwift'</span>  <span class="token comment"># pod 'ALCameraViewController'</span>  <span class="token comment"># pod 'SwiftSpinner'</span>  <span class="token comment"># pod 'Cosmos'</span>    <span class="token comment"># Scan</span>  <span class="token comment"># pod 'BarcodeScanner'</span>    <span class="token comment"># QR Code</span>  <span class="token comment"># pod 'EFQRCode'</span>    <span class="token comment"># Scan Document</span>  <span class="token comment"># pod 'WeScan'</span>    <span class="token comment"># Color Picker</span>  <span class="token comment"># pod 'ColorSlider'</span>    <span class="token comment"># Prompt for Software Updates</span>  <span class="token comment"># pod 'Siren'</span>    <span class="token comment"># Machine learning Vision</span>  <span class="token comment"># pod 'OpenCV'</span>    <span class="token comment"># Feedback</span>  <span class="token comment"># pod 'PinpointKit'</span>    <span class="token comment"># Log</span>  <span class="token comment"># pod 'SwiftyBeaver'</span>    <span class="token comment"># Encryption</span>  <span class="token comment"># pod 'CryptoSwift'</span>  <span class="token comment"># pod 'RNCryptor'</span>    <span class="token comment"># Internal Purchase</span>  <span class="token comment"># pod 'SwiftyStoreKit'</span>    <span class="token comment"># Calendar</span>  <span class="token comment"># pod 'JTAppleCalendar'</span>  <span class="token comment"># pod 'CVCalendar'</span>    <span class="token comment"># Image Processing</span>  <span class="token comment"># pod 'Nuke'</span>  <span class="token comment"># pod 'Macaw'</span>    <span class="token comment"># Image Picker</span>  <span class="token comment"># pod 'ImagePicker'</span>  <span class="token comment"># pod 'ZLPhotoBrowser'</span>  <span class="token comment"># pod 'YPImagePicker'</span>  <span class="token comment"># pod 'SKPhotoBrowser'</span>    <span class="token comment"># Test</span>  <span class="token comment"># pod 'Quick'</span>  <span class="token comment"># pod 'Nimble'</span>    <span class="token comment"># Storyboard and xib</span>  <span class="token comment"># pod 'IBAnimatable'</span>    <span class="token comment"># Date</span>  <span class="token comment"># pod 'SwiftDate'</span>    <span class="token comment"># Cache</span>  <span class="token comment"># pod 'HanekeSwift'</span>  <span class="token comment"># pod 'Disk'</span>  <span class="token comment"># pod 'Cache'</span>    <span class="token comment"># Mathematics</span>  <span class="token comment"># pod 'Surge'</span>    <span class="token comment"># Multithreading</span>  <span class="token comment"># pod "AsyncSwift"</span>  <span class="token comment"># pod 'Hydra'</span>  <span class="token comment"># pod 'BrightFutures'</span>    <span class="token comment"># Dependency Injection</span>  <span class="token comment"># pod 'Swinject'</span>  <span class="token comment"># pod 'Typhoon'</span>    <span class="token comment"># Chat</span>  <span class="token comment"># pod 'Chatto'</span>  <span class="token comment"># pod 'ChattoAdditions'</span>    <span class="token comment"># Message</span>  <span class="token comment"># pod 'Messenger'</span>  <span class="token comment"># pod 'MessageKit'</span>    <span class="token comment"># Phone Number</span>  <span class="token comment"># pod 'PhoneNumberKit'</span>    <span class="token comment"># Functional Programming</span>  <span class="token comment"># pod 'Swiftz'</span>    <span class="token comment"># Device</span>  <span class="token comment"># pod 'DeviceKit'</span>    <span class="token comment"># Rich Text</span>  <span class="token comment"># pod 'BonMot'</span>  <span class="token comment"># pod 'SwiftRichString'</span>    <span class="token comment"># Face</span>  <span class="token comment"># pod 'FaceAware'</span>    <span class="token comment"># Geographic Location</span>  <span class="token comment"># pod 'SwiftLocation'</span>    <span class="token comment"># HTML、XML</span>  <span class="token comment"># pod 'SwiftSoup'</span>  <span class="token comment"># pod 'Ono'</span>  <span class="token comment"># pod 'Kanna'</span>    <span class="token comment"># Convenient (uitableviewcells, uicollectionviewcells, convenient reuse, etc)</span>  <span class="token comment"># pod 'Reusable'</span>    <span class="token comment"># Localization</span>  <span class="token comment"># pod 'Localize-Swift'</span>    <span class="token comment"># Gif Support</span>  <span class="token comment"># pod 'Gifu'</span>    <span class="token comment"># Color</span>  <span class="token comment"># pod 'DynamicColor'</span>    <span class="token comment"># Detecting memory leaks, etc</span>  <span class="token comment"># pod 'LifetimeTracker'</span>    <span class="token comment"># Chart</span>  <span class="token comment"># pod 'SwiftCharts'</span>    <span class="token comment"># File Processing</span>  <span class="token comment"># pod 'FileKit'</span>  <span class="token comment"># pod 'Files'</span>    <span class="token comment"># Theme (Adapt to Dark Mode)</span>  <span class="token comment"># pod 'SwiftTheme'</span>    <span class="token comment"># The status bar displays information such as FPS, CPU and memory usage, device model, app and iOS versions</span>  <span class="token comment"># pod 'GDPerformanceView-Swift'</span>    <span class="token comment"># Camera and Microphone</span>  <span class="token comment"># pod 'HaishinKit.swift'</span>    <span class="token comment"># Download</span>  <span class="token comment"># pod 'Tiercel'</span>    <span class="token comment"># Bluetooth</span>  <span class="token comment"># pod 'BluetoothKit'</span>    <span class="token comment"># Compress</span>  <span class="token comment"># pod 'Zip'</span>    <span class="token comment"># Keychain</span>  <span class="token comment"># pod 'KeychainSwift'</span>    <span class="token comment"># Social Sharing</span>  <span class="token comment"># pod 'UMengUshare'</span>  <span class="token comment">## pod 'UMengUShare/UI'</span>  <span class="token comment">## pod 'UMengUShare/Social/ReducedWeChat'</span>  <span class="token comment">## pod 'UMengUShare/Social/ReducedQQ'</span><span class="token keyword">end</span><span class="token keyword">def</span> <span class="token method-definition"><span class="token function">project</span></span><span class="token keyword">end</span><span class="token keyword">def</span> <span class="token method-definition"><span class="token function">debug</span></span>  <span class="token comment"># App Interface Debugging</span>  <span class="token comment"># pod 'Reveal-SDK'</span>  <span class="token comment"># pod 'CocoaDebug'</span>    <span class="token comment"># Network Debugging</span>  <span class="token comment"># pod 'Bagel'</span>  <span class="token comment"># pod 'ResponseDetective'</span>    <span class="token comment"># Log</span>  <span class="token comment"># pod 'XCGLogger'</span><span class="token keyword">end</span>  <span class="token comment"># Replace your project name here</span>target <span class="token string-literal"><span class="token string">"ProjectName"</span></span> <span class="token keyword">do</span>  thirdParty  project  debug<span class="token keyword">end</span>post_install <span class="token keyword">do</span> <span class="token operator">|</span>installer_representation<span class="token operator">|</span>  installer_representation<span class="token punctuation">.</span>pods_project<span class="token punctuation">.</span>targets<span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>target<span class="token operator">|</span>    target<span class="token punctuation">.</span>build_configurations<span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>config<span class="token operator">|</span>      <span class="token comment"># Minimum supported iOS system version</span>      config<span class="token punctuation">.</span>build_settings<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">'IPHONEOS_DEPLOYMENT_TARGET'</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">'13.0'</span></span>    <span class="token keyword">end</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PodfileKit将github上常见的iOS(Swift)第三方框架进行了汇总，并且将框架进行了分类，为用户管理第三方框架提供了方便</title>
      <link href="/posts/38667.html"/>
      <url>/posts/38667.html</url>
      
        <content type="html"><![CDATA[<h1 id="PodfileKit"><a href="#PodfileKit" class="headerlink" title="PodfileKit"></a>PodfileKit</h1><p>========================</p><p>Easy Podfile !</p><p>PodfileKit将github上常见的iOS(Swift)第三方框架进行了汇总，并且将框架进行了分类，为用户管理第三方框架提供了方便。</p><h1 id="github网址：https-github-com-adong666666-PodfileKit"><a href="#github网址：https-github-com-adong666666-PodfileKit" class="headerlink" title="github网址：https://github.com/adong666666/PodfileKit"></a>github网址：<a href="https://github.com/adong666666/PodfileKit">https://github.com/adong666666/PodfileKit</a></h1><ul><li><a href="#%E8%AE%BE%E7%BD%AE%E5%B9%B3%E5%8F%B0">设置平台</a></li><li><a href="#%E6%8C%87%E5%AE%9A%E7%AC%AC%E4%B8%89%E6%96%B9%E6%A1%86%E6%9E%B6">指定第三方框架</a></li><li><a href="#%E6%A1%86%E6%9E%B6%E5%88%86%E7%B1%BB">框架分类</a></li><li><a href="#%E5%AD%90%E6%A1%86%E6%9E%B6">子框架</a></li><li><a href="#%E5%BB%BA%E7%AB%8B%E5%88%86%E7%BB%84">建立分组</a></li><li><a href="#%E4%BD%BF%E7%94%A8">使用</a></li><li><a href="#%E8%B4%A1%E7%8C%AE">贡献</a></li><li><a href="#license">License</a><h2 id="设置平台"><a href="#设置平台" class="headerlink" title="设置平台"></a>设置平台</h2><code>platform:ios,'13.0'</code>，这里的<code>‘13.0’</code>是App所能支持的最低iOS系统版本，你可以替换为<code>‘11.0’、'12.3'、‘14.0’</code>等版本。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README/%E5%B9%B3%E5%8F%B0%E8%AE%BE%E7%BD%AE.png" alt="设置平台"><h2 id="指定第三方框架"><a href="#指定第三方框架" class="headerlink" title="指定第三方框架"></a>指定第三方框架</h2><code>pod 'ARVideoKit'</code>指定名为<code>‘ARVideoKit’</code>的框架进行下载，你可以将<code>‘ARVideoKit’</code>替换为<code>‘你想要安装的框架的名称’</code>。通过<code>:git =&gt;</code>来指定相应网址，通过<code>:branch =&gt;</code>来指定相应分支，通过<code>commit:</code>来指定某次提交的版本，通过<code>:tag =&gt;</code>来指定某次被标记的提交版本，通过<code>:inhibit_warnings =&gt; true</code>来规避单个框架的警告。当然，<code>pod 'ARVideoKit'</code>之后的相关指定都可以被省略，这样你将会下载该框架的默认版本，一般为适合你工程的最新版本。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README/%E7%A4%BA%E4%BE%8B.png" alt="示例"><h2 id="框架分类"><a href="#框架分类" class="headerlink" title="框架分类"></a>框架分类</h2>对框架进行了分类，你也可以根据自己的喜好进行分类。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README/%E6%A1%86%E6%9E%B6%E5%88%86%E7%B1%BB.png" alt="框架分类"><br>当分类中有你需要使用的框架时，便将”#“删除即可。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README/%E6%A1%86%E6%9E%B6%E9%80%89%E6%8B%A9.png" alt="框架选择"><h2 id="子框架"><a href="#子框架" class="headerlink" title="子框架"></a>子框架</h2>对于某些框架，如果只用到框架中部分功能，则不必下载整个框架，只需下载其子框架。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README/%E5%AD%90%E6%A1%86%E6%9E%B6.png" alt="子框架"><h2 id="建立分组"><a href="#建立分组" class="headerlink" title="建立分组"></a>建立分组</h2>你可以使用<pre class="line-numbers language-none"><code class="language-none">def groupName  pod ... ...end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>来建立分组，比如某些框架是用于调试的，某些框架是用于App发布的，某些框架比较特殊等。在<code>target</code>之后，你需要将<code>ProjectName</code>替换为你项目的名称。<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/README/%E5%88%86%E7%BB%84.png" alt="建立分组"><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2></li></ul><ul><li>克隆本仓库，从而拿到仓库中的<code>PodFile</code>文件</li><li>直接下载本仓库中的<code>PodFile</code>，置于工程文件夹的目录之下</li><li>拷贝本仓库中<code>PodFile</code>的内容到你自己生成的<code>PodFile</code>文件中</li><li>使用终端打开工程所在目录，运行如下命令<pre class="line-numbers language-none"><code class="language-none">$ pod install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="贡献"><a href="#贡献" class="headerlink" title="贡献"></a>贡献</h2></li><li>Fork it !</li><li>Create your feature branch: <code>git checkout -b my-new-feature</code></li><li>Commit your changes: <code>git commit -am 'Add some feature'</code></li><li>Push to the branch: <code>git push origin my-new-feature</code></li><li>Submit a pull request<h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2>PodfileKit is released under the MIT license. <a href="https://github.com/adong666666/PodfileKit/blob/master/LICENSE">See LICENSE</a> for details.<h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2>这里因为在博客就直接给内容哈：<pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">source <span class="token string-literal"><span class="token string">'https://github.com/CocoaPods/Specs.git'</span></span><span class="token comment"># 所支持的iOS系统版本</span><span class="token symbol">platform</span><span class="token symbol">:ios</span><span class="token punctuation">,</span><span class="token string-literal"><span class="token string">'13.0'</span></span>use_frameworks<span class="token operator">!</span><span class="token comment"># 规避第三方库的警告</span>inhibit_all_warnings<span class="token operator">!</span><span class="token keyword">def</span> <span class="token method-definition"><span class="token function">thirdParty</span></span>  <span class="token comment"># eg. # AR录像</span>  <span class="token comment"># git指定网址, branch指定分支， commit指定某次提交的版本， tag指定某次被标记的提交版本，inhibit_warnings规避单个框架的警告</span>  <span class="token comment"># pod 'ARVideoKit'#, :git =&gt; 'https://github.com/AFathi/ARVideoKit.git', :branch =&gt; 'swift_5', commit: "b7e1facdedd8fe16d04ef5f47c4697e89bad9f27",'~&gt; 5.0', :tag =&gt; '1.6.0', :inhibit_warnings =&gt; true</span>  <span class="token comment"># 网络请求</span>  <span class="token comment"># pod 'Alamofire'</span>  <span class="token comment"># pod 'Moya'</span>  <span class="token comment"># pod 'AlamofireObjectMapper'</span>  <span class="token comment"># JSON解析</span>  <span class="token comment"># pod 'SwiftyJSON'</span>  <span class="token comment"># pod 'HandyJSON'</span>  <span class="token comment"># pod 'Argo'</span>  <span class="token comment"># pod 'Sync'</span>  <span class="token comment"># 检测网络状态</span>  <span class="token comment"># pod 'ReachabilitySwift'</span>  <span class="token comment"># 数据流</span>  <span class="token comment"># pod 'RxSwift'</span>  <span class="token comment"># pod 'RxCocoa'</span>  <span class="token comment"># pod 'ObjectMapper'</span>  <span class="token comment"># pod 'ReSwift'</span>  <span class="token comment"># pod 'ReactiveSwift'</span>  <span class="token comment"># pod 'ReactorKit'</span>  <span class="token comment"># 网络图片</span>  <span class="token comment"># pod 'Kingfisher'</span>  <span class="token comment"># 布局</span>  <span class="token comment"># pod 'SnapKit'</span>  <span class="token comment"># pod 'Cartography'</span>  <span class="token comment"># pod 'Neon'</span>  <span class="token comment"># pod 'AnimatedCollectionViewLayout'</span>  <span class="token comment"># pod "BouncyLayout"</span>  <span class="token comment"># pod 'TangramKit'</span>  <span class="token comment"># pod 'TinyConstraints'</span>  <span class="token comment"># pod 'LayoutKit'</span>  <span class="token comment"># pod 'SteviaLayout'</span>  <span class="token comment"># 动画</span>  <span class="token comment"># pod 'Spring', :git =&gt; 'https://github.com/MengTo/Spring.git'</span>  <span class="token comment"># pod 'lottie-ios'</span>  <span class="token comment"># pod 'ViewAnimator'</span>  <span class="token comment"># pod 'Advance'</span>  <span class="token comment"># pod 'Pastel'</span>  <span class="token comment"># pod 'YapAnimator'</span>  <span class="token comment"># 转场</span>  <span class="token comment"># pod 'Hero'</span>  <span class="token comment"># pod 'Transition'</span>  <span class="token comment"># pod 'Jelly'</span>  <span class="token comment"># 代码规范</span>  <span class="token comment"># pod 'SwiftLint'</span>  <span class="token comment"># UserDefault</span>  <span class="token comment"># pod 'SwiftyUserDefaults'</span>  <span class="token comment"># 数据库</span>  <span class="token comment"># pod 'SQLite.swift'</span>  <span class="token comment"># pod 'GRDB.swift'</span>  <span class="token comment"># pod 'FMDB'</span>  <span class="token comment"># pod 'RealmSwift'</span>  <span class="token comment"># pod 'YapDatabase'</span>  <span class="token comment"># pod 'CoreStore'</span>  <span class="token comment"># 扩展</span>  <span class="token comment"># pod 'SwifterSwift'</span>  <span class="token comment">## pod 'SwifterSwift/SwiftStdlib'</span>  <span class="token comment">## pod 'SwifterSwift/Foundation'</span>  <span class="token comment">## pod 'SwifterSwift/UIKit'</span>  <span class="token comment">## pod 'SwifterSwift/AppKit'</span>  <span class="token comment">## pod 'SwifterSwift/MapKit'</span>  <span class="token comment">## pod 'SwifterSwift/CoreGraphics'</span>  <span class="token comment">## pod 'SwifterSwift/CoreLocation'</span>  <span class="token comment">## pod 'SwifterSwift/SpriteKit'</span>  <span class="token comment">## pod 'SwifterSwift/SceneKit'</span>  <span class="token comment">## pod 'SwifterSwift/StoreKit'</span>  <span class="token comment">## pod 'SwifterSwift/Dispatch'</span>  <span class="token comment"># pod 'Then'</span>  <span class="token comment">### Use 'SwiftUIX'</span>  <span class="token comment"># pod 'EZSwiftExtensions'</span>  <span class="token comment"># Resources（图片、颜色、本地化字符串）</span>  <span class="token comment"># pod 'R.swift'</span>  <span class="token comment"># pod 'SwiftGen'</span>  <span class="token comment"># 监控</span>  <span class="token comment"># pod 'Crashlytics'</span>  <span class="token comment"># pod 'Fabric'</span>  <span class="token comment"># pod 'Bugly'</span>  <span class="token comment"># 绑定</span>  <span class="token comment"># pod 'bond'</span>  <span class="token comment"># 提示框</span>  <span class="token comment"># pod 'JGProgressHUD'</span>  <span class="token comment"># pod 'SwiftMessages'</span>  <span class="token comment"># pod 'SwiftEntryKit'</span>  <span class="token comment"># pod 'SPPermissions'</span>  <span class="token comment"># pod 'NotificationBanner'</span>  <span class="token comment"># pod 'Whisper'</span>  <span class="token comment"># pod 'PopupDialog'</span>  <span class="token comment"># pod 'Toast-Swift'</span>  <span class="token comment"># 侧边栏</span>  <span class="token comment"># pod 'SideMenu'</span>  <span class="token comment"># pod 'YALSideMenu'</span>  <span class="token comment"># 下拉菜单</span>  <span class="token comment"># pod 'BTNavigationDropdownMenu'</span>  <span class="token comment"># 分页菜单</span>  <span class="token comment"># pod 'Parchment'</span>  <span class="token comment"># pod 'Tabman'</span>  <span class="token comment"># UI控件</span>  <span class="token comment"># pod 'LYEmptyView'</span>  <span class="token comment"># pod 'CollectionKit'</span>  <span class="token comment"># pod 'DifferenceKit'</span>  <span class="token comment"># pod 'ACBadge'</span>  <span class="token comment"># pod 'LTMorphingLabel'</span>  <span class="token comment"># pod 'SkeletonView'</span>  <span class="token comment"># pod 'NVActivityIndicatorView'</span>  <span class="token comment"># pod 'FSPagerView'</span>  <span class="token comment"># pod 'TextFieldEffects'</span>  <span class="token comment"># pod 'SwipeCellKit'</span>  <span class="token comment"># pod 'ScrollableGraphView'</span>  <span class="token comment"># pod 'SCLAlertView'</span>  <span class="token comment"># pod 'SkyFloatingLabelTextField'</span>  <span class="token comment"># pod 'ActiveLabel'</span>  <span class="token comment"># pod 'MarqueeLabel'</span>  <span class="token comment"># pod 'DOFavoriteButton'</span>  <span class="token comment"># pod 'Persei' # top menu for UITableView / UICollectionView / UIScrollView</span>  <span class="token comment"># pod 'XLActionController'</span>  <span class="token comment"># pod 'LNPopupController'</span>  <span class="token comment"># pod 'CHIPageControl'</span>  <span class="token comment"># pod 'EasyTipView'</span>  <span class="token comment"># pod 'CardParts'</span>  <span class="token comment"># pod 'PMAlertController'</span>  <span class="token comment"># pod 'Segmentio'</span>  <span class="token comment"># pod 'HGCircularSlider'</span>  <span class="token comment"># pod 'ZLSwipeableViewSwift'</span>  <span class="token comment"># pod 'ALCameraViewController'</span>  <span class="token comment"># pod 'SwiftSpinner'</span>  <span class="token comment"># pod 'Cosmos'</span>  <span class="token comment"># 扫描</span>  <span class="token comment"># pod 'BarcodeScanner'</span>  <span class="token comment"># 二维码</span>  <span class="token comment"># pod 'EFQRCode'</span>  <span class="token comment"># 扫描文件</span>  <span class="token comment"># pod 'WeScan'</span>  <span class="token comment"># 取色器</span>  <span class="token comment"># pod 'ColorSlider'</span>  <span class="token comment"># 提示软件更新</span>  <span class="token comment"># pod 'Siren'</span>  <span class="token comment"># 机器学习视觉</span>  <span class="token comment"># pod 'OpenCV'</span>  <span class="token comment"># 反馈</span>  <span class="token comment"># pod 'PinpointKit'</span>  <span class="token comment"># 日志</span>  <span class="token comment"># pod 'SwiftyBeaver'</span>  <span class="token comment"># 加密</span>  <span class="token comment"># pod 'CryptoSwift'</span>  <span class="token comment"># pod 'RNCryptor'</span>  <span class="token comment"># 内购</span>  <span class="token comment"># pod 'SwiftyStoreKit'</span>  <span class="token comment"># 日历</span>  <span class="token comment"># pod 'JTAppleCalendar'</span>  <span class="token comment"># pod 'CVCalendar'</span>  <span class="token comment"># 图像处理</span>  <span class="token comment"># pod 'Nuke'</span>  <span class="token comment"># pod 'Macaw'</span>  <span class="token comment"># 图片拾取</span>  <span class="token comment"># pod 'ImagePicker'</span>  <span class="token comment"># pod 'ZLPhotoBrowser'</span>  <span class="token comment"># pod 'YPImagePicker'</span>  <span class="token comment"># pod 'SKPhotoBrowser'</span>  <span class="token comment"># 测试</span>  <span class="token comment"># pod 'Quick'</span>  <span class="token comment"># pod 'Nimble'</span>  <span class="token comment"># Storyboard和xib</span>  <span class="token comment"># pod 'IBAnimatable'</span>  <span class="token comment"># 时间</span>  <span class="token comment"># pod 'SwiftDate'</span>  <span class="token comment"># 缓存</span>  <span class="token comment"># pod 'HanekeSwift'</span>  <span class="token comment"># pod 'Disk'</span>  <span class="token comment"># pod 'Cache'</span>  <span class="token comment"># 数学</span>  <span class="token comment"># pod 'Surge'</span>  <span class="token comment"># 多线程</span>  <span class="token comment"># pod "AsyncSwift"</span>  <span class="token comment"># pod 'Hydra'</span>  <span class="token comment"># pod 'BrightFutures'</span>  <span class="token comment"># 依赖注入</span>  <span class="token comment"># pod 'Swinject'</span>  <span class="token comment"># pod 'Typhoon'</span>  <span class="token comment"># 聊天</span>  <span class="token comment"># pod 'Chatto'</span>  <span class="token comment"># pod 'ChattoAdditions'</span>  <span class="token comment"># 信息</span>  <span class="token comment"># pod 'Messenger'</span>  <span class="token comment"># pod 'MessageKit'</span>  <span class="token comment"># 手机号码</span>  <span class="token comment"># pod 'PhoneNumberKit'</span>  <span class="token comment"># 函数式编程</span>  <span class="token comment"># pod 'Swiftz'</span>  <span class="token comment"># 设备</span>  <span class="token comment"># pod 'DeviceKit'</span>  <span class="token comment"># 富文本</span>  <span class="token comment"># pod 'BonMot'</span>  <span class="token comment"># pod 'SwiftRichString'</span>  <span class="token comment"># 人脸</span>  <span class="token comment"># pod 'FaceAware'</span>  <span class="token comment"># 地理位置</span>  <span class="token comment"># pod 'SwiftLocation'</span>  <span class="token comment"># HTML、XML</span>  <span class="token comment"># pod 'SwiftSoup'</span>  <span class="token comment"># pod 'Ono'</span>  <span class="token comment"># pod 'Kanna'</span>  <span class="token comment"># 便利 UITableViewCells, UICollectionViewCells 便利复用等</span>  <span class="token comment"># pod 'Reusable'</span>  <span class="token comment"># 本地化</span>  <span class="token comment"># pod 'Localize-Swift'</span>  <span class="token comment"># Gif支持</span>  <span class="token comment"># pod 'Gifu'</span>  <span class="token comment"># 颜色</span>  <span class="token comment"># pod 'DynamicColor'</span>  <span class="token comment"># 检测内存泄漏等</span>  <span class="token comment"># pod 'LifetimeTracker'</span>  <span class="token comment"># 表格</span>  <span class="token comment"># pod 'SwiftCharts'</span>  <span class="token comment"># 文件处理</span>  <span class="token comment"># pod 'FileKit'</span>  <span class="token comment"># pod 'Files'</span>  <span class="token comment"># 主题 适配暗黑模式</span>  <span class="token comment"># pod 'SwiftTheme'</span>  <span class="token comment"># 状态栏显示FPS, CPU and memory usage, device model, app and iOS versions 等信息</span>  <span class="token comment"># pod 'GDPerformanceView-Swift'</span>  <span class="token comment"># 相机 麦克风</span>  <span class="token comment"># pod 'HaishinKit.swift'</span>  <span class="token comment"># 下载</span>  <span class="token comment"># pod 'Tiercel'</span>  <span class="token comment"># 蓝牙</span>  <span class="token comment"># pod 'BluetoothKit'</span>  <span class="token comment"># 压缩</span>  <span class="token comment"># pod 'Zip'</span>  <span class="token comment"># 钥匙串</span>  <span class="token comment"># pod 'KeychainSwift'</span>  <span class="token comment"># 社会化分享</span>  <span class="token comment"># pod 'UMengUshare'</span>  <span class="token comment">## pod 'UMengUShare/UI'</span>  <span class="token comment">## pod 'UMengUShare/Social/ReducedWeChat'</span>  <span class="token comment">## pod 'UMengUShare/Social/ReducedQQ'</span><span class="token keyword">end</span><span class="token keyword">def</span> <span class="token method-definition"><span class="token function">project</span></span><span class="token keyword">end</span><span class="token keyword">def</span> <span class="token method-definition"><span class="token function">debug</span></span>  <span class="token comment"># App界面调试</span>  <span class="token comment"># pod 'Reveal-SDK'</span>  <span class="token comment"># pod 'CocoaDebug'</span>  <span class="token comment"># 网络调试</span>  <span class="token comment"># pod 'Bagel'</span>  <span class="token comment"># pod 'ResponseDetective'</span>  <span class="token comment"># 日志</span>  <span class="token comment"># pod 'XCGLogger'</span><span class="token keyword">end</span>  <span class="token comment"># 在这里替换你的项目名称</span>target <span class="token string-literal"><span class="token string">"ProjectName"</span></span> <span class="token keyword">do</span>  thirdParty  project  debug<span class="token keyword">end</span>post_install <span class="token keyword">do</span> <span class="token operator">|</span>installer_representation<span class="token operator">|</span>  installer_representation<span class="token punctuation">.</span>pods_project<span class="token punctuation">.</span>targets<span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>target<span class="token operator">|</span>    target<span class="token punctuation">.</span>build_configurations<span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>config<span class="token operator">|</span>      <span class="token comment"># 所支持的iOS系统版本</span>      config<span class="token punctuation">.</span>build_settings<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">'IPHONEOS_DEPLOYMENT_TARGET'</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">'13.0'</span></span>    <span class="token keyword">end</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定義側邊欄</title>
      <link href="/posts/ea33ab97.html"/>
      <url>/posts/ea33ab97.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>適用於 &gt;= 3.8.0</p></div><p>側邊欄現在支持自定義了，可以添加自己喜歡的 widget。</p><p>可添加自己的 widget，也可以對現有的 widget 進行排序（<code>博客資料</code>和 <code>公告</code>這兩個固定，其它的能排序）</p><h2 id="widget-排序"><a href="#widget-排序" class="headerlink" title="widget 排序"></a>widget 排序</h2><p>只需要配置 <code>sort_order</code>就行。（使用了 <code>Flex</code> 佈局的 <code>order</code> 屬性，具體可查看 <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Ordering_Flex_Items">mozilla 文檔</a>。簡單來講，就是配置<strong>數字</strong>來實現排序，如果不配置，則默認為 0。數字越小，排序越靠前。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">aside</span><span class="token punctuation">:</span> <span class="token punctuation">...</span>  <span class="token key atrule">card_recent_post</span><span class="token punctuation">:</span>    <span class="token key atrule">sort_order</span><span class="token punctuation">:</span> <span class="token comment"># Don't modify the setting unless you know how it works</span>  <span class="token key atrule">card_categories</span><span class="token punctuation">:</span>    <span class="token key atrule">sort_order</span><span class="token punctuation">:</span> <span class="token comment"># Don't modify the setting unless you know how it works</span>  <span class="token key atrule">card_tags</span><span class="token punctuation">:</span>    <span class="token key atrule">sort_order</span><span class="token punctuation">:</span> <span class="token comment"># Don't modify the setting unless you know how it works</span>  <span class="token key atrule">card_archives</span><span class="token punctuation">:</span>    <span class="token key atrule">sort_order</span><span class="token punctuation">:</span> <span class="token comment"># Don't modify the setting unless you know how it works</span>  <span class="token key atrule">card_webinfo</span><span class="token punctuation">:</span>    <span class="token key atrule">sort_order</span><span class="token punctuation">:</span> <span class="token comment"># Don't modify the setting unless you know how it works</span><span class="token key atrule">newest_comments</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">sort_order</span><span class="token punctuation">:</span> <span class="token comment"># Don't modify the setting unless you know how it works</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="自定義-widget"><a href="#自定義-widget" class="headerlink" title="自定義 widget"></a>自定義 widget</h2><p>如果你想添加自己的內容到側邊欄去，你可以自定義。</p><h3 id="創建-widget-yml"><a href="#創建-widget-yml" class="headerlink" title="創建 widget.yml"></a>創建 widget.yml</h3><p>在Hexo博客目錄中的<code>source/_data</code>（如果沒有 _data 文件夾，請自行創建），創建一個文件 <code>widget.yml</code></p><h3 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">top</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">class_name</span><span class="token punctuation">:</span>    <span class="token key atrule">id_name</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span>    <span class="token key atrule">html</span><span class="token punctuation">:</span><span class="token key atrule">bottom</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">class_name</span><span class="token punctuation">:</span>    <span class="token key atrule">id_name</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span>    <span class="token key atrule">order</span><span class="token punctuation">:</span>    html<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>參數詳解</p></blockquote><p><strong>top</strong>:  創建的 widget 會出現在非 sticky 區域（即所有頁面都會顯示)</p><p><strong>bottom</strong>:  創建的 widget 會出現在 sticky 區域（除了文章頁都會顯示)</p><table><thead><tr><th>參數</th><th>解釋</th></tr></thead><tbody><tr><td>class_name</td><td>所創建的 widget  父類 class 名 （可選）</td></tr><tr><td>id_name</td><td>所創建的 widget  父類 id 名（可選）</td></tr><tr><td>name</td><td>所創建的 widget 標題</td></tr><tr><td>icon</td><td>所創建的 widget 圖標</td></tr><tr><td>order</td><td>所創建的 widget 排序 （可選）</td></tr><tr><td>html</td><td>所創建的 widget 相關代碼</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/adside-diy-parameter.png" alt="image-20201230223506507"></p><p>生成的 代碼 為</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-widget 所寫的 class_name<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>所寫的 id_name<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">order</span><span class="token punctuation">:</span> 所寫的 order</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item-headline<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>所寫的 icon<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>所寫的 name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item-content<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        所寫的 html    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果你需要對添加的 widget 進行 UI 調整，請自行添加 css 到 inject 去。</p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>以  <a href="https://clustrmaps.com/profile/1b7ep/widget/code/globe">訪客地圖</a> 為例子</p><ol><li><p>獲取訪客地圖的 html 代碼</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clstr_globe<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//clustrmaps.com/globe.js?d=5V2tOKp8qAdRM-i8eu7ETTO9ugt5uKbbG-U7Yj8uMl8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>創建 widget.yml</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">bottom</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">class_name</span><span class="token punctuation">:</span> user<span class="token punctuation">-</span>map      <span class="token key atrule">id_name</span><span class="token punctuation">:</span> user<span class="token punctuation">-</span>map      <span class="token key atrule">name</span><span class="token punctuation">:</span> 訪客地圖      <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>heartbeat      <span class="token key atrule">order</span><span class="token punctuation">:</span>      <span class="token key atrule">html</span><span class="token punctuation">:</span> <span class="token string">'&lt;script type="text/javascript" id="clstr_globe" src="//clustrmaps.com/globe.js?d=5V2tOKp8qAdRM-i8eu7ETTO9ugt5uKbbG-U7Yj8uMl8"&gt;&lt;/script&gt;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>運行 hexo</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/aside-diy-sample.png" alt="image-20201230224442356"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 進階教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Hexo </tag>
            
            <tag> 主題 </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>當設置 top_img 為 false 時</title>
      <link href="/posts/c9711c19.html"/>
      <url>/posts/c9711c19.html</url>
      
        <content type="html"><![CDATA[<p>當設置 top_img 為 false 時，不顯示頂部圖</p>]]></content>
      
      
      <categories>
          
          <category> Demo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> butterfly </tag>
            
            <tag> top_img </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学术论文——基于ARKit技术的文物交互式相机App的设计与实现</title>
      <link href="/posts/57105.html"/>
      <url>/posts/57105.html</url>
      
        <content type="html"><![CDATA[<h1 id="学术论文——基于ARKit技术的文物交互式相机App的设计与实现"><a href="#学术论文——基于ARKit技术的文物交互式相机App的设计与实现" class="headerlink" title="学术论文——基于ARKit技术的文物交互式相机App的设计与实现"></a>学术论文——基于ARKit技术的文物交互式相机App的设计与实现</h1><p>========================<br> 论文下载：<a href="http://journals.hut.edu.cn:6688/zk/ch/reader/create_pdf.aspx?file_no=20200507&amp;flag=1&amp;journal_id=hngydxzrb&amp;year_id=2020">http://journals.hut.edu.cn:6688/zk/ch/reader/create_pdf.aspx?file_no=20200507&amp;flag=1&amp;journal_id=hngydxzrb&amp;year_id=2020</a><br> 论文摘要：<a href="http://journals.hut.edu.cn:6688/zk/ch/reader/view_abstract.aspx?flag=1&amp;file_no=20200507&amp;journal_id=hngydxzrb">http://journals.hut.edu.cn:6688/zk/ch/reader/view_abstract.aspx?flag=1&amp;file_no=20200507&amp;journal_id=hngydxzrb</a><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EARKit%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%87%E7%89%A9%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%9B%B8%E6%9C%BAApp%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/1.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EARKit%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%87%E7%89%A9%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%9B%B8%E6%9C%BAApp%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/2.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EARKit%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%87%E7%89%A9%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%9B%B8%E6%9C%BAApp%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/3.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EARKit%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%87%E7%89%A9%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%9B%B8%E6%9C%BAApp%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/4.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EARKit%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%87%E7%89%A9%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%9B%B8%E6%9C%BAApp%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/5.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EARKit%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%87%E7%89%A9%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%9B%B8%E6%9C%BAApp%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/6.png"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%AD%A6%E6%9C%AF%E8%AE%BA%E6%96%87%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EARKit%E6%8A%80%E6%9C%AF%E7%9A%84%E6%96%87%E7%89%A9%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%9B%B8%E6%9C%BAApp%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/7.png"></p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly添加全局吸底Aplayer教程</title>
      <link href="/posts/507c070f.html"/>
      <url>/posts/507c070f.html</url>
      
        <content type="html"><![CDATA[<div class="note info flat"><p>以下文章只是教程</p><p>如果部署之后，并没有出现 aplayer , 请确认是否跟足步骤操作或者更换音乐源，多试试。</p><p>如果遇到使用問題，请仔细查看插件文档，或者到插件那裏反饋。</p></div><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>如果你想使用 aplayer，很多人都會推薦安裝 <a href="https://github.com/MoePlayer/hexo-tag-aplayer">hexo-tag-aplayer</a> 這款插件。這款插件通過 Hexo 獨有的標籤外掛，我們可以很方便的寫入一些參數，插件就會幫我們生成對應的 html。如果你只是使用一些簡單的功能，其實無需使用到這個插件，只需以 html 格式書寫就行，不用插件去轉換。</p><p>例如：</p><p>如果使用插件，在 markdown 中要這樣寫</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% meting "000PeZCQ1i4XVs" "tencent" "artist" "theme:#3F51B5" "mutex:true" "preload:auto" %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其會被插件渲染為</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aplayer-uxAIfEUs<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aplayer aplayer-tag-marker meting-tag-marker<span class="token punctuation">"</span></span> <span class="token attr-name">data-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>000PeZCQ1i4XVs<span class="token punctuation">"</span></span> <span class="token attr-name">data-server</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tencent<span class="token punctuation">"</span></span> <span class="token attr-name">data-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>artist<span class="token punctuation">"</span></span> <span class="token attr-name">data-mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>circulation<span class="token punctuation">"</span></span> <span class="token attr-name">data-autoplay</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">data-mutex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">data-listmaxheight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>340px<span class="token punctuation">"</span></span> <span class="token attr-name">data-preload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>auto<span class="token punctuation">"</span></span> <span class="token attr-name">data-theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#3F51B5<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果我們不想使用插件，就需要在markdown中用html的格式書寫，同時把主題配置文件中的<code>aplayerInject</code>開啟</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aplayer<span class="token punctuation">"</span></span> <span class="token attr-name">data-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>000PeZCQ1i4XVs<span class="token punctuation">"</span></span> <span class="token attr-name">data-server</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tencent<span class="token punctuation">"</span></span> <span class="token attr-name">data-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>artist<span class="token punctuation">"</span></span> <span class="token attr-name">data-mutex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">data-preload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>auto<span class="token punctuation">"</span></span> <span class="token attr-name">data-theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#3F51B5<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>這樣我們就可以不用使用多一個插件，當然這種東西見仁見智，選自己喜歡的就行。</p><p>回到正題，這篇文章將教大家如何在Butterfly上使用全局吸底 Aplayer</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-aplayer-xidi.gif" alt="aplayer"></p><h2 id="關閉-asset-inject"><a href="#關閉-asset-inject" class="headerlink" title="關閉 asset_inject"></a>關閉 <code>asset_inject</code></h2><div class="note info flat"><p>此步驟適用於安裝了 <code>hexo-tag-aplayer</code> 插件的人</p></div><p>由於需要全局都插入 aplayer 和 meting 資源，為了防止插入重複的資源，需要把 asset_inject 設為 <code>false</code></p><p>在 Hexo 的配置文件中</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">aplayer</span><span class="token punctuation">:</span>  <span class="token key atrule">meting</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">asset_inject</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="開啟主題的-aplayerInject"><a href="#開啟主題的-aplayerInject" class="headerlink" title="開啟主題的 aplayerInject"></a>開啟主題的 <code>aplayerInject</code></h2><p>在主題的配置文件中，<code>enable</code> 設為 <code>true</code> 和 <code>per_page</code> 設為 <code>true</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Inject the css and script (aplayer/meting)</span><span class="token key atrule">aplayerInject</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="插入-Aplayer-html"><a href="#插入-Aplayer-html" class="headerlink" title="插入 Aplayer html"></a>插入 Aplayer html</h2><p>為了適配 hexo-tag-aplayer，主題內置的 Meting js 仍為 1.2 版本，並非最新的 2.x 版本。</p><p>Aplayer html 例子：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aplayer no-destroy<span class="token punctuation">"</span></span> <span class="token attr-name">data-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>60198<span class="token punctuation">"</span></span> <span class="token attr-name">data-server</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>netease<span class="token punctuation">"</span></span> <span class="token attr-name">data-type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>playlist<span class="token punctuation">"</span></span> <span class="token attr-name">data-fixed</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">data-autoplay</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>參數解釋</p><table><thead><tr><th>option</th><th>default</th><th>description</th></tr></thead><tbody><tr><td>data-id</td><td><strong>require</strong></td><td>song id / playlist id / album id / search keyword</td></tr><tr><td>data-server</td><td><strong>require</strong></td><td>music platform: <code>netease</code>, <code>tencent</code>, <code>kugou</code>, <code>xiami</code>, <code>baidu</code></td></tr><tr><td>data-type</td><td><strong>require</strong></td><td><code>song</code>, <code>playlist</code>, <code>album</code>, <code>search</code>, <code>artist</code></td></tr><tr><td>data-fixed</td><td><code>false</code></td><td>enable fixed mode</td></tr><tr><td>data-mini</td><td><code>false</code></td><td>enable mini mode</td></tr><tr><td>data-autoplay</td><td><code>false</code></td><td>audio autoplay</td></tr><tr><td>data-theme</td><td><code>#2980b9</code></td><td>main color</td></tr><tr><td>data-loop</td><td><code>all</code></td><td>player loop play, values: ‘all’, ‘one’, ‘none’</td></tr><tr><td>data-order</td><td><code>list</code></td><td>player play order, values: ‘list’, ‘random’</td></tr><tr><td>data-preload</td><td><code>auto</code></td><td>values: ‘none’, ‘metadata’, ‘auto’</td></tr><tr><td>data-volume</td><td><code>0.7</code></td><td>default volume, notice that player will remember user setting, default volume will not work after user set volume themselves</td></tr><tr><td>data-mutex</td><td><code>true</code></td><td>prevent to play multiple player at the same time, pause other players when this player start play</td></tr><tr><td>data-lrctype</td><td><code>0</code></td><td>lyric type</td></tr><tr><td>data-listfolded</td><td><code>false</code></td><td>indicate whether list should folded at first</td></tr><tr><td>data-listmaxheight</td><td><code>340px</code></td><td>list max height</td></tr><tr><td>data-storagename</td><td><code>metingjs</code></td><td>localStorage key that store player setting</td></tr></tbody></table><div class="note info flat"><p><code>require</code> 代表着這些參數是必須要使用的，其它的參數則可以根據自己需要配置。</p><p>配置全局吸底，<code>data-fixed</code> 和 <code>data-mini</code> 也必須配置，配置為 <code>true</code></p><p>如果使用 Pjax，則在 class 裏需添加 <code>no-destroy</code>，這樣防止切換頁面時 Aplayer 被銷毀</p></div><p>把  <code>aplayer代碼</code>  插入到主題配置文件的  <code>inject.bottom</code> 去</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">inject</span><span class="token punctuation">:</span>  <span class="token key atrule">head</span><span class="token punctuation">:</span>  <span class="token key atrule">bottom</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> &lt;div class="aplayer no<span class="token punctuation">-</span>destroy" data<span class="token punctuation">-</span>id="60198" data<span class="token punctuation">-</span>server="netease" data<span class="token punctuation">-</span>type="playlist" data<span class="token punctuation">-</span>fixed="true" data<span class="token punctuation">-</span>autoplay="true"<span class="token punctuation">&gt;</span> &lt;/div<span class="token punctuation">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>運行 Hexo 就可以看到網頁左下角出現了 Aplayer</p><p>最後，如果你想切換頁面時，音樂不會中斷。請把主題配置文件的 <code>pjax</code> 設為 <code>true</code></p>]]></content>
      
      
      <categories>
          
          <category> 進階教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Hexo </tag>
            
            <tag> 主題 </tag>
            
            <tag> butterfly </tag>
            
            <tag> Aplayer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定義代碼配色</title>
      <link href="/posts/b37b5fe3.html"/>
      <url>/posts/b37b5fe3.html</url>
      
        <content type="html"><![CDATA[<p>在<a href="http://butterfly.js.org/posts/4aa8abbe/#%E4%BB%A3%E7%A2%BC%E9%AB%98%E4%BA%AE%E4%B8%BB%E9%A1%8C">Butterfly-安裝文檔-三-主題配置</a>中已經介紹瞭如何使用自定義代碼配色。</p><p>這篇文章是使用自定義代碼配色的實例教程。</p><h2 id="Highlight"><a href="#Highlight" class="headerlink" title="Highlight"></a>Highlight</h2><p>以使用<code>Kimbie dark</code>主題配色為例子</p><h3 id="配置hljs為true"><a href="#配置hljs為true" class="headerlink" title="配置hljs為true"></a>配置<code>hljs</code>為<code>true</code></h3><p>修改Hexo根目錄下的<code>_config.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span> <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token key atrule">auto_detect</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token key atrule">hljs</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配置highlight-theme為false"><a href="#配置highlight-theme為false" class="headerlink" title="配置highlight_theme為false"></a>配置<code>highlight_theme</code>為<code>false</code></h3><p>修改<code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight_theme</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="下載和修改CSS文件"><a href="#下載和修改CSS文件" class="headerlink" title="下載和修改CSS文件"></a>下載和修改CSS文件</h3><p>在<a href="https://github.com/highlightjs/highlight.js/blob/master/src/styles/kimbie.dark.css">Github</a>上找到這個CSS</p><p>在Hexo的根目錄<code>source</code>文件夾下創立一個<code>self</code>文件夾，在<code>self</code>文件夾創建一個<code>Kimbiedark.css</code>文件</p><p>把Github上<code>Kimbie dark</code>的CSS代碼複製到<code>Kimbiedark.css</code>去。（你也可以直接從Github上下載這個CSS）</p><p><strong>Kimbiedark.css</strong>代碼如下</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*    Name:     Kimbie (dark)    Author:   Jan T. Sott    License:  Creative Commons Attribution-ShareAlike 4.0 Unported License    URL:      https://github.com/idleberg/Kimbie-highlight.js*/</span><span class="token comment">/* Kimbie Comment */</span><span class="token selector">.hljs-comment,.hljs-quote</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> #d6baad<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* Kimbie Red */</span><span class="token selector">.hljs-variable,.hljs-template-variable,.hljs-tag,.hljs-name,.hljs-selector-id,.hljs-selector-class,.hljs-regexp,.hljs-meta</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> #dc3958<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* Kimbie Orange */</span><span class="token selector">.hljs-number,.hljs-built_in,.hljs-builtin-name,.hljs-literal,.hljs-type,.hljs-params,.hljs-deletion,.hljs-link</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> #f79a32<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* Kimbie Yellow */</span><span class="token selector">.hljs-title,.hljs-section,.hljs-attribute</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> #f06431<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* Kimbie Green */</span><span class="token selector">.hljs-string,.hljs-symbol,.hljs-bullet,.hljs-addition</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> #889b4a<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* Kimbie Purple */</span><span class="token selector">.hljs-keyword,.hljs-selector-tag,.hljs-function</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> #98676a<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.hljs</span> <span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">overflow-x</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #221a0f<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #d3af86<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 0.5em<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.hljs-emphasis</span> <span class="token punctuation">{</span>  <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.hljs-strong</span> <span class="token punctuation">{</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改這個CSS文件為</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*    Name:     Kimbie (dark)    Author:   Jan T. Sott    License:  Creative Commons Attribution-ShareAlike 4.0 Unported License    URL:      https://github.com/idleberg/Kimbie-highlight.js*/</span><span class="token comment">/* 新添加的內容  -------------------------------------   --hl-color                  代碼框字體顔色 【必須】 (把下面.hljs的 color複製到這裏來)  --hl-bg                     代碼框背景色 【必須】 (把下面.hljs的 background複製到這裏來)  --hltools-bg: #321a0f       代碼框頂部工具欄背景色 【可選】(如果你關掉了 copy、lang 和 shrink,可不用配置這個）  --hltools-color: #fff       代碼框頂部工具欄字體顔色 【可選】(如果你關掉了 copy、lang 和 shrink,可不用配置這個）  --hlnumber-bg: #221a0f      代碼框行數背景色 【可選】(如果已經關掉 line_number,可以不用配置這個)  --hlnumber-color: #fff      代碼框行數字體顔色 【可選】 (如果已經關掉 line_number,可以不用配置這個)  --hlscrollbar-bg: #d3af86   代碼框滾動條顔色 【可選】（默認為主題主顔色）  --hlexpand-bg: #d3af86      代碼框底部展開背景色 【可選】(如果已經關掉 highlight_height_limit,可以不用配置這個)*/</span><span class="token selector">:root</span> <span class="token punctuation">{</span>  <span class="token property">--hl-color</span><span class="token punctuation">:</span> #d3af86<span class="token punctuation">;</span>  <span class="token property">--hl-bg</span><span class="token punctuation">:</span> #221a0f<span class="token punctuation">;</span>  <span class="token property">--hltools-bg</span><span class="token punctuation">:</span> #321a0f<span class="token punctuation">;</span>  <span class="token property">--hltools-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>  <span class="token property">--hlnumber-bg</span><span class="token punctuation">:</span> #221a0f<span class="token punctuation">;</span>  <span class="token property">--hlnumber-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>  <span class="token property">--hlscrollbar-bg</span><span class="token punctuation">:</span> #d3af86<span class="token punctuation">;</span>  <span class="token property">--hlexpand-bg</span><span class="token punctuation">:</span> #d3af86<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* Kimbie Comment */</span><span class="token selector">.hljs-comment,.hljs-quote</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> #d6baad<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* Kimbie Red */</span><span class="token selector">.hljs-variable,.hljs-template-variable,.hljs-tag,.hljs-name,.hljs-selector-id,.hljs-selector-class,.hljs-regexp,.hljs-meta</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> #dc3958<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* Kimbie Orange */</span><span class="token selector">.hljs-number,.hljs-built_in,.hljs-builtin-name,.hljs-literal,.hljs-type,.hljs-params,.hljs-deletion,.hljs-link</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> #f79a32<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* Kimbie Yellow */</span><span class="token selector">.hljs-title,.hljs-section,.hljs-attribute</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> #f06431<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* Kimbie Green */</span><span class="token selector">.hljs-string,.hljs-symbol,.hljs-bullet,.hljs-addition</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> #889b4a<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* Kimbie Purple */</span><span class="token selector">.hljs-keyword,.hljs-selector-tag,.hljs-function</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> #98676a<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* 更改的內容 把.hljs改為 #article-container figure.highlight .hljs *、/* ------------------------------------- */</span><span class="token selector">#article-container figure.highlight .hljs</span> <span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">overflow-x</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #221a0f<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #d3af86<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 0.5em<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.hljs-emphasis</span> <span class="token punctuation">{</span>  <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.hljs-strong</span> <span class="token punctuation">{</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="引入文件"><a href="#引入文件" class="headerlink" title="引入文件"></a>引入文件</h3><p>修改<code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">inject</span><span class="token punctuation">:</span>  <span class="token key atrule">head</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> &lt;link rel="stylesheet" href="/self/Kimbiedark.css"<span class="token punctuation">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="運行Hexo"><a href="#運行Hexo" class="headerlink" title="運行Hexo"></a>運行Hexo</h3><p>運行Hexo後，應該可以看到修改的效果</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-highlight-self-css.png"></p><h2 id="Prismjs"><a href="#Prismjs" class="headerlink" title="Prismjs"></a>Prismjs</h2><p>以使用<code>prism-duotone-light</code>主題配色為例子</p><h3 id="配置highlight-theme為false-1"><a href="#配置highlight-theme為false-1" class="headerlink" title="配置highlight_theme為false"></a>配置<code>highlight_theme</code>為<code>false</code></h3><p>修改<code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight_theme</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="下載和修改CSS文件-1"><a href="#下載和修改CSS文件-1" class="headerlink" title="下載和修改CSS文件"></a>下載和修改CSS文件</h3><p>在<a href="https://github.com/PrismJS/prism-themes/blob/master/themes/prism-duotone-light.css">Github</a>上找到這個CSS</p><p>在 Hexo 的根目錄<code>source</code>文件夾下創立一個<code>self</code>文件夾，在<code>self</code>文件夾創建一個<code>duotone.css</code>文件</p><p>把Github上<code>prism-duotone-light</code>的 CSS 代碼複製到``duotone.css`去。（你也可以直接從Github上下載這個CSS）</p><p><strong>prism-duotone-light</strong>代碼如下</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*Name:   Duotone LightAuthor: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-morning-light.css)Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)*/</span><span class="token selector">code[class*="language-"],pre[class*="language-"]</span> <span class="token punctuation">{</span><span class="token property">font-family</span><span class="token punctuation">:</span> Consolas<span class="token punctuation">,</span> Menlo<span class="token punctuation">,</span> Monaco<span class="token punctuation">,</span> <span class="token string">"Andale Mono WT"</span><span class="token punctuation">,</span> <span class="token string">"Andale Mono"</span><span class="token punctuation">,</span> <span class="token string">"Lucida Console"</span><span class="token punctuation">,</span> <span class="token string">"Lucida Sans Typewriter"</span><span class="token punctuation">,</span> <span class="token string">"DejaVu Sans Mono"</span><span class="token punctuation">,</span> <span class="token string">"Bitstream Vera Sans Mono"</span><span class="token punctuation">,</span> <span class="token string">"Liberation Mono"</span><span class="token punctuation">,</span> <span class="token string">"Nimbus Mono L"</span><span class="token punctuation">,</span> <span class="token string">"Courier New"</span><span class="token punctuation">,</span> Courier<span class="token punctuation">,</span> monospace<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span> 1.375<span class="token punctuation">;</span><span class="token property">direction</span><span class="token punctuation">:</span> ltr<span class="token punctuation">;</span><span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token property">white-space</span><span class="token punctuation">:</span> pre<span class="token punctuation">;</span><span class="token property">word-spacing</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token property">word-break</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token property">-moz-tab-size</span><span class="token punctuation">:</span> 4<span class="token punctuation">;</span><span class="token property">-o-tab-size</span><span class="token punctuation">:</span> 4<span class="token punctuation">;</span><span class="token property">tab-size</span><span class="token punctuation">:</span> 4<span class="token punctuation">;</span><span class="token property">-webkit-hyphens</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token property">-moz-hyphens</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token property">-ms-hyphens</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token property">hyphens</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> #faf8f5<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span> #728fcb<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">pre &gt; code[class*="language-"]</span> <span class="token punctuation">{</span><span class="token property">font-size</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">pre[class*="language-"]::-moz-selection, pre[class*="language-"] ::-moz-selection,code[class*="language-"]::-moz-selection, code[class*="language-"] ::-moz-selection</span> <span class="token punctuation">{</span><span class="token property">text-shadow</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> #faf8f5<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">pre[class*="language-"]::selection, pre[class*="language-"] ::selection,code[class*="language-"]::selection, code[class*="language-"] ::selection</span> <span class="token punctuation">{</span><span class="token property">text-shadow</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> #faf8f5<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* Code blocks */</span><span class="token selector">pre[class*="language-"]</span> <span class="token punctuation">{</span><span class="token property">padding</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> .5em 0<span class="token punctuation">;</span><span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* Inline code */</span><span class="token selector">:not(pre) &gt; code[class*="language-"]</span> <span class="token punctuation">{</span><span class="token property">padding</span><span class="token punctuation">:</span> .1em<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> .3em<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.comment,.token.prolog,.token.doctype,.token.cdata</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #b6ad9a<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.punctuation</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #b6ad9a<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.namespace</span> <span class="token punctuation">{</span><span class="token property">opacity</span><span class="token punctuation">:</span> .7<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.tag,.token.operator,.token.number</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #063289<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.property,.token.function</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #b29762<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.tag-id,.token.selector,.token.atrule-id</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #2d2006<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">code.language-javascript,.token.attr-name</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #896724<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">code.language-css,code.language-scss,.token.boolean,.token.string,.token.entity,.token.url,.language-css .token.string,.language-scss .token.string,.style .token.string,.token.attr-value,.token.keyword,.token.control,.token.directive,.token.unit,.token.statement,.token.regex,.token.atrule</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #728fcb<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.placeholder,.token.variable</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #93abdc<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.deleted</span> <span class="token punctuation">{</span><span class="token property">text-decoration</span><span class="token punctuation">:</span> line-through<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.inserted</span> <span class="token punctuation">{</span><span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px dotted #2d2006<span class="token punctuation">;</span><span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.italic</span> <span class="token punctuation">{</span><span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.important,.token.bold</span> <span class="token punctuation">{</span><span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.important</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #896724<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.entity</span> <span class="token punctuation">{</span><span class="token property">cursor</span><span class="token punctuation">:</span> help<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">pre &gt; code.highlight</span> <span class="token punctuation">{</span><span class="token property">outline</span><span class="token punctuation">:</span> .4em solid #896724<span class="token punctuation">;</span><span class="token property">outline-offset</span><span class="token punctuation">:</span> .4em<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* overrides color-values for the Line Numbers plugin * http://prismjs.com/plugins/line-numbers/ */</span><span class="token selector">.line-numbers .line-numbers-rows</span> <span class="token punctuation">{</span><span class="token property">border-right-color</span><span class="token punctuation">:</span> #ece8de<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.line-numbers-rows &gt; span:before</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #cdc4b1<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* overrides color-values for the Line Highlight plugin * http://prismjs.com/plugins/line-highlight/ */</span><span class="token selector">.line-highlight</span> <span class="token punctuation">{</span><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>45<span class="token punctuation">,</span> 32<span class="token punctuation">,</span> 6<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-webkit-linear-gradient</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>45<span class="token punctuation">,</span> 32<span class="token punctuation">,</span> 6<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span> 70%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>45<span class="token punctuation">,</span> 32<span class="token punctuation">,</span> 6<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>45<span class="token punctuation">,</span> 32<span class="token punctuation">,</span> 6<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span> 70%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>45<span class="token punctuation">,</span> 32<span class="token punctuation">,</span> 6<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改這個CSS文件為</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 新添加的內容  -------------------------------------   --hl-color                  代碼框字體顔色 【必須】 (把下面 pre[class*="language-"]的 color 複製到這裏來)  --hl-bg                     代碼框背景色 【必須】 (把下面 pre[class*="language-"]的 background複製到這裏來)  --hltools-bg: #321a0f       代碼框頂部工具欄背景色 【可選】(如果你關掉了 copy、lang 和 shrink,可不用配置這個）  --hltools-color: #fff       代碼框頂部工具欄字體顔色 【可選】(如果你關掉了 copy、lang 和 shrink,可不用配置這個）  --hlnumber-bg: #221a0f      代碼框行數背景色 【可選】(如果已經關掉 line_number,可以不用配置這個)  --hlnumber-color: #fff      代碼框行數字體顔色 【可選】 (如果已經關掉 line_number,可以不用配置這個)  --hlscrollbar-bg: #d3af86   代碼框滾動條顔色 【可選】（默認為主題主顔色）  --hlexpand-bg: #d3af86      代碼框底部展開背景色 【可選】(如果已經關掉 highlight_height_limit,可以不用配置這個)*/</span><span class="token selector">:root</span> <span class="token punctuation">{</span>  <span class="token property">--hl-color</span><span class="token punctuation">:</span> #728fcb<span class="token punctuation">;</span>  <span class="token property">--hl-bg</span><span class="token punctuation">:</span> #faf8f5<span class="token punctuation">;</span>  <span class="token property">--hltools-bg</span><span class="token punctuation">:</span> xxxxxxx<span class="token punctuation">;</span>  <span class="token property">--hltools-color</span><span class="token punctuation">:</span> xxxxxxx<span class="token punctuation">;</span>  <span class="token property">--hlnumber-bg</span><span class="token punctuation">:</span> xxxxxxx<span class="token punctuation">;</span>  <span class="token property">--hlnumber-color</span><span class="token punctuation">:</span> xxxxxxxx<span class="token punctuation">;</span>  <span class="token property">--hlscrollbar-bg</span><span class="token punctuation">:</span> xxxxx<span class="token punctuation">;</span>  <span class="token property">--hlexpand-bg</span><span class="token punctuation">:</span> xxxxxxx<span class="token punctuation">}</span><span class="token comment">/* ------------------------------------- */</span><span class="token comment">/* 這些可以刪除（可留着，如果有衝突，請刪除） */</span><span class="token comment">/* ------------------------------------- */</span><span class="token selector">code[class*="language-"],pre[class*="language-"]</span> <span class="token punctuation">{</span><span class="token property">font-family</span><span class="token punctuation">:</span> Consolas<span class="token punctuation">,</span> Menlo<span class="token punctuation">,</span> Monaco<span class="token punctuation">,</span> <span class="token string">"Andale Mono WT"</span><span class="token punctuation">,</span> <span class="token string">"Andale Mono"</span><span class="token punctuation">,</span> <span class="token string">"Lucida Console"</span><span class="token punctuation">,</span> <span class="token string">"Lucida Sans Typewriter"</span><span class="token punctuation">,</span> <span class="token string">"DejaVu Sans Mono"</span><span class="token punctuation">,</span> <span class="token string">"Bitstream Vera Sans Mono"</span><span class="token punctuation">,</span> <span class="token string">"Liberation Mono"</span><span class="token punctuation">,</span> <span class="token string">"Nimbus Mono L"</span><span class="token punctuation">,</span> <span class="token string">"Courier New"</span><span class="token punctuation">,</span> Courier<span class="token punctuation">,</span> monospace<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span> 1.375<span class="token punctuation">;</span><span class="token property">direction</span><span class="token punctuation">:</span> ltr<span class="token punctuation">;</span><span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token property">white-space</span><span class="token punctuation">:</span> pre<span class="token punctuation">;</span><span class="token property">word-spacing</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token property">word-break</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token property">-moz-tab-size</span><span class="token punctuation">:</span> 4<span class="token punctuation">;</span><span class="token property">-o-tab-size</span><span class="token punctuation">:</span> 4<span class="token punctuation">;</span><span class="token property">tab-size</span><span class="token punctuation">:</span> 4<span class="token punctuation">;</span><span class="token property">-webkit-hyphens</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token property">-moz-hyphens</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token property">-ms-hyphens</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token property">hyphens</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> #faf8f5<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span> #728fcb<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">pre &gt; code[class*="language-"]</span> <span class="token punctuation">{</span><span class="token property">font-size</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">pre[class*="language-"]::-moz-selection, pre[class*="language-"] ::-moz-selection,code[class*="language-"]::-moz-selection, code[class*="language-"] ::-moz-selection</span> <span class="token punctuation">{</span><span class="token property">text-shadow</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> #faf8f5<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">pre[class*="language-"]::selection, pre[class*="language-"] ::selection,code[class*="language-"]::selection, code[class*="language-"] ::selection</span> <span class="token punctuation">{</span><span class="token property">text-shadow</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> #faf8f5<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* Code blocks */</span><span class="token selector">pre[class*="language-"]</span> <span class="token punctuation">{</span><span class="token property">padding</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> .5em 0<span class="token punctuation">;</span><span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* Inline code */</span><span class="token selector">:not(pre) &gt; code[class*="language-"]</span> <span class="token punctuation">{</span><span class="token property">padding</span><span class="token punctuation">:</span> .1em<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> .3em<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* ------------------------------------- */</span><span class="token comment">/* 到這裏為止，可以刪除 */</span><span class="token selector">.token.comment,.token.prolog,.token.doctype,.token.cdata</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #b6ad9a<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.punctuation</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #b6ad9a<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.namespace</span> <span class="token punctuation">{</span><span class="token property">opacity</span><span class="token punctuation">:</span> .7<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.tag,.token.operator,.token.number</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #063289<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.property,.token.function</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #b29762<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.tag-id,.token.selector,.token.atrule-id</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #2d2006<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">code.language-javascript,.token.attr-name</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #896724<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">code.language-css,code.language-scss,.token.boolean,.token.string,.token.entity,.token.url,.language-css .token.string,.language-scss .token.string,.style .token.string,.token.attr-value,.token.keyword,.token.control,.token.directive,.token.unit,.token.statement,.token.regex,.token.atrule</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #728fcb<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.placeholder,.token.variable</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #93abdc<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.deleted</span> <span class="token punctuation">{</span><span class="token property">text-decoration</span><span class="token punctuation">:</span> line-through<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.inserted</span> <span class="token punctuation">{</span><span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px dotted #2d2006<span class="token punctuation">;</span><span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.italic</span> <span class="token punctuation">{</span><span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.important,.token.bold</span> <span class="token punctuation">{</span><span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.important</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #896724<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.token.entity</span> <span class="token punctuation">{</span><span class="token property">cursor</span><span class="token punctuation">:</span> help<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">pre &gt; code.highlight</span> <span class="token punctuation">{</span><span class="token property">outline</span><span class="token punctuation">:</span> .4em solid #896724<span class="token punctuation">;</span><span class="token property">outline-offset</span><span class="token punctuation">:</span> .4em<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* overrides color-values for the Line Numbers plugin * http://prismjs.com/plugins/line-numbers/ */</span><span class="token selector">.line-numbers .line-numbers-rows</span> <span class="token punctuation">{</span><span class="token property">border-right-color</span><span class="token punctuation">:</span> #ece8de<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.line-numbers-rows &gt; span:before</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span> #cdc4b1<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* overrides color-values for the Line Highlight plugin * http://prismjs.com/plugins/line-highlight/ */</span><span class="token selector">.line-highlight</span> <span class="token punctuation">{</span><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>45<span class="token punctuation">,</span> 32<span class="token punctuation">,</span> 6<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-webkit-linear-gradient</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>45<span class="token punctuation">,</span> 32<span class="token punctuation">,</span> 6<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span> 70%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>45<span class="token punctuation">,</span> 32<span class="token punctuation">,</span> 6<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>45<span class="token punctuation">,</span> 32<span class="token punctuation">,</span> 6<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span> 70%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>45<span class="token punctuation">,</span> 32<span class="token punctuation">,</span> 6<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="引入文件-1"><a href="#引入文件-1" class="headerlink" title="引入文件"></a>引入文件</h3><p>修改<code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">inject</span><span class="token punctuation">:</span>  <span class="token key atrule">head</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> &lt;link rel="stylesheet" href="/self/duotone.css"<span class="token punctuation">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="運行Hexo-1"><a href="#運行Hexo-1" class="headerlink" title="運行Hexo"></a>運行Hexo</h3><p>運行Hexo後，應該可以看到修改的效果</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-custom-code-color-prismjs.png" alt="image-20200831000324474"></p>]]></content>
      
      
      <categories>
          
          <category> 進階教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Hexo </tag>
            
            <tag> 主題 </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly 打賞</title>
      <link href="/posts/6ad51b4.html"/>
      <url>/posts/6ad51b4.html</url>
      
        <content type="html"><![CDATA[<div class="note orange icon flat"><i class="note-icon fas fa-mug-hot"></i><p>非常感謝以下網友的打賞</p><p>更新於 2022 - 02 - 04</p></div><div class="tabs" id="coffee"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#coffee-1"><i class="fab fa-weixin"></i>微信</button></li><li class="tab"><button type="button" data-href="#coffee-2"><i class="fab fa-alipay"></i>支付寶</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="coffee-1"><table><thead><tr><th>名字</th><th>金額</th></tr></thead><tbody><tr><td>B*X</td><td>2.33</td></tr><tr><td>A*.</td><td>0.01</td></tr><tr><td>*虎</td><td>3</td></tr><tr><td>*、</td><td>5</td></tr><tr><td>*林</td><td>3.75</td></tr><tr><td>*雪</td><td>10</td></tr><tr><td>O*r</td><td>15</td></tr><tr><td>*泥</td><td>0.01</td></tr><tr><td>*嗎</td><td>5</td></tr><tr><td>*鋒</td><td>10</td></tr><tr><td>*強</td><td>5</td></tr><tr><td>K*n</td><td>6.66</td></tr><tr><td>*1</td><td>2.22</td></tr><tr><td>圖*_</td><td>5</td></tr><tr><td>B*e</td><td>6.66</td></tr><tr><td>n*l</td><td>6.66</td></tr><tr><td>*仔</td><td>5</td></tr><tr><td>M*5</td><td>2</td></tr><tr><td>w*r</td><td>18.88</td></tr><tr><td>*龍</td><td>1.6</td></tr><tr><td>*一</td><td>5</td></tr><tr><td>*晨</td><td>6.66</td></tr><tr><td>*隨</td><td>8.88</td></tr><tr><td>*忘</td><td>10</td></tr><tr><td>*想</td><td>6.66</td></tr><tr><td>*喜</td><td>2.5</td></tr><tr><td>*喜</td><td>2.5</td></tr><tr><td>*傑</td><td>8.88</td></tr><tr><td>*雨</td><td>10</td></tr><tr><td>T*r</td><td>10</td></tr><tr><td>T*n</td><td>2.88</td></tr><tr><td>s*n</td><td>2</td></tr><tr><td>*o</td><td>9.99</td></tr><tr><td>m*o</td><td>2.5</td></tr><tr><td>張*i</td><td>0.3</td></tr><tr><td>*斌</td><td>2.88</td></tr><tr><td>q*n</td><td>20</td></tr><tr><td>*唯</td><td>8.88</td></tr><tr><td>H*n</td><td>5</td></tr><tr><td>I*U</td><td>3.65</td></tr><tr><td>*白</td><td>6</td></tr><tr><td>*猪</td><td>6.66</td></tr><tr><td>h*i</td><td>10</td></tr><tr><td>B*g</td><td>5</td></tr><tr><td>J*R</td><td>3</td></tr><tr><td>*夜</td><td>6.66</td></tr><tr><td>等*.</td><td>12.5</td></tr><tr><td>n*l</td><td>1.68</td></tr><tr><td>M*.</td><td>38</td></tr><tr><td>R*n</td><td>1.68</td></tr><tr><td>W*u</td><td>4.91</td></tr><tr><td>k*n</td><td>58.8</td></tr><tr><td>*呕</td><td>88.8</td></tr><tr><td>*沙</td><td>5</td></tr><tr><td>*x</td><td>1</td></tr><tr><td>*生</td><td>0.01</td></tr><tr><td>D*n</td><td>6.66</td></tr><tr><td>*。</td><td>0.01</td></tr><tr><td>*探</td><td>5.20</td></tr><tr><td>*宇</td><td>5</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="coffee-2"><table><thead><tr><th>名字</th><th>金額</th></tr></thead><tbody><tr><td>iMIGw0</td><td>10</td></tr><tr><td>百事可樂</td><td>10</td></tr><tr><td>KT</td><td>5</td></tr><tr><td>JVxie</td><td>8.88</td></tr><tr><td>Coolkk</td><td>10</td></tr><tr><td>Sirius</td><td>10</td></tr><tr><td>惴繞</td><td>1.11</td></tr><tr><td>Jiang慢慢</td><td>8.88</td></tr><tr><td>tjj</td><td>28.88</td></tr><tr><td>無風引漩</td><td>10</td></tr><tr><td>忘我楊</td><td>50</td></tr><tr><td>小虎</td><td>10</td></tr><tr><td>無殤雨露</td><td>10</td></tr><tr><td>Rhythm~</td><td>10</td></tr><tr><td>小樣</td><td>36</td></tr><tr><td>SunnyWS</td><td>20</td></tr><tr><td>ZFour</td><td>8.88</td></tr><tr><td>JeM_緘默</td><td>0.14</td></tr><tr><td>小張</td><td>5</td></tr><tr><td>書生</td><td>6.88</td></tr><tr><td>王青陽</td><td>5</td></tr><tr><td>趙碧寒</td><td>10</td></tr><tr><td>對好的就這樣</td><td>6</td></tr><tr><td>雨辰</td><td>5</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> Thx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> butterfly </tag>
            
            <tag> 打賞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly 安裝文檔(七) 更新日誌</title>
      <link href="/posts/198a4240.html"/>
      <url>/posts/198a4240.html</url>
      
        <content type="html"><![CDATA[<div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>📖  本教程更新於 2022 年 02 月 13 日，教程的內容針對最新<strong>穩定版</strong>而更新（如果你是舊版，教程會有些出入，請留意）</p><p>🦋  Butterfly 已經更新到 <a href="https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.1.0">4.1.0</a></p></div><div class="note green icon flat"><i class="note-icon fas fa-rocket"></i><p> 📚  文檔目錄</p><p><a href="#">Post not found: Butterfly-安裝文檔-一-快速開始 🚀 快速開始</a> - <a href="#">Post not found: Butterfly-安裝文檔-二-主題頁面 📑 主題頁面</a> - <a href="#">Post not found: Butterfly-安裝文檔-三-主題配置-1 🛠 主題配置-1</a> - <a href="#">Post not found: Butterfly-安裝文檔-四-主題配置-2 ⚔️ 主題配置-2</a> - <a href="#">Post not found: Butterfly-安裝文檔-五-主題問答 ❓ 主題問答</a> - <a href="#">Post not found: Butterfly-安裝文檔-六-進階教程 ⚡️ 進階教程</a> - <a href="#">Post not found: Butterfly-安裝文檔-七-更新日誌 ✨ 更新日誌</a> - <a href="#">Post not found: Butterfly-打賞 🤞 打賞</a></p></div><div class="note orange icon flat"><i class="note-icon fas fa-magic"></i><p>你可以通過右下角的 <strong>簡</strong> 按鈕切換為簡體顯示 </p></div><hr><details class="toggle"><summary class="toggle-button" style="">4.1.0 (2022/02/13)</summary><div class="toggle-content"><h2 id="4-1-0-2022-02-13"><a href="#4-1-0-2022-02-13" class="headerlink" title="4.1.0 (2022/02/13)"></a>4.1.0 (2022/02/13)</h2><h3 id="Breaking-Change"><a href="#Breaking-Change" class="headerlink" title="Breaking Change"></a>Breaking Change</h3><ol><li><p>升級 fontawesome 到 v6 #689</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">CDN:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  fontawesome:</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  fontawesomeV6:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li>snackbar 增加圓角</li><li>增加 flink 標籤外掛</li></ol><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復點擊 toc 外圍,控制檯報錯的 bug</li><li>Facebook Comments 無法使用 #787</li><li>chat_btn 聊天按鈕翻譯缺失 #791</li><li>local search 的 content 設爲 false, 搜索無法運行的 bug #764</li><li>Mermaid 圖表渲染後元素高度過大 #773</li><li>文章頁分享按鈕另開一行時， 導航頁寬度沒有 100% 的 bug #765</li></ol><h3 id="Improvement"><a href="#Improvement" class="headerlink" title="Improvement"></a>Improvement</h3><ol><li>語義化 toggle 標籤外掛</li><li>darkmode 下 toc 背景顏色更改</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">4.0.1 (2022/01/16)</summary><div class="toggle-content"><h2 id="4-0-1-2022-01-16"><a href="#4-0-1-2022-01-16" class="headerlink" title="4.0.1 (2022/01/16)"></a>4.0.1 (2022/01/16)</h2><p>improvement: 優化 pjax 下，右下角按鈕的動畫</p><p>fix: 修復頁面設置 aside 爲 true 時，js 報錯的 bug</p><p>fix: 修復部分頁面右下角按鈕位置遮擋的 bug</p><p>fix: 修復壓縮 html 代碼,友情鏈接頁面壓縮會報錯的 bug</p><p>fix: 修復safari上滑動側邊菜單欄會收起的 bug</p></div></details><details class="toggle"><summary class="toggle-button" style="">4.0.0 (2022/01/15)</summary><div class="toggle-content"><h2 id="4-0-0-2022-01-15"><a href="#4-0-0-2022-01-15" class="headerlink" title="4.0.0 (2022/01/15)"></a>4.0.0 (2022/01/15)</h2><h3 id="Breaking-Change"><a href="#Breaking-Change" class="headerlink" title="Breaking Change"></a>Breaking Change</h3><ol><li><p>精簡各評論的配置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">disqusjs:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  apikey:</span><span class="token prefix deleted">-</span><span class="token line">  api:</span><span class="token prefix deleted">-</span><span class="token line">  nocomment: # display when a blog post or an article has no comment attached</span><span class="token prefix deleted">-</span><span class="token line">  admin:</span><span class="token prefix deleted">-</span><span class="token line">  adminLabel:</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  option:</span></span>gitalk:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  language: en # en, zh-CN, zh-TW, es-ES, fr, ru</span><span class="token prefix deleted">-</span><span class="token line">  perPage: 10 # Pagination size, with maximum 100.</span><span class="token prefix deleted">-</span><span class="token line">  distractionFreeMode: false # Facebook-like distraction free mode.</span><span class="token prefix deleted">-</span><span class="token line">  pagerDirection: last # Comment sorting direction, available values are last and first.</span><span class="token prefix deleted">-</span><span class="token line">  createIssueManually: false # Gitalk will create a corresponding github issue for your every single page automatically</span></span>valine:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  pageSize: 10 # comment list page size</span><span class="token prefix deleted">-</span><span class="token line">  lang: en # i18n: zh-CN/zh-TW/en/ja</span><span class="token prefix deleted">-</span><span class="token line">  placeholder: Please leave your footprints # valine comment input placeholder (like: Please leave your footprints)</span><span class="token prefix deleted">-</span><span class="token line">  guest_info: nick,mail,link # valine comment header info (nick/mail/link)</span><span class="token prefix deleted">-</span><span class="token line">  recordIP: false # Record reviewer IP</span><span class="token prefix deleted">-</span><span class="token line">  bg: # valine background</span><span class="token prefix deleted">-</span><span class="token line">  emojiCDN: # emoji CDN</span><span class="token prefix deleted">-</span><span class="token line">  enableQQ: false # enable the Nickname box to automatically get QQ Nickname and QQ Avatar</span><span class="token prefix deleted">-</span><span class="token line">  requiredFields: nick,mail # required fields (nick/mail)</span></span>waline:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  avatar: monsterid # gravatar style https://zh-tw.gravatar.com/site/implement/images/#default-image</span><span class="token prefix deleted">-</span><span class="token line">  avatarCDN: # Gravatar CDN baseURL</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>頁面支持 toc #636</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">toc:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  enable: true</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  post: true</span><span class="token prefix inserted">+</span><span class="token line">  page: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>刪除 hide_sidebar_menu_child 配置，改爲直接在 menu 配置 #640</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"># Hide the child menu items in mobile sidebar</span><span class="token prefix deleted">-</span><span class="token line">hide_sidebar_menu_child: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>完全移除 jquery</p><pre class="line-numbers language-DIFF" data-language="DIFF"><code class="language-DIFF">CDN:-  jquery: https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>移除騰訊分析</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"># Tencent Analytics ID</span><span class="token prefix deleted">-</span><span class="token line"># https://mta.qq.com</span><span class="token prefix deleted">-</span><span class="token line">tencent_analytics:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>photofigcaption 和 fancybox 的 figcaption 優先顯示 圖片的title屬性，然後是 alt 屬性 #683</p></li><li><p>支持新的評論名寫法，主題會處理評論名字大小寫，舊的會兼容</p></li><li><p>移除博天api，注意順序改變</p><pre class="line-numbers language-none"><code class="language-none"># source: 1  調用一言網的一句話（簡體） https://hitokoto.cn/# source: 2  調用一句網（簡體） http://yijuzhan.com/# source: 3  調用今日詩詞（簡體） https://www.jinrishici.com/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>移除 html 的 font-size 改爲瀏覽器默認大小</p></li></ol><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li><p>更新 fancybox 到 4</p><pre class="line-numbers language-DIFF" data-language="DIFF"><code class="language-DIFF">CDN:-  fancybox_css: https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css-  fancybox: https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js+  fancybox_css_v4:+  fancybox_v4:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>右下角按鈕自定義順序 #680</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">rightside_item_order:</span><span class="token prefix inserted">+</span><span class="token line">  enable: false</span><span class="token prefix inserted">+</span><span class="token line">  hide: # readmode,translate,darkmode,hideAside</span><span class="token prefix inserted">+</span><span class="token line">  show: # toc,chat,comment</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>網站資料顯示，當標籤和分類爲0時，數量顯示爲 0，而不是隱藏</p></li><li><p>代碼框設置高度限制，展開後按鈕不會消失，可點擊再次摺疊 #637</p></li><li><p>圖片選擇性禁用 lightbox #636</p></li><li><p>Twikoo 評論圖片添加 lightbox</p></li><li><p>升級 facebook comment js 到 version 11</p></li><li><p>爲文章單獨設置 TOC simple_style 顯示 #631</p></li><li><p>page 頁頂部圖增加黑色遮罩 #671</p></li><li><p>首頁 pagination更新 UI</p></li><li><p>主題 css 使用的 rem 改爲 em 或 px</p></li><li><p>移除 右下角字體調整按鈕</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"># Change font size</span><span class="token prefix deleted">-</span><span class="token line">change_font_size: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>新增標籤外掛 timeline #644</p></li><li><p>清除 配置文件 的CDN，默認CDN 不再顯示在 config</p></li><li><p>替換 Justified Gallery 爲 flickr-justified-gallery</p><pre class="line-numbers language-DIFF" data-language="DIFF"><code class="language-DIFF">CDN:-  justifiedGallery_js: https://cdn.jsdelivr.net/npm/justifiedGallery/dist/js/jquery.justifiedGallery.min.js-  justifiedGallery_css: https://cdn.jsdelivr.net/npm/justifiedGallery/dist/css/justifiedGallery.min.css+  flickr_justified_gallery_js:+  flickr_justified_gallery_css:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>切換夜間模式後，mermaid 也會切換夜間主題</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">mermaid:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: true</span><span class="token prefix unchanged"> </span><span class="token line"> # built-in themes: default/forest/dark/neutral</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  theme: default</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  theme: </span><span class="token prefix inserted">+</span><span class="token line">    light: default</span><span class="token prefix inserted">+</span><span class="token line">    dark: dark</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>壓縮html代碼後，mermaid 顯示正常</p></li><li><p>mermaid 可以在 隱藏屬性的標籤外掛 裏使用</p></li><li><p>本地搜索可處理 json #684</p></li><li><p>右下角按鈕 UI 微調</p></li><li><p>更改文章美化後,列表的顯示效果 #693 #686</p></li><li><p>algolia 升級至 v4</p><pre class="line-numbers language-DIFF" data-language="DIFF"><code class="language-DIFF">CDN:-  algolia_search: https://cdn.jsdelivr.net/npm/instantsearch.js@2.10.5/dist/instantsearch.min.js-  algolia_search_css: https://cdn.jsdelivr.net/npm/instantsearch.js@2.10.5/dist/instantsearch.min.css+  algolia_search_v4:+  instantsearch_v4:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>本地搜索增加數據庫加載中和搜索中 loading 顯示</p></li><li><p>anchor 不再限制 post 頁開啓，可以在任何頁面開啓</p></li><li><p>文章標題支持點擊跳轉到此標題開始閱讀 #653</p></li><li><p>toc 可以設置全部展開 #709</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">toc:<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  expand: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>增加 新的評論系統 giscus</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># Giscus</span><span class="token prefix inserted">+</span><span class="token line"># https://giscus.app/</span><span class="token prefix inserted">+</span><span class="token line">giscus:</span><span class="token prefix inserted">+</span><span class="token line">  repo:</span><span class="token prefix inserted">+</span><span class="token line">  repo_id:</span><span class="token prefix inserted">+</span><span class="token line">  category_id:</span><span class="token prefix inserted">+</span><span class="token line">  theme:</span><span class="token prefix inserted">+</span><span class="token line">    light: light</span><span class="token prefix inserted">+</span><span class="token line">    dark: dark</span><span class="token prefix inserted">+</span><span class="token line">  option:</span></span>CDN:<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  giscus:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>友情鏈接列表增加 fetch url 獲取</p></li><li><p>toc 間隔調整, 直接子元素增加豎線辨識 closed #723</p></li><li><p>可配置scrollbar顏色</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">theme_color:<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  scrollbar_color: "#49b1f5"</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>美化 firefox 瀏覽器滾動條</p></li><li><p>CDN 增加 blueimp_md5 配置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">CDN:<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  blueimp_md5:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復 開啓 lazyload 時， fancybox 的縮略圖顯示 lazyload 加載圖片的 bug</li><li>修復 字體過大/過小而導致 部分 ui 偏移的 bug </li><li>修復 自建頁面圖片沒有 blur 效果</li><li>修復窗口大小改變時，導航欄的 ui 可能會錯亂的 bug</li><li>修復 pjax下 ，twikoo 評論獲取是上一篇評論的 bug #678</li><li>修復 rightside 遮擋內容，導致內容無法點擊的 bug</li><li>修復 mermaid 在某些頁面（有元素 id 爲 mermaid 時） 會無法加載的 bug</li><li>修復 搜索框不會自動 focus 的 bug</li><li>修復沒有配置 comments 的 use 時，會報錯的 bug</li><li>修復 toc 在小設備上顯示出屏幕外的 bug</li><li>修復在打賞按鈕周圍也會觸發打賞彈窗的 bug</li><li>修復 Waline 最近評論的時間只顯示 “剛剛” 的問題 (以docker的方式執行) #730</li><li>修復 utterances 的 issue_term 設爲 url，og:title時，評論顯示錯誤的 bug</li><li>修復評論配置爲 Livere 和 Facebook Comments 時，最新評論模塊仍然顯示的 bug</li></ol><h3 id="Improvement"><a href="#Improvement" class="headerlink" title="Improvement"></a>Improvement</h3><ol><li>subtitle 代碼優化，當 source 設爲 false，同時 sub 也沒有配置，將會讀取 hexo 配置文件的 subtitle, 無須使用轉義字符</li><li>禁止 ios 點擊搜索框，頁面放大的問題</li><li>sidebar menu 點擊展開不再限制只能點擊按鈕 #640</li><li>修改沒有頂部圖下，文章頁的標題大小</li><li>優化 404 頁面 UI</li><li>lazyload 默認佔位圖改爲透明圖片</li><li>優化 css</li><li>優化 lazyload blur 出現特效</li><li>手機端更改閱讀模式退出按鈕到右下角</li><li>ui 微調</li><li>禁止一些瀏覽器會出現點擊左下角按鈕出現放大網頁的行爲</li><li>鼠標移到最新評論內容，增加 title 顯示</li><li>移除 button 的 hover 效果</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.8.4 (2021/09/18)</summary><div class="toggle-content"><h2 id="3-8-4-2021-09-18"><a href="#3-8-4-2021-09-18" class="headerlink" title="3.8.4 (2021/09/18)"></a>3.8.4 (2021/09/18)</h2><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復開啟 photofigcaption 後，導致 inlineImg 標籤外掛顯示錯亂的 bug close #667</li><li>修復使用本地搜索時，搜索插件配置為不搜索文章內容會無法使用搜索的 bug close #666</li><li>修復可能導致相關文章鏈接出錯的 bug close #549</li></ol><h3 id="Improvement"><a href="#Improvement" class="headerlink" title="Improvement"></a>Improvement</h3><ol><li>調整代碼框滾動條顏色 close #651</li><li>當圖片沒有 figcaption 時，不會添加 figcaption 代碼</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.8.3 (2021/07/30)</summary><div class="toggle-content"><h2 id="3-8-3-2021-07-30"><a href="#3-8-3-2021-07-30" class="headerlink" title="3.8.3 (2021/07/30)"></a>3.8.3 (2021/07/30)</h2><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復 Waline 評論系統 設置 avatarCDN 無效的 bug</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.8.2 (2021/07/20)</summary><div class="toggle-content"><h2 id="3-8-2-2021-07-20"><a href="#3-8-2-2021-07-20" class="headerlink" title="3.8.2 (2021/07/20)"></a>3.8.2 (2021/07/20)</h2><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復 footer 在部分瀏覽器沒有顯示在底部的 bug #616</li></ol><h3 id="Improvement"><a href="#Improvement" class="headerlink" title="Improvement"></a>Improvement</h3><ol><li>修改配置文件註釋 #613</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.8.1 (2021/07/10)</summary><div class="toggle-content"><h2 id="3-8-1-2021-07-10"><a href="#3-8-1-2021-07-10" class="headerlink" title="3.8.1 (2021/07/10)"></a>3.8.1 (2021/07/10)</h2><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復 inline mathjax 有滾動條的 bug</li><li>修復友情鏈接的頭像帶有 Medium Zoom 燈箱的 bug #607 </li><li>修復友情鏈接的頭像帶有 FancyBox 燈箱的 bug #607 </li></ol><h3 id="Dependencies"><a href="#Dependencies" class="headerlink" title="Dependencies"></a>Dependencies</h3><ol><li>update hexo-renderer-pug</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.8.0 (2021/07/04)</summary><div class="toggle-content"><h2 id="3-8-0-2021-07-04"><a href="#3-8-0-2021-07-04" class="headerlink" title="3.8.0 (2021/07/04)"></a>3.8.0 (2021/07/04)</h2><h3 id="Breaking-Change"><a href="#Breaking-Change" class="headerlink" title="Breaking Change"></a>Breaking Change</h3><ol><li><p>archives 的 標題 在 menu 配置中獲取</p></li><li><p>移除最新評論的評論服務商選擇，默認為配置的第一個評論服務商</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">newest_comments:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: false</span><span class="token prefix unchanged"> </span><span class="token line"> sort_order: # Don't modify the setting unless you know how it works</span><span class="token prefix unchanged"> </span><span class="token line"> limit: 6</span><span class="token prefix unchanged"> </span><span class="token line"> storage: 10 # unit: mins, save data to localStorage</span><span class="token prefix unchanged"> </span><span class="token line"> avatar: true</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  # You can only choose one, or neither</span><span class="token prefix deleted">-</span><span class="token line">  valine: false</span><span class="token prefix deleted">-</span><span class="token line">  github_issues:</span><span class="token prefix deleted">-</span><span class="token line">    enable: false</span><span class="token prefix deleted">-</span><span class="token line">    repo:</span><span class="token prefix deleted">-</span><span class="token line">  disqus:</span><span class="token prefix deleted">-</span><span class="token line">    enable: false</span><span class="token prefix deleted">-</span><span class="token line">    forum:</span><span class="token prefix deleted">-</span><span class="token line">    api_key:</span><span class="token prefix deleted">-</span><span class="token line">  twikoo: false</span><span class="token prefix deleted">-</span><span class="token line">  waline: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>widget 寫法更改/可添加非 sticky 區域 widget</p></li></ol><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li><p>修改最新評論 icon</p></li><li><p>waline 顔色適配主題色</p></li><li><p>增加 waline avatarCDN 配置（最新評論也會更新）</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">waline:...<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">avatarCDN： # Gravatar CDN baseURL</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>升級 facebook comment js 到 v10</p></li></ol><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復友情鏈接和aside 頭像在 lazyload blur下的顯示 bug</li><li>修復設置 highlight_shrink: true 後，部分代碼框依舊展開的 bug #602</li><li>修復 mathjax 在列表下，導致 列表沒有樣式的 bug  #586</li><li>修復文章頁 mathjax 因字體小導致顯示重疊的 bug #587</li><li>修復當內容過少時，footer 沒有底部靠攏的 bug</li></ol><h3 id="Improvement"><a href="#Improvement" class="headerlink" title="Improvement"></a>Improvement</h3><ol><li>UI 優化</li><li>waline 字體大小，頭像特效調整</li><li>pjax 優化</li><li>減少卡頓，apple 裝置首頁背景 background-attachment 設為 scroll</li><li>404 頁面不再顯示 rightside</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.7.8 (2021/06/05)</summary><div class="toggle-content"><h2 id="3-7-8-2021-06-05"><a href="#3-7-8-2021-06-05" class="headerlink" title="3.7.8 (2021/06/05)"></a>3.7.8 (2021/06/05)</h2><h3 id="Breaking-Change"><a href="#Breaking-Change" class="headerlink" title="Breaking Change"></a>Breaking Change</h3><ol><li>移除 waline 的 emojiCDN 和 emojiMaps 配置</li></ol><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復 升級到 waline 1.x 而出現的 bug</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.7.7 (2021/05/11)</summary><div class="toggle-content"><h2 id="3-7-7-2021-05-11"><a href="#3-7-7-2021-05-11" class="headerlink" title="3.7.7 (2021/05/11)"></a>3.7.7 (2021/05/11)</h2><h3 id="Improvement"><a href="#Improvement" class="headerlink" title="Improvement"></a>Improvement</h3><ol><li>適配新版 waline 夜間模式</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.7.6 (2021/05/09)</summary><div class="toggle-content"><h2 id="3-7-6-2021-05-09"><a href="#3-7-6-2021-05-09" class="headerlink" title="3.7.6 (2021/05/09)"></a>3.7.6 (2021/05/09)</h2><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復標題/博客名有 ‘ 時，pjax 會報錯的 bug</li></ol><h3 id="Improvement"><a href="#Improvement" class="headerlink" title="Improvement"></a>Improvement</h3><ol><li>css 調整</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.7.5 (2021/05/05)</summary><div class="toggle-content"><h2 id="3-7-5-2021-05-05"><a href="#3-7-5-2021-05-05" class="headerlink" title="3.7.5 (2021/05/05)"></a>3.7.5 (2021/05/05)</h2><h3 id="Breaking-Change"><a href="#Breaking-Change" class="headerlink" title="Breaking Change"></a>Breaking Change</h3><ol><li><p>site_verification 優化，需自行配置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"># Google Webmaster tools verification setting</span><span class="token prefix deleted">-</span><span class="token line"># See: https://www.google.com/webmasters/</span><span class="token prefix deleted">-</span><span class="token line">google_site_verification:</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"># Bing Webmaster tools verification setting</span><span class="token prefix deleted">-</span><span class="token line"># See: https://www.bing.com/webmaster/</span><span class="token prefix deleted">-</span><span class="token line">bing_site_verification:</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"># Baidu Webmaster tools verification setting</span><span class="token prefix deleted">-</span><span class="token line"># See: https://ziyuan.baidu.com/site/</span><span class="token prefix deleted">-</span><span class="token line">baidu_site_verification:</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"># 360 Webmaster tools verification setting</span><span class="token prefix deleted">-</span><span class="token line"># see http://zhanzhang.so.com/</span><span class="token prefix deleted">-</span><span class="token line">qihu_site_verification:</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"># Yandex Webmaster tools verification setting</span><span class="token prefix deleted">-</span><span class="token line"># see https://webmaster.yandex.com/</span><span class="token prefix deleted">-</span><span class="token line">yandex_site_verification:</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">site_verification:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>lazyload 優化 (增加高斯模糊過度特效，增加配置 lazyload 範圍，佔位圖應用到全站)</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">lazyload:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: false</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  post: /img/loading.gif</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  field: site # site/post</span><span class="token prefix inserted">+</span><span class="token line">  placeholder: /img/loading.gif</span><span class="token prefix inserted">+</span><span class="token line">  blur: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li>增加 tags 標簽外掛 - label</li></ol><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復開啟anchor後，文章頁跳轉回主頁，主頁網址的hash添加上文章頁最後一個標題的 bug</li><li>修復開啟anchor後,瀏覽器上一頁/下一頁 跳轉會 404 的bug (文章頁的url hash 在pjax下變成 undefined)</li><li>修復 lazyload 報 undefined 的 bug close #532</li></ol><h3 id="Improvement"><a href="#Improvement" class="headerlink" title="Improvement"></a>Improvement</h3><ol><li>優化 pjax 下 404 頁面</li><li>優化 button tags 標簽外掛</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.7.1 (2021/03/30)</summary><div class="toggle-content"><h2 id="3-7-1-2021-03-30"><a href="#3-7-1-2021-03-30" class="headerlink" title="3.7.1 (2021/03/30)"></a>3.7.1 (2021/03/30)</h2><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復 github-issues 最新評論 獲取的url格式 bug</li><li>修復當標題有符號’時，disqus 和 disqusjs 無法加載的 bug</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.7.0 (2021/03/18)</summary><div class="toggle-content"><h2 id="3-7-0-2021-03-18"><a href="#3-7-0-2021-03-18" class="headerlink" title="3.7.0 (2021/03/18)"></a>3.7.0 (2021/03/18)</h2><h3 id="Breaking-Change"><a href="#Breaking-Change" class="headerlink" title="Breaking Change"></a>Breaking Change</h3><ol><li><p>更改子目錄的寫法，與父目錄一致</p></li><li><p>移除 artitalk （如需要，請安裝 hexo-butterfly-artitalk)</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"># Artitalk</span><span class="token prefix deleted">-</span><span class="token line"># see https://artitalk.js.org/</span><span class="token prefix deleted">-</span><span class="token line">artitalk:</span><span class="token prefix deleted">-</span><span class="token line">  appId:</span><span class="token prefix deleted">-</span><span class="token line">  appKey:</span><span class="token prefix deleted">-</span><span class="token line">  option:</span></span>CDN:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">artitalk: https://cdn.jsdelivr.net/npm/artitalk</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>katex_copytex 的js 和 css cdn 更換</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">katex_copytex: https://cdn.jsdelivr.net/npm/katex-copytex@latest/dist/katex-copytex.min.js</span><span class="token prefix deleted">-</span><span class="token line">katex_copytex_css: https://cdn.jsdelivr.net/npm/katex-copytex@latest/dist/katex-copytex.min.css</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">katex_copytex: https://cdn.jsdelivr.net/npm/katex@latest/dist/contrib/copy-tex.min.js</span><span class="token prefix inserted">+</span><span class="token line">katex_copytex_css: https://cdn.jsdelivr.net/npm/katex@latest/dist/contrib/copy-tex.css</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li><p>新增設置代碼高度限制，顯示展開按鈕</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">highlight_height_limit: false # unit: px</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>prismjs 也可以配置 code_word_wrap</p></li><li><p>增加 kbd 樣式 #507</p></li><li><p>添加waline,valine 和twikoo 提供的文章閲讀數配置 #502</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">valine:<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  visitor: false</span></span>waline:<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  visitor: false</span></span>twikoo:<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  visitor: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>增加 HexoPlusPlus_Talk（需要安裝 hexo-butterfly-hpptalk)</p></li><li><p>增加 tags 標簽外掛 inlineImg</p></li><li><p>gitalk 增加 option 配置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">gitalk:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> createIssueManually: false # Gitalk will create a corresponding github issue for your every single page automatically</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  option:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復prismjs 在 ios safari 下自動換行的bug</li><li>修復默認代碼大小不會隨着字體放大/放小而改變的bug</li><li>修復prismjs 無法識別的語言 顯示 null 而不是顯示 code 的 bug</li><li>在完全沒有配置的情況下，運行時控制枱報null 的問題</li></ol><h3 id="Improvement"><a href="#Improvement" class="headerlink" title="Improvement"></a>Improvement</h3><ol><li>主頁分頁會定位到文章區域 #519</li><li>css 優化，簡化自定義代碼色的 css 配置</li><li>搜索 hover 效果與其它目錄一致</li><li>百度統計適配 pjax #516</li><li>當文章頁cover 和 cover 的 default_img都沒有配置時，會去讀取default_top_img的參數</li><li>一句API 改為 https</li><li>pug代碼優化</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.6.2 (2021/02/03)</summary><div class="toggle-content"><h2 id="3-6-2-2021-02-03"><a href="#3-6-2-2021-02-03" class="headerlink" title="3.6.2 (2021/02/03)"></a>3.6.2 (2021/02/03)</h2><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>mathjax 和 katex 沒有加載js的bug</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.6.1 (2021/02/01)</summary><div class="toggle-content"><h2 id="3-6-1-2021-02-01"><a href="#3-6-1-2021-02-01" class="headerlink" title="3.6.1 (2021/02/01)"></a>3.6.1 (2021/02/01)</h2><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>非ios設備下，手機頁面下文章頁有toc的界面出現滾動條</li><li>非ios設備下，在layout標簽內的元素，如是position: fixed，其相對定位會更改 #482 #483</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.6.0 (2021/01/30)</summary><div class="toggle-content"><h2 id="3-6-0-2021-01-30"><a href="#3-6-0-2021-01-30" class="headerlink" title="3.6.0 (2021/01/30)"></a>3.6.0 (2021/01/30)</h2><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li><p>增加首頁評論數顯示</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">comments:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> ...</span><span class="token prefix unchanged"> </span><span class="token line"> count: false # Display comment count in post's top_img</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  card_post_count: false # Display comment count in Home Page</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>最新評論更新</p><ol><li><code>&lt;a&gt;</code> 標簽將會顯示 <code>[鏈接]</code></li><li><code>&lt;img&gt;</code>標簽將會顯示 <code>[圖片]</code></li><li><code>&lt;pre&gt;&lt;code&gt;</code> 標簽將顯示 <code>[代碼]</code></li><li>github-issues 獲取到的 url 改為對應文章地址，而不是issues地址</li><li>時間 time 增加 datetime屬性</li><li>waline 獲取到頭像會先匹配 waline數據庫是否有qq頭像屬性</li><li>部分評論顯示的時間改為更新時間</li></ol></li><li><p>aside ‘查看更多’按鈕 改為 圖標顯示在右上角</p></li><li><p>可配置最新評論的緩存時間</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">newest_comments:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: false</span><span class="token prefix unchanged"> </span><span class="token line"> sort_order: # Don't modify the setting unless you know how it works</span><span class="token prefix unchanged"> </span><span class="token line"> limit: 6</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  storage: 10 # unit: mins, save data to localStorage</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>增加 post_pagination 配置(可關閉/配置分頁展示邏輯)</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># post_pagination (分頁)</span><span class="token prefix inserted">+</span><span class="token line"># value: 1 || 2 || false</span><span class="token prefix inserted">+</span><span class="token line"># 1: The 'next post' will link to old post</span><span class="token prefix inserted">+</span><span class="token line"># 2: The 'next post' will link to new post</span><span class="token prefix inserted">+</span><span class="token line"># false: disable pagination</span><span class="token prefix inserted">+</span><span class="token line">post_pagination: 1</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>文章版權右上角改為 版權icon</p></li><li><p>增加配置 disable_top_img，禁用所有的top_img</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># Disable all banner image</span><span class="token prefix inserted">+</span><span class="token line">disable_top_img: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>增加 文章編輯</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># Post edit</span><span class="token prefix inserted">+</span><span class="token line"># Easily browse and edit blog source code online.</span><span class="token prefix inserted">+</span><span class="token line">post_edit:</span><span class="token prefix inserted">+</span><span class="token line">  enable: false</span><span class="token prefix inserted">+</span><span class="token line">  # url: https://github.com/user-name/repo-name/edit/branch-name/subdirectory-name/</span><span class="token prefix inserted">+</span><span class="token line">  # For example: https://github.com/jerryc127/butterfly.js.org/edit/main/source/</span><span class="token prefix inserted">+</span><span class="token line">  url:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復 文章頁面上滑子菜單圖標文字無法顯示的 bug #481</li><li>修復在 chrome上，進入頁面時，頁面元素會出現模糊到清晰 的 bug #479</li><li>修復夜間模式下，閲讀模式代碼塊背景顔色的顯示bug</li><li>修復打賞按鈕字數過多導致Hover異常的bug #473</li><li>修復評論裏  行內元素（表情/圖片）變成塊級元素（換行）的bug</li><li>修復點擊toc後，滾動完toc的highlight在點擊的上一個元素</li><li>修復子目錄下，打賞圖片跳轉鏈接會錯誤的bug</li><li>修復文字點擊關閉random無效的bug</li><li>修復手持設備橫向翻轉時，menu 沒有進行判斷,而導致樣式錯亂的bug</li><li>修復pjax下不會跳轉404頁面的bug</li><li>修復twikoo 評論數獲取會因為地域問題報錯的bug</li><li>修復 background-image 遇到鏈接有括號時會無法顯示的bug</li></ol><h3 id="Improvement"><a href="#Improvement" class="headerlink" title="Improvement"></a>Improvement</h3><ol><li>meta description  限制在150字以內 #480</li><li>pug優化和結構調整</li><li>pug 判斷優化</li><li>友情鏈接界面增加title顯示（top_img設為false時）</li><li>升級facebook comment sdk版本</li><li>優化toc顯示，當向上滾動時，導航欄不會遮擋 toc #472</li><li>pangu 改為全站渲染</li><li>最新評論js優化</li><li>調整 Readmode 標題邊距</li><li>卡片 hover box-shadow 微調</li><li>404頁面卡片增加hover</li><li>刪除部分多餘的代碼</li></ol><h3 id="Remove"><a href="#Remove" class="headerlink" title="Remove"></a>Remove</h3><ol><li><p>移除百度推送（百度已棄用）和百度轉碼</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"># Disable Baidu transformation on mobile devices (禁止百度轉碼)</span><span class="token prefix deleted">-</span><span class="token line">disable_baidu_transformation: true</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"># Baidu Push (百度推送)</span><span class="token prefix deleted">-</span><span class="token line">baidu_push: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>移除 fragment_cache 配置（默認開啟）</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"># Caches the contents in a fragment, speed up the generation (開啟hexo自帶的緩存,加快生成速度)</span><span class="token prefix deleted">-</span><span class="token line">fragment_cache: true</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.5.1 (2020/12/31)</summary><div class="toggle-content"><h2 id="3-5-1-2020-12-31"><a href="#3-5-1-2020-12-31" class="headerlink" title="3.5.1 (2020/12/31)"></a>3.5.1 (2020/12/31)</h2><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li>twikoo增加 region 配置</li></ol><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復twikoo 廣州地域下，最新評論無法讀取的bugs</li><li>修復waline背景設置無效的bugs</li><li>修復twikoo 廣州地域下，page 頁進入post頁，twikoo評論報錯的bugs</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.5.0 (2020/12/30)</summary><div class="toggle-content"><h2 id="3-5-0-2020-12-30"><a href="#3-5-0-2020-12-30" class="headerlink" title="3.5.0 (2020/12/30)"></a>3.5.0 (2020/12/30)</h2><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li><p>aside 個人資料widget可關閉button</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">aside:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">...</span><span class="token prefix unchanged"> </span><span class="token line"> card_author:</span><span class="token prefix unchanged"> </span><span class="token line">   enable: true</span><span class="token prefix unchanged"> </span><span class="token line">   description:</span><span class="token prefix unchanged"> </span><span class="token line">   button:</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">      enable: true</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">     icon: fab fa-github</span><span class="token prefix unchanged"> </span><span class="token line">     text: 主題 GitHub</span><span class="token prefix unchanged"> </span><span class="token line">     link: https://github.com/jerryc127/hexo-theme-butterfly</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>新增 Cloudflare Analytics</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># Cloudflare Analytics</span><span class="token prefix inserted">+</span><span class="token line"># https://www.cloudflare.com/zh-tw/web-analytics/</span><span class="token prefix inserted">+</span><span class="token line">cloudflare_analytics:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>新增 Microsoft Clarity</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># Microsoft Clarity</span><span class="token prefix inserted">+</span><span class="token line"># https://clarity.microsoft.com/</span><span class="token prefix inserted">+</span><span class="token line">microsoft_clarity:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>readmode 優化</p></li><li><p>aside 增加自定義 widget</p></li><li><p>aside widget 增加排序（只對page頁和sticky內的有效）</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">aside:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">...</span><span class="token prefix unchanged"> </span><span class="token line"> card_recent_post:</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    sort_order: # Don't modify the setting unless you know how it works</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> card_categories:</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    sort_order: # Don't modify the setting unless you know how it works</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> card_tags:</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    sort_order: # Don't modify the setting unless you know how it works</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> card_archives:</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    sort_order: # Don't modify the setting unless you know how it works</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> card_webinfo:</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    sort_order: # Don't modify the setting unless you know how it works</span></span>newest_comments:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: true</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  sort_order: # Don't modify the setting unless you know how it works</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>twikoo 增加 option 配置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"># Twikoo# https://github.com/imaegoo/twikoo<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">twikoo:</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">twikoo:</span><span class="token prefix inserted">+</span><span class="token line">  envId:</span><span class="token prefix inserted">+</span><span class="token line">  option:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>增加waline評論</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># waline - A simple comment system with backend support fork from Valine</span><span class="token prefix inserted">+</span><span class="token line"># https://waline.js.org/</span><span class="token prefix inserted">+</span><span class="token line">waline:</span><span class="token prefix inserted">+</span><span class="token line">  serverURL: # Waline server address url</span><span class="token prefix inserted">+</span><span class="token line">  avatar: monsterid # gravatar style https://zh-tw.gravatar.com/site/implement/images/#default-image</span><span class="token prefix inserted">+</span><span class="token line">  emojiCDN: # emoji CDN</span><span class="token prefix inserted">+</span><span class="token line">  bg: /img/comment_bg.png # waline background</span><span class="token prefix inserted">+</span><span class="token line">  option:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>增加waline評論數顯示</p></li><li><p>增加waline最新評論模塊</p><pre class="line-numbers language-DIFF" data-language="DIFF"><code class="language-DIFF">newest_comments:  enable: true...+  waline: false<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="Improvement"><a href="#Improvement" class="headerlink" title="Improvement"></a>Improvement</h3><ol><li><p>最新評論url 增加描點</p></li><li><p>html結構優化</p></li><li><p>修改newest_comments的leancloud為valine，並刪除其配置，改為讀取valine配置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"># Aside widget - Newest Commentsnewest_comments:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> ...</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  leancloud:</span><span class="token prefix deleted">-</span><span class="token line">    enable: false</span><span class="token prefix deleted">-</span><span class="token line">    appId: # leancloud application app id</span><span class="token prefix deleted">-</span><span class="token line">    appKey: # leancloud application app key</span><span class="token prefix deleted">-</span><span class="token line">    serverURL: # This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span><span class="token prefix deleted">-</span><span class="token line">    default_avatar: # mp/identicon/monsterid/wavatar/retro/robohash/blank</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> valine: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.4.2 (2020/12/27)</summary><div class="toggle-content"><h2 id="3-4-2-2020-12-27"><a href="#3-4-2-2020-12-27" class="headerlink" title="3.4.2 (2020/12/27)"></a>3.4.2 (2020/12/27)</h2><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復開啟 gitalk 評論數後與 toc 衝突的 bug #462</li><li>修復 jquery 在一些介面仍然載入問題</li><li>修復 medium zoom 報錯的 bug</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.4.1 (2020/12/15)</summary><div class="toggle-content"><h2 id="3-4-1-2020-12-15"><a href="#3-4-1-2020-12-15" class="headerlink" title="3.4.1 (2020/12/15)"></a>3.4.1 (2020/12/15)</h2><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復tabs 標簽外掛設為-1時，按鈕點擊沒反應的bugs</li></ol></div></details> <details class="toggle"><summary class="toggle-button" style="">3.4.0 (2020/12/13)</summary><div class="toggle-content"><h2 id="3-4-0-2020-12-13"><a href="#3-4-0-2020-12-13" class="headerlink" title="3.4.0 (2020/12/13)"></a>3.4.0 (2020/12/13)</h2><h3 id="Breaking-Change"><a href="#Breaking-Change" class="headerlink" title="Breaking Change"></a>Breaking Change</h3><ol><li>去除 jQuery</li></ol><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li><p>可配置是否添加css前綴</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># Add the vendor prefixes to ensure compatibility</span><span class="token prefix inserted">+</span><span class="token line">css_prefix: true</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>點擊文字特效增加隨機配置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">ClickShowText:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: false</span><span class="token prefix unchanged"> </span><span class="token line"> text:</span><span class="token prefix unchanged"> </span><span class="token line">   - I</span><span class="token prefix unchanged"> </span><span class="token line">   - LOVEeeeeeeeeeeeee</span><span class="token prefix unchanged"> </span><span class="token line">   - YOU</span><span class="token prefix unchanged"> </span><span class="token line"> fontSize: 15px</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  random: true</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> mobile: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>右下角增加字體調整按鈕</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># Change font size</span><span class="token prefix inserted">+</span><span class="token line">change_font_size: true</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>增加twikoo 最新評論</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">newest_comments:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: true</span></span>....<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  twikoo: true</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>增加twikoo評論數顯示</p></li><li><p>增加toc簡潔模式</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">toc:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: true</span><span class="token prefix unchanged"> </span><span class="token line"> number: true</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  style_simple: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復子目錄下，配置justifiedGallery CDN（相對鏈接）後，連接會無法訪問的bugs</li><li>修復沒有滾動條時，右下角按鈕顯示問題  #439</li><li>修復 pangu 配置post 後，仍在全站生效的bugs</li><li>修復resize 時，toc 的位置問題</li></ol><h3 id="Improvement"><a href="#Improvement" class="headerlink" title="Improvement"></a>Improvement</h3><ol><li>最新評論頭像增加lazyload</li><li>最新評論優化，當沒有評論時顯示’沒有評論‘</li><li>toc點擊時改用document.getElementById獲取，預防有些字符導致無法跳轉 #426</li><li>若瀏覽器支持。scroll將採用原生瀏覽器支持的滾動方法</li><li>搜索優化</li><li>html格式優化</li><li>當屏幕沒有滾動條時，rightside會直接顯示</li><li>手機端toc邊距微調</li><li>fontawesome和google字體增加異步加載</li><li>夜間模式下，廣告降低亮度</li><li>當設置aside mobile為false時，toc仍然能顯示</li></ol><h3 id="Remove"><a href="#Remove" class="headerlink" title="Remove"></a>Remove</h3><ol><li>刪除ICP配置， 如需要，請使用custom_text配置</li><li>刪除不必要的語言文件</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.3.0 (2020/10/28)</summary><div class="toggle-content"><h2 id="3-3-0-2020-10-28"><a href="#3-3-0-2020-10-28" class="headerlink" title="3.3.0 (2020/10/28)"></a>3.3.0 (2020/10/28)</h2><h3 id="Breaking-Change"><a href="#Breaking-Change" class="headerlink" title="Breaking Change"></a>Breaking Change</h3><ol><li>只支持 hexo 5.0.0 及以上版本</li><li>不再支持 butterfly.yml 寫法</li></ol><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li><p>Valine 增加 option 設置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">valine:<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  option:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>toc改為aside顯示,去掉sidebar</p><ol><li><p>手機toc ui 修改</p></li><li><p>去掉 toc auto_open 配置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">toc:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: true</span><span class="token prefix unchanged"> </span><span class="token line"> number: true</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  auto_open: true # auto open the sidebar</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>優化手機toc 的特效和按鈕出現的時機</p></li><li><p>aside狀態存<em>localStorage</em></p></li></ol></li><li><p>文章標題改為居中</p></li><li><p>aside 可配置隱藏/增加按鈕可展開或收縮aside</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">aside:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: true</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  hide: false</span><span class="token prefix inserted">+</span><span class="token line">  button: true</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> mobile: true # display on mobile</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>增加Twikoo評論</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">twikoo:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h3 id="Improvements"><a href="#Improvements" class="headerlink" title="Improvements"></a>Improvements</h3><ol><li>完善note標籤在readmode上的顯示</li><li>精簡css 和 js</li><li>pjax 優化</li><li>文章頁標題改為h1(seo)</li><li>canonical 改為hexo提供的函數生成</li><li>ICP SEO優化 <a href="https://github.com/jerryc127/hexo-theme-butterfly/pull/393">#393</a></li><li>調大sidebar的寬度</li><li>html結構調整，mobile-sidebar改為sidebar/search調整</li><li>滾動到評論按鈕只要用評論的頁面就出現</li></ol><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復網站壓縮後，mermaid 會無法生成顯示的Bugs</li><li>修復當文章頁top_img設為false時，閲讀模式下文章內容不顯示的bugs</li><li>修復valine背景圖片再次出現時，由左到右移動的bugs</li><li>修復disqusjs沒有設置api時，沒有反代的bugs</li></ol><h3 id="Remove"><a href="#Remove" class="headerlink" title="Remove"></a>Remove</h3><ol><li>刪除搜索不必要的配置</li><li>移除豆瓣配置,如需配置，請使用 hexo-butterfly-douban</li><li>刪除多餘的css和pug</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.2.0 (2020/09/28)</summary><div class="toggle-content"><h2 id="3-2-0-2020-09-28"><a href="#3-2-0-2020-09-28" class="headerlink" title="3.2.0 (2020/09/28)"></a>3.2.0 (2020/09/28)</h2><h3 id="Breaking-Change"><a href="#Breaking-Change" class="headerlink" title="Breaking Change"></a>Breaking Change</h3><ol><li><p>更改canvas_ribbon_piao 為 canvas_fluttering_ribbon</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">canvas_ribbon_piao:</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">canvas_fluttering_ribbon:</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: false</span><span class="token prefix unchanged"> </span><span class="token line"> mobile: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>刪除特效js,改為cdn引入</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">CDN:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> # background effect</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  canvas_ribbon: /js/third-party/canvas-ribbon.js</span><span class="token prefix deleted">-</span><span class="token line">  canvas_ribbon_piao: /js/third-party/piao.js</span><span class="token prefix deleted">-</span><span class="token line">  canvas_nest: /js/third-party/canvas-nest.js</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  canvas_ribbon: https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/dist/canvas-ribbon.min.js</span><span class="token prefix inserted">+</span><span class="token line">  canvas_fluttering_ribbon: https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/dist/canvas-fluttering-ribbon.min.js</span><span class="token prefix inserted">+</span><span class="token line">  canvas_nest: https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/dist/canvas-nest.min.js</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> # effect</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  activate_power_mode: /js/third-party/activate-power-mode.js</span><span class="token prefix deleted">-</span><span class="token line">  fireworks: /js/third-party/fireworks.js</span><span class="token prefix deleted">-</span><span class="token line">  click_heart: /js/third-party/click_heart.js</span><span class="token prefix deleted">-</span><span class="token line">  ClickShowText: /js/third-party/ClickShowText.js</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  activate_power_mode: https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/dist/activate-power-mode.min.js</span><span class="token prefix inserted">+</span><span class="token line">  fireworks: https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/dist/fireworks.min.js</span><span class="token prefix inserted">+</span><span class="token line">  click_heart: https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/dist/click-heart.min.js</span><span class="token prefix inserted">+</span><span class="token line">  ClickShowText: https://cdn.jsdelivr.net/npm/butterfly-extsrc@1/dist/click-show-text.min.js</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li><p>可設置首頁文章不顯示內容/description</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"># Display the article introduction on homepage# 1: description# 2: both (if the description exists, it will show description, or show the auto_excerpt)# 3: auto_excerpt (default)<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># false: do not show the article introduction</span></span>index_post_content:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> method: 3</span><span class="token prefix unchanged"> </span><span class="token line"> length: 500 # if you set method to 2 or 3, the length need to config</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>主頁文章時間和文章頁文章時間可以配置顯示日期還是相對時間</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">post_meta:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> page: # Home Page</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    date_format: relative # date/relative 顯示日期還是相對日期</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> post:</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    date_format: relative # date/relative 顯示日期還是相對日期</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>top_img 可配置 （留空（默認色）/顏色（HEX值/RGB值/顔色單詞/漸變色)/圖片鏈接/ false（不顯示top_img））</p></li><li><p>footer可配置背景 [留空/false(默認色)/顏色（HEX值/RGB值/顔色單詞/漸變色)/圖片鏈接/true(跟top_img一樣)]</p></li><li><p>網站背景可配置 （顏色（HEX值/RGB值/顔色單詞/漸變色)/漸變色/圖片鏈接）</p></li><li><p>增加 tag_per_img 配置（可為各個tag 單獨配置top_img）</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">tag_per_img:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>增加 category_per_img 配置（可為各個category單獨配置top_img）</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">category_per_img:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>note 標籤優化(可自定義icon圖標/可覆蓋配置中的style)</p></li><li><p>夜間模式下，背景顔色/top-img/footer-bg 設置為顔色時，不再強制顯示黑色，而是改為遮罩降低亮度</p></li><li><p>增加部分特效 Mobile設置（activate_power_mode/fireworks/click_heart/ClickShowText)</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">activate_power_mode:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> ...</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  mobile: false</span></span>fireworks:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  ...</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  mobile: true</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">click_heart: false</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">click_heart:</span><span class="token prefix inserted">+</span><span class="token line">  enable: false</span><span class="token prefix inserted">+</span><span class="token line">  mobile: false</span></span>ClickShowText:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: false</span><span class="token prefix unchanged"> </span><span class="token line"> ...</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  mobile: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>添加 artitalk 説説插件</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># Artitalk</span><span class="token prefix inserted">+</span><span class="token line"># see https://artitalk.js.org/</span><span class="token prefix inserted">+</span><span class="token line">artitalk:</span><span class="token prefix inserted">+</span><span class="token line">  appId:</span><span class="token prefix inserted">+</span><span class="token line">  appKey:</span><span class="token prefix inserted">+</span><span class="token line">  option:</span></span>CDN:<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  artitalk: https://cdn.jsdelivr.net/npm/artitalk</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>網頁進入動畫效果可關閉</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># Enter transitions (開啟網頁進入效果)</span><span class="token prefix inserted">+</span><span class="token line">enter_transitions: true</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h3 id="Improvements"><a href="#Improvements" class="headerlink" title="Improvements"></a>Improvements</h3><ol><li>preloader 在 pjax 下 每個頁面都會加載</li><li>修改判斷，避免用戶設置2個lightbox 而導致報錯（只能設置一個）</li><li>精確時間顯示 （剛剛/幾分鐘前/幾小時前/幾天前/幾個月前）</li><li>刪除不必要的語言文件和css</li><li>Open_Graph 改為 hexo 內置 生成</li><li>當隱藏部分沒配置時，左下角設置按鈕會消失 #353</li><li>aside 分類 收縮/展開 增加slide效果</li><li>darkmode 字體顔色加深</li><li>優化nav的進入，應該修復一些用戶在本地測試中無法顯示nav的bugs</li><li>最新評論 leancloud呼叫由js sdk 改為 rest api 呼叫。應用可以不與valine同一個</li><li>最新評論增加錯誤輸出</li><li>tags 設定彩色顯示後，字型大小將根據tag的文章數量而變化 close #365</li><li>調整tags頁和categories頁在寬度小於768時的字體大小</li><li>主題文件分類調正</li><li>當點擊評論框時，valine背景圖片隱藏</li></ol><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復當hexo的_config沒有設置description時，會導致pjax在頁面與文章間切換會無效 #381</li><li>修復鼠標點擊文字特效，文字過長導致頁面有滾動條的bugs</li><li>修復本地搜索文章鏈接無法跳轉bugs</li></ol><h3 id="Remove"><a href="#Remove" class="headerlink" title="Remove"></a>Remove</h3><ol><li><p>移除anime js， 集成在fireworks的js裏</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">CDN:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  anime: https://cdn.jsdelivr.net/npm/animejs@latest/anime.min.js</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>刪除不必要的語言檔案</p></li></ol><h3 id="chore"><a href="#chore" class="headerlink" title="chore"></a>chore</h3><ol><li>update hexo-renderer-stylus to 2.0.1</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.1.1 (2020/09/06)</summary><div class="toggle-content"><h2 id="3-1-1-2020-09-06"><a href="#3-1-1-2020-09-06" class="headerlink" title="3.1.1 (2020/09/06)"></a>3.1.1 (2020/09/06)</h2><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復關閉last push date 後， 報 ‘hour’ 找不到的bugs</li><li>修復開啟 prismjs 後， 在低版本的 safari 會出現 js 報錯的 Bugs</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.1.0 (2020/08/31)</summary><div class="toggle-content"><h2 id="3-1-0-2020-08-31"><a href="#3-1-0-2020-08-31" class="headerlink" title="3.1.0 (2020/08/31)"></a>3.1.0 (2020/08/31)</h2><h3 id="Breaking-Change"><a href="#Breaking-Change" class="headerlink" title="Breaking Change"></a>Breaking Change</h3><ol><li>只支持 hexo 4.2.0 以上版本</li><li>butterfly.yml 採用deepMerge, 與_config文件進行合併而不是替換</li></ol><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li><p>適配 hexo 5.0.0 的 prismjs, 代碼主題和各項功能</p></li><li><p>適配hexo 5.1.0 prismjs caption</p></li><li><p>可隱藏 Mobile sidebar 子菜單</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># Hide the child menu items in mobile sidebar</span><span class="token prefix inserted">+</span><span class="token line">hide_sidebar_menu_child: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>當寬度小於1024時，點擊toc滾動，增加滾動效果</p></li><li><p>可配置font-size/更改配置中 code-font 為 code-font-family</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">font:<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  global-font-size:</span><span class="token prefix inserted">+</span><span class="token line">  code-font-size:</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">  font-family:</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">   code-font:</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">   code-font-family:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>部分css由’px’改為’em’，適應font-size值改變而改變</p></li><li><p>pjax增加exclude配置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">pjax: false</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">pjax:</span><span class="token prefix inserted">+</span><span class="token line">  enable: false</span><span class="token prefix inserted">+</span><span class="token line">  exclude:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>新增 cnzz_analytics</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"># Analysis# --------------------------------------# Baidu Analytics# https://tongji.baidu.com/web/welcome/loginbaidu_analytics:# Google Analytics# https://analytics.google.com/analytics/web/google_analytics:# Tencent Analytics# https://mta.qq.com/tencent_analytics: #500727214<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># CNZZ Analytics</span><span class="token prefix inserted">+</span><span class="token line"># https://www.umeng.com/</span><span class="token prefix inserted">+</span><span class="token line">cnzz_analytics:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>騰訊分析改為騰訊移動分析，並適配pjax</p></li><li><p>aside增加position sticky</p></li><li><p>更改addtoany item的寫法</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">addtoany:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: false</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  item:</span><span class="token prefix deleted">-</span><span class="token line">    - facebook</span><span class="token prefix deleted">-</span><span class="token line">    - twitter</span><span class="token prefix deleted">-</span><span class="token line">    - wechat</span><span class="token prefix deleted">-</span><span class="token line">    - sina_weibo</span><span class="token prefix deleted">-</span><span class="token line">    - facebook_messenger</span><span class="token prefix deleted">-</span><span class="token line">    - email</span><span class="token prefix deleted">-</span><span class="token line">    - copy_link</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">item: facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>增加最後更新時間顯示/增加post count 配置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">aside:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  card_webinfo: true</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  card_webinfo:</span><span class="token prefix inserted">+</span><span class="token line">    enable: true</span><span class="token prefix inserted">+</span><span class="token line">    post_count: true</span><span class="token prefix inserted">+</span><span class="token line">    last_push_date: true</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>增加 aside 最新評論部件</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">newest_comments:</span><span class="token prefix inserted">+</span><span class="token line">  enable: false</span><span class="token prefix inserted">+</span><span class="token line">  limit: 6</span><span class="token prefix inserted">+</span><span class="token line">  avatar: true</span><span class="token prefix inserted">+</span><span class="token line">  leancloud:</span><span class="token prefix inserted">+</span><span class="token line">    enable: false</span><span class="token prefix inserted">+</span><span class="token line">+    appId: # leancloud application app id</span><span class="token prefix inserted">+</span><span class="token line">    appKey: # leancloud application app key</span><span class="token prefix inserted">+</span><span class="token line">    serverURL: # This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span><span class="token prefix inserted">+</span><span class="token line">    default_avatar: mp # mp/identicon/monsterid/wavatar/retro/robohash/blank</span><span class="token prefix inserted">+</span><span class="token line">  github_issues:</span><span class="token prefix inserted">+</span><span class="token line">    enable: false</span><span class="token prefix inserted">+</span><span class="token line">    repo:</span><span class="token prefix inserted">+</span><span class="token line">  disqus:</span><span class="token prefix inserted">+</span><span class="token line">    enable: false</span><span class="token prefix inserted">+</span><span class="token line">    forum:</span><span class="token prefix inserted">+</span><span class="token line">    api_key:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="Improvements"><a href="#Improvements" class="headerlink" title="Improvements"></a>Improvements</h3><ol><li>archives和card-post 改為flex佈局</li><li>點擊滾動，如果滾動是向上時，將會偏移60px， 避免導航欄遮擋 close #317</li><li>改cookies為<em>localStorage</em>存儲</li><li>設置中的theme_color可單獨配置幾個，而不需要全部開啟 close #314</li><li>調整webinfo 寬度小時的顯示</li><li>aside 內容邊距調整</li><li>Pjax下，刷新頁面時，會滾動到上次瀏覽的位置</li><li>修復mathjax溢出屏幕的Bugs # 321</li><li>部分css調整和html優化</li><li>刪除pwa中的theme-color配置，默認生成meta theme-color #340</li><li>補全card-categories和card-archives的 ‘查看更多‘鏈接 #337</li><li>代碼名字全大寫</li></ol><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復canvas_nest 配置沒有生效的Bugs</li><li>修復rightsize-bottom配置無效的bug</li><li>修復夜間模式下代碼塊有背景的bugs（沒開啟渲染的情況下）</li><li>修復 prismjs 在 tags-toggle 外掛標簽裏，代碼塊顯示一行的bugs</li><li>修復當關閉代碼渲染後，標簽外掛裏的代碼塊會被壓縮到一行的bugs</li><li>修復在modern樣式下，note 標簽外掛沒有使用tags名時，沒有背景色和夜間模式文字顯示不清楚的bugs</li><li>修復主頁文章cover在深色模式下，邊角有小白邊的bugs #278</li><li>修復note標簽外掛下，代碼塊顯示背景色的bugs close #339</li><li>修復toc 滾動百分比不準的Bugs</li><li>修復comments沒設置時，報Unexpected token ‘)’的bugs #344</li><li>修復網站子目錄下，相關文章cover無法顯示的bugs #334</li></ol><h3 id="Remove"><a href="#Remove" class="headerlink" title="Remove"></a>Remove</h3><ol><li>去除字體放大、縮小按鈕</li><li>移除 代碼default主題</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.0.1 (2020/08/11)</summary><div class="toggle-content"><h2 id="3-0-1-2020-08-11"><a href="#3-0-1-2020-08-11" class="headerlink" title="3.0.1 (2020/08/11)"></a>3.0.1 (2020/08/11)</h2><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復導航側邊欄沒有進入特效的Bugs</li><li>修復Hexo 5.0.0 以下版本， toc遇到中文不會滾動的bugs</li><li>修復pjax下，同時開啟Open_Graph_meta和Livere，Livere評論後臺顯示的來源頁面與實際不同 的bugs</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.0.0 (2020/08/05)</summary><div class="toggle-content"><h2 id="3-0-0-2020-08-05"><a href="#3-0-0-2020-08-05" class="headerlink" title="3.0.0 (2020/08/05)"></a>3.0.0 (2020/08/05)</h2><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復文章頁沒有lazyload的bugs</li><li>修復文章頁沒有lazyload的bugs</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.0.0-RC2 (2020/08/01)</summary><div class="toggle-content"><h2 id="3-0-0-RC2-2020-08-01"><a href="#3-0-0-RC2-2020-08-01" class="headerlink" title="3.0.0-RC2 (2020/08/01)"></a>3.0.0-RC2 (2020/08/01)</h2><h3 id="Breaking-Change"><a href="#Breaking-Change" class="headerlink" title="Breaking Change"></a>Breaking Change</h3><ol><li><p>支持雙評論系統配置/評論配置整理/評論增加lazyload</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">comments:</span><span class="token prefix inserted">+</span><span class="token line">  # Up to two comments system, the first will be shown as default</span><span class="token prefix inserted">+</span><span class="token line">  # Choose: Disqus/Disqusjs/Livere/Gitalk/Valine/Utterances/Facebook Comments</span><span class="token prefix inserted">+</span><span class="token line">  use:</span><span class="token prefix inserted">+</span><span class="token line">  # - Valine</span><span class="token prefix inserted">+</span><span class="token line">  # - Disqus</span><span class="token prefix inserted">+</span><span class="token line">  text: true # Display the comment name next to the button</span><span class="token prefix inserted">+</span><span class="token line">  # lazyload: The comment system will be load when comment element enters the browser's viewport.</span><span class="token prefix inserted">+</span><span class="token line">  # If you set it to false, the comment count will be invalid</span><span class="token prefix inserted">+</span><span class="token line">  lazyload: false</span><span class="token prefix inserted">+</span><span class="token line">  count: false # Display comment count in top_img</span></span>disqus:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  enable: false</span><span class="token prefix deleted">-</span><span class="token line">  count: false # dispaly comment count in top_img</span></span>disqusjs:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  enable: false</span><span class="token prefix deleted">-</span><span class="token line">  count: false # dispaly comment count in top_img</span></span>livere:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  enable: false</span></span>gitalk:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  enable: false</span><span class="token prefix deleted">-</span><span class="token line">  count: false # dispaly comment count in top_img</span></span>valine:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  enable: false # if you want use valine,please set this value is true</span><span class="token prefix deleted">-</span><span class="token line">  count: false # dispaly comment count in top_img</span></span>utterances:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  enable: false</span></span>facebook_comments:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  enable: false</span><span class="token prefix deleted">-</span><span class="token line">  count: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>footer配置整理，修改部分用語  #279</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">since: 2020</span><span class="token prefix deleted">-</span><span class="token line">footer_custom_text:</span><span class="token prefix deleted">-</span><span class="token line">footer_copyright: true</span><span class="token prefix deleted">-</span><span class="token line">ICP:</span><span class="token prefix deleted">-</span><span class="token line">  enable: false</span><span class="token prefix deleted">-</span><span class="token line">  url:</span><span class="token prefix deleted">-</span><span class="token line">  text:</span><span class="token prefix deleted">-</span><span class="token line">  icon: /img/icp.png</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">footer:</span><span class="token prefix inserted">+</span><span class="token line">  owner:</span><span class="token prefix inserted">+</span><span class="token line">    enable: true</span><span class="token prefix inserted">+</span><span class="token line">    since: 2020</span><span class="token prefix inserted">+</span><span class="token line">  custom_text: </span><span class="token prefix inserted">+</span><span class="token line">  copyright: true # Copyright of theme and framework</span><span class="token prefix inserted">+</span><span class="token line">  ICP: # Chinese ICP License</span><span class="token prefix inserted">+</span><span class="token line">    enable: false</span><span class="token prefix inserted">+</span><span class="token line">    url:</span><span class="token prefix inserted">+</span><span class="token line">    text:</span><span class="token prefix inserted">+</span><span class="token line">    icon: /img/icp.png</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>移除‘添加書籤’功能，可執行配置按鈕</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">aside:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> card_author:</span><span class="token prefix unchanged"> </span><span class="token line">   enable: true</span><span class="token prefix unchanged"> </span><span class="token line">   description:</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    button:</span><span class="token prefix inserted">+</span><span class="token line">      icon: fab fa-github</span><span class="token prefix inserted">+</span><span class="token line">      text: Follow Me</span><span class="token prefix inserted">+</span><span class="token line">      link: https://github.com/xxxxxx</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>copy的copyright增加字數限制配置，可配置多少字以上才添加版權信息</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">copy:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: true</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  copyright: false</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  copyright:</span><span class="token prefix inserted">+</span><span class="token line">    enable: false</span><span class="token prefix inserted">+</span><span class="token line">    limit_count: 50</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>aside recent post可設置按發表時間或者更新時間排序</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">aside:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> card_recent_post:</span><span class="token prefix unchanged"> </span><span class="token line">   enable: true</span><span class="token prefix unchanged"> </span><span class="token line">   limit: 5 # if set 0 will show all</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    sort: date # date or updated</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>更換typed.js/meting CDN</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">typed: https://cdn.jsdelivr.net/npm/typed.js</span><span class="token prefix deleted">-</span><span class="token line">meting_js: https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">typed: https://cdn.jsdelivr.net/npm/typed.js/lib/typed.min.js</span><span class="token prefix inserted">+</span><span class="token line">meting_js: https://cdn.jsdelivr.net/gh/metowolf/MetingJS@1.2/dist/Meting.min.js</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li><p>增加文章過期提醒</p><pre class="line-numbers language-DIFF" data-language="DIFF"><code class="language-DIFF">+# Displays outdated notice for a post (文章過期提醒)+noticeOutdate:+  enable: false+  style: flat # style: simple/flat+  limit_day: 500 # When will it be shown+  position: top # position: top/bottom+  message_prev: It has been+  message_next: days since the last update, the content of the article may be outdated.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>增加mac light 代碼框配色</p></li><li><p>文章copyright 可單獨配置</p></li><li><p>card-category 中category名稱和數字限制一行顯示</p></li><li><p>簡繁轉換優化，placeholder也會被轉換</p></li><li><p>引入css變數，減少css體積</p></li><li><p>新增 Pjax #234</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># Pjax [Beta]</span><span class="token prefix inserted">+</span><span class="token line"># It may contain bugs and unstable, give feedback when you find the bugs.</span><span class="token prefix inserted">+</span><span class="token line"># https://github.com/MoOx/pjax</span><span class="token prefix inserted">+</span><span class="token line">pjax: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>添加第三方chat服務 crisp</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># crisp</span><span class="token prefix inserted">+</span><span class="token line"># https://crisp.chat/en/</span><span class="token prefix inserted">+</span><span class="token line">crisp:</span><span class="token prefix inserted">+</span><span class="token line">  enable: false</span><span class="token prefix inserted">+</span><span class="token line">  website_id:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>谷歌廣告增加自動廣告配置，減少不必要的js加載</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">google_adsense:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: false</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  auto_ads: true</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> js: https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js</span><span class="token prefix unchanged"> </span><span class="token line"> client:</span><span class="token prefix unchanged"> </span><span class="token line"> enable_page_level_ads: true</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>當post_asset_folder為true時，post的top_img和cover可直接引用同名文件夾下的圖片，只需要寫圖片名字和後綴就行 #270</p></li><li><p>增加Yandex Webmaster tools verification配置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># Yandex Webmaster tools verification setting</span><span class="token prefix inserted">+</span><span class="token line"># see https://webmaster.yandex.com/</span><span class="token prefix inserted">+</span><span class="token line">yandex_site_verification:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>post-meta可以配置是否顯示文字</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">post_meta:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> page: # Home Page</span><span class="token prefix unchanged"> </span><span class="token line">   date_type: created # created or updated or both 主頁文章日期是創建日或者更新日或都顯示</span><span class="token prefix unchanged"> </span><span class="token line">   categories: true # true or false 主頁是否顯示分類</span><span class="token prefix unchanged"> </span><span class="token line">   tags: false # true or false 主頁是否顯示標籤</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    label: true # true or false 顯示描述性文字</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> post:</span><span class="token prefix unchanged"> </span><span class="token line">   date_type: both # created or updated or both 文章頁日期是創建日或者更新日或都顯示</span><span class="token prefix unchanged"> </span><span class="token line">   categories: true # true or false 文章頁是否顯示分類</span><span class="token prefix unchanged"> </span><span class="token line">   tags: true # true or false 文章頁是否顯示標籤</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    label: true # true or false 顯示描述性文字</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>手機端post-meta調整顯示/支持顯示分類</p></li><li><p>代碼框滾動條顔色隨代碼主題變化</p></li><li><p>頭像/打賞圖片 增加lazyload</p></li><li><p>提升highlight-tool的加載速度</p></li><li><p>disqus/disqusjs/facebook comments 可隨夜間模式按鈕切換而轉換主題</p></li><li><p>mathjax升級到3 #216</p></li><li><p>pangu.js 只會渲染 body-wrap 區域</p></li><li><p>放大字體和縮小字體 限制在 10px~20px</p></li><li><p>更新谷歌分析代碼（gtag）</p></li><li><p>移除blueimp_md5 js</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">blueimp_md5: https://cdn.jsdelivr.net/npm/blueimp-md5/js/md5.min.js</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>夜間模式和閲讀模式微調</p></li></ol><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復右下角按鈕被button標籤外掛遮擋的bugs</li><li>修復開啟photofigcaption後，圖庫會出現界面錯亂的Bugs</li><li>修復tabs外掛標簽與aplayer插件衝突而異常的bugs</li><li>aplayer的間距調整</li><li>修復文章front-matter的highlight_shrink和toc為空時，會出現js報錯的bugs</li><li>修復BUTTON標籤嵌套使用在其他標籤時，生成多了br標籤而導致樣式不同的bugs</li><li>修復部分設備遇到mobile-sidebar無法滾動的bugs</li><li>修復文章頁部分元素內文字溢出的Bugs</li><li>調整當card-category有收縮按鈕時的顯示佈局</li><li>修復配置PWA參數時，如果網站是子目錄時，會出現加載不到文件的bugs</li><li>修復hexo douban插件 點擊上/下一頁出現圖片變為null的bugs</li><li>適配hexo 5.0.0 修復toc點擊不會跳轉的bugs</li><li>適配hexo 5.0.0 修復toc不會隨著文章而滾動的bugs</li><li>修復Valine 的requiredFields設置為空 無效的bugs</li><li>調整手機界面下ol ul li的邊距 #267</li><li>修復facebook comments 在手機下寬度不是100%的bugs</li><li>修復share.js 分享的文章圖片都顯示同一張的bugs</li><li>去除note標籤外掛設為modern時，a標籤的下劃線</li><li>修正一些不正確的html結構</li><li>修復fancybox的alt會顯示undefined的bugs</li><li>修復footer藍色背景下，icp 文字hover 文字變藍看不清的Bug</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">3.0.0-RC1 (2020/06/16)</summary><div class="toggle-content"><h2 id="3-0-0-RC1-2020-06-16"><a href="#3-0-0-RC1-2020-06-16" class="headerlink" title="3.0.0-RC1 (2020/06/16)"></a>3.0.0-RC1 (2020/06/16)</h2><h3 id="Breaking-Change"><a href="#Breaking-Change" class="headerlink" title="Breaking Change"></a>Breaking Change</h3><ol><li><p>從3.0開始，不再對IE瀏覽器進行適配</p></li><li><p>強制使用fontawesome v5（會對一些自定義icon產生影響，請替換為V5圖標）</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"># fontawesome圖標</span><span class="token prefix deleted">-</span><span class="token line"># 默認使用的是 fontawesome v4版本的圖標</span><span class="token prefix deleted">-</span><span class="token line">fontawesome_v5:</span><span class="token prefix deleted">-</span><span class="token line">  enable: false</span></span>CDN:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  # fontawesome</span><span class="token prefix deleted">-</span><span class="token line">  fontawesome_v4: https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css</span><span class="token prefix deleted">-</span><span class="token line">  fontawesome_v5: https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free/css/all.min.css</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">fontawesome: https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free/css/all.min.css</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>_config.yml 內容修改</p><ol><li><p>精簡baidu_push/instantpage/click_heart/readmode/footer_copyright/medium_zoom/fancybox配置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">baidu_push:</span><span class="token prefix deleted">-</span><span class="token line">  enable: false</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">instantpage:</span><span class="token prefix deleted">-</span><span class="token line">  enable: true</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">click_heart:</span><span class="token prefix deleted">-</span><span class="token line">  enable: false</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">readmode:</span><span class="token prefix deleted">-</span><span class="token line">  enable: true</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">footer_copyright:</span><span class="token prefix deleted">-</span><span class="token line">  enable: true</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">medium_zoom:</span><span class="token prefix deleted">-</span><span class="token line">  enable: false</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">fancybox:</span><span class="token prefix deleted">-</span><span class="token line">  enable: true</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">baidu_push: false</span><span class="token prefix inserted">+</span><span class="token line">instantpage: true</span><span class="token prefix inserted">+</span><span class="token line">click_heart: false</span><span class="token prefix inserted">+</span><span class="token line">readmode: true</span><span class="token prefix inserted">+</span><span class="token line">footer_copyright: true</span><span class="token prefix inserted">+</span><span class="token line">medium_zoom: false</span><span class="token prefix inserted">+</span><span class="token line">fancybox: true</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>修改runtimeshow 的start_date 為publish_date</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">runtimeshow:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: true</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  start_date: 6/7/2018 00:00:00</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  publish_date: 6/7/2018 00:00:00</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>laibili 改名為 LiveRe</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">laibili:</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">livere:</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: false</span><span class="token prefix unchanged"> </span><span class="token line"> uid:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>改hr為hr_icon 可設置取消icon</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"># 水平分隔綫<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">hr:</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">hr_icon:</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: true</span><span class="token prefix unchanged"> </span><span class="token line"> icon: #fontawesome上圖標的Unicode</span><span class="token prefix unchanged"> </span><span class="token line"> icon-top:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>更改loading_bg為error_img，post-loading移到lazyload去</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">lodding_bg:</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">error_img:</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> flink: /img/friend_404.gif #404後圖片</span><span class="token prefix unchanged"> </span><span class="token line"> post_page: /img/404.jpg #404後圖片</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  post: /img/loading.gif #加載動畫</span></span>lazyload:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: true</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  post: /img/loading.gif #加載動畫</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>pangu 的field配置只能配置site/post</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">pangu:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: true</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  field: page # page/post</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  field: site # site/post</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>整合auto_open_sidebar到toc去</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">toc:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: true</span><span class="token prefix unchanged"> </span><span class="token line"> number: true</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  auto_open: true # auto open the sidebar</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"># auto open the sidebar in 'post'</span><span class="token prefix deleted">-</span><span class="token line">auto_open_sidebar:</span><span class="token prefix deleted">-</span><span class="token line">  enable: true</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>font去除enable配置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"># 全局字體font:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  enable: false</span><span class="token prefix deleted">-</span><span class="token line">  font-family: Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB, MicrMicrosoft YaHei", Helvetica Neue, Helvetica, Arial, sans-serif</span><span class="token prefix deleted">-</span><span class="token line">  code-font: consolas, Menlo, "PingFang SC", "Microsoft YaHei", monospace, Helvetica Neue For Number</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  font-family:</span><span class="token prefix inserted">+</span><span class="token line">  code-font:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>刪除部分配置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">valine:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  notify: false # valine mail notify (true/false) Deprecated in v1.4.0+</span><span class="token prefix deleted">-</span><span class="token line">  verify: false # valine verify code (true/false) Deprecated in v1.4.0+</span></span>translate:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  #博客網址</span><span class="token prefix deleted">-</span><span class="token line">  cookieDomain: 'https://xxx/'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>刪除twitter_meta配置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"># twitter分享自動帶上樣式</span><span class="token prefix deleted">-</span><span class="token line"># -https://i.loli.net/2019/09/08/qm3RfvUCKbct1Wz.png</span><span class="token prefix deleted">-</span><span class="token line">twitter_meta: true</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol></li></ol><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li><p>table寬度佔滿顯示</p></li><li><p>增加系統Darkmode切換監控，當系統切換Darkmode時，主題會立刻切換</p></li><li><p>card_description 支持html書寫</p></li><li><p>Dark Mode和Light Mode 切換按鈕icon更換</p></li><li><p>適配hexo自帶標簽 Pullquote</p></li><li><p>百度推送鏈接增加dns-prefetch</p></li><li><p>canonical 設為默認生成 不再提供配置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"># 避免重複網址分散seo</span><span class="token prefix deleted">-</span><span class="token line">canonical: true</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>instantpage js 加載增加defer</p></li><li><p>fireworks 增加z-index配置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">fireworks:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: false</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  zIndex: 9999 # -1 or 9999</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>新的Tag Plugins - button</p></li><li><p>新的Tag Plugins - tabs</p></li><li><p>可配置justifiedGallery CDN</p><pre class="line-numbers language-DIFF" data-language="DIFF"><code class="language-DIFF">CDN:+  # justifiedGallery+  justifiedGallery_js: https://cdn.jsdelivr.net/npm/justifiedGallery/dist/js/jquery.justifiedGallery.min.js+  justifiedGallery_css: https://cdn.jsdelivr.net/npm/justifiedGallery/dist/css/justifiedGallery.min.css<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>新設計404頁面</p></li><li><p>aplayer js /css 可配置，在文章front-matter中設置aplayer. 防止aplayer在每個頁面都插入代碼</p><pre class="line-numbers language-DIFF" data-language="DIFF"><code class="language-DIFF">CDN:+  # aplayer+  aplayer_css: https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css+  aplayer_js: https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js+  meting_js: https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>增加在綫聊天 Chat Services (chatra/tidio/daovoice/gitter), 可配置主題chat按鈕替換原在綫聊天按鈕</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># Chat Button [recommend]</span><span class="token prefix inserted">+</span><span class="token line"># It will create a button in the bottom right corner of website, and hide the origin button</span><span class="token prefix inserted">+</span><span class="token line">chat_btn: false</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># The origin chat button is displayed when scrolling up, and the button is hidden when scrolling down</span><span class="token prefix inserted">+</span><span class="token line">chat_hide_show: false</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># chatra</span><span class="token prefix inserted">+</span><span class="token line"># https://chatra.io/</span><span class="token prefix inserted">+</span><span class="token line">chatra:</span><span class="token prefix inserted">+</span><span class="token line">  enable: false</span><span class="token prefix inserted">+</span><span class="token line">  id:</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># tidio</span><span class="token prefix inserted">+</span><span class="token line"># https://www.tidio.com/</span><span class="token prefix inserted">+</span><span class="token line">tidio:</span><span class="token prefix inserted">+</span><span class="token line">  enable: false</span><span class="token prefix inserted">+</span><span class="token line">  public_key:</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># daovoice</span><span class="token prefix inserted">+</span><span class="token line"># http://daovoice.io/</span><span class="token prefix inserted">+</span><span class="token line">daovoice:</span><span class="token prefix inserted">+</span><span class="token line">  enable: false</span><span class="token prefix inserted">+</span><span class="token line">  app_id:</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># gitter</span><span class="token prefix inserted">+</span><span class="token line"># https://gitter.im/</span><span class="token prefix inserted">+</span><span class="token line">gitter:</span><span class="token prefix inserted">+</span><span class="token line">  enable: false</span><span class="token prefix inserted">+</span><span class="token line">  room:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>可配置rightside按鈕與底部的距</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># 右下角按鈕距離底部的距離(默認單位為px)</span><span class="token prefix inserted">+</span><span class="token line">rightside-bottom:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>更換lazyload服務商</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">CDN:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">lazyload: https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">lazyload: https://cdn.jsdelivr.net/npm/vanilla-lazyload/dist/lazyload.iife.min.js</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>card-categories增加收縮/展開按鈕</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">aside:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> card_categories:</span><span class="token prefix unchanged"> </span><span class="token line">   enable: true</span><span class="token prefix unchanged"> </span><span class="token line">   limit: 8 # if set 0 will show all</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    expand: none # none/true/false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>更改auto_excerpt為index_post_content，並擁有三種方法可選</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"># 自動節選</span><span class="token prefix deleted">-</span><span class="token line">auto_excerpt:</span><span class="token prefix deleted">-</span><span class="token line">  enable: true</span><span class="token prefix deleted">-</span><span class="token line">  length: 150</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># Display the article introduction on homepage</span><span class="token prefix inserted">+</span><span class="token line"># 1: description</span><span class="token prefix inserted">+</span><span class="token line"># 2: both (if the description exists, it will show description. or show the auto_excerpt)</span><span class="token prefix inserted">+</span><span class="token line"># 3: auto_excerpt (default)</span><span class="token prefix inserted">+</span><span class="token line">index_post_content:</span><span class="token prefix inserted">+</span><span class="token line">  method: 3</span><span class="token prefix inserted">+</span><span class="token line">  length: 500 # if you set method to 2 or 3, the length need to config</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>可在post裏單獨設置 auto_open: false關掉sidebar自動打開 #232</p></li><li><p>友情鏈接界面代碼優化/增加分類描述/分類名字和描述可以不寫/友情鏈接yml寫法更改（舊的寫法依舊有效，沒影響）</p></li><li><p>文章/頁面font-matter 可設置highlight_shrink (true or false)</p></li><li><p>代碼框優化</p><ol><li>調整部分代碼顔色</li><li>增加一款代碼主題 mac </li><li>代碼框主題支持自定義</li></ol></li><li><p>閲讀模式下去掉代碼高亮</p></li><li><p>disqusjs更新js/css版本，增加nocomment配置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">disqusjs:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: false</span><span class="token prefix unchanged"> </span><span class="token line"> shortname:</span><span class="token prefix unchanged"> </span><span class="token line"> siteName:</span><span class="token prefix unchanged"> </span><span class="token line"> apikey:</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  api: https://disqus.skk.moe/disqus/ #一般情況下無需修改 API 地址</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  api:</span><span class="token prefix inserted">+</span><span class="token line">  nocomment: # display when a blog post or an article has no comment attached</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> admin:</span><span class="token prefix unchanged"> </span><span class="token line"> adminLabel:</span><span class="token prefix unchanged"> </span><span class="token line"> count: false # dispaly comment count in top_img</span></span>CDN:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  disqusjs: https://cdn.jsdelivr.net/npm/disqusjs@1.2/dist/disqus.js</span><span class="token prefix deleted">-</span><span class="token line">  disqusjs_css: https://cdn.jsdelivr.net/npm/disqusjs@1.2/dist/disqusjs.css</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  disqusjs: https://cdn.jsdelivr.net/npm/disqusjs@1/dist/disqus.js</span><span class="token prefix inserted">+</span><span class="token line">  disqusjs_css: https://cdn.jsdelivr.net/npm/disqusjs@1/dist/disqusjs.css</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>打賞增加鏈接配置 /打賞寫法更改（舊寫法依然有用）#240</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"># 打賞按鈕reward:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: true</span><span class="token prefix unchanged"> </span><span class="token line"> QR_code:</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    - itemlist:</span><span class="token prefix deleted">-</span><span class="token line">        img: /img/wechat.jpg</span><span class="token prefix deleted">-</span><span class="token line">        text: 微信</span><span class="token prefix deleted">-</span><span class="token line">    - itemlist:</span><span class="token prefix deleted">-</span><span class="token line">        img: /img/alipay.jpg</span><span class="token prefix deleted">-</span><span class="token line">        text: 支付寶</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    - img: /img/wechat.jpg</span><span class="token prefix inserted">+</span><span class="token line">      link:</span><span class="token prefix inserted">+</span><span class="token line">      text: 微信</span><span class="token prefix inserted">+</span><span class="token line">    - img: /img/alipay.jpg</span><span class="token prefix inserted">+</span><span class="token line">      link:</span><span class="token prefix inserted">+</span><span class="token line">      text: 支付寶</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>移除JS-COOKIES </p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">CDN:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  js_cookies: https://cdn.jsdelivr.net/npm/js-cookie/dist/js.cookie.min.js</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>可為文章配置是否顯示TOC,即使配置中已把toc設為false</p></li></ol><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修正側邊欄目錄收縮、展開圖標不對齊的bugs</li><li> 修改部分用語(zh-CN/zh-TW/en)</li><li>修復card-categories和card-archives 邊緣點擊沒有跳轉的bugs</li><li>修復網站是子目錄時，社交網站為相對地址時，地址生成錯誤的bugs</li><li>修復最後一篇文章的Pagination沒有佔據全寬度的Bug</li><li>修復推薦文章佈局在microsoft edge(舊版)顯示的Bug</li><li>修復閲讀模式下 黑色代碼框下字體顯示不清楚 #223</li><li>修復當blog_title_font不是設置google字體時，加載了preconnect  //fonts.googleapis.com 的bugs</li><li>修復設置copy為false時，會導致代碼複製也無法複製的bugs</li><li>閲讀模式調整</li><li>修復部分壓縮軟件壓縮html報錯的bugs</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">2.3.5(2020/05/01)</summary><div class="toggle-content"><h2 id="2-3-5-2020-05-01"><a href="#2-3-5-2020-05-01" class="headerlink" title="2.3.5 (2020/05/01)"></a>2.3.5 (2020/05/01)</h2><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li><p>beautify 可配置生效於全站還是post頁 #218</p> <pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">beautify:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: true</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  field: post # site/post</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> title-prefix-icon: '\f0c1'</span><span class="token prefix unchanged"> </span><span class="token line"> title-prefix-icon-color: '#F47466'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>更換lazyload js</p> <pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">lazyload:</span><span class="token prefix deleted">-</span><span class="token line">  enable: true</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">lazyload: true</span></span>CDN:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  lazyload: https://cdn.jsdelivr.net/npm/lazysizes@latest/lazysizes.min.js</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  lazyload: https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>增加文章anchor配置</p> <pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> # anchor</span><span class="token prefix inserted">+</span><span class="token line"> # when you scroll in post , the url will update according to header id.</span><span class="token prefix inserted">+</span><span class="token line"> anchor: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>修復當menu沒設置圖標時，會報Cannot read property ‘trim’ of undefined 的bug</li><li>修復meta description 自動生成文章前200文字時部分沒有轉義的bug</li><li>修復開啟lazyload後，使用 無法顯示照片的bug</li><li>修復tags頁標籤只顯示8個的bug</li><li>修復當博客root不是’/‘時,引用本地圖片會顯示不出的bug</li><li>修復替換url hash 導致頁面跳動的bug</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">2.3.0(2020/04/26)</summary><div class="toggle-content"><h2 id="2-3-0-2020-04-26"><a href="#2-3-0-2020-04-26" class="headerlink" title="2.3.0(2020/04/26)"></a>2.3.0(2020/04/26)</h2><h3 id="Breaking-Change"><a href="#Breaking-Change" class="headerlink" title="Breaking Change"></a>Breaking Change</h3><ol><li><p>增加Facebook Comments</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># Facebook Comments Plugin</span><span class="token prefix inserted">+</span><span class="token line"># https://developers.facebook.com/docs/plugins/comments/</span><span class="token prefix inserted">+</span><span class="token line">facebook_comments:</span><span class="token prefix inserted">+</span><span class="token line">  enable: false</span><span class="token prefix inserted">+</span><span class="token line">  app_id:</span><span class="token prefix inserted">+</span><span class="token line">  user_id: # optional</span><span class="token prefix inserted">+</span><span class="token line">  pageSize: 10 # The number of comments to show</span><span class="token prefix inserted">+</span><span class="token line">  order_by: social # social/time/reverse_time</span><span class="token prefix inserted">+</span><span class="token line">  lang: en_US # Language en_US/zh_CN/zh_TW and so on</span><span class="token prefix inserted">+</span><span class="token line">  count: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>增加頁面加載動畫Preloader #193</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># 加載動畫 Loading Animation</span><span class="token prefix inserted">+</span><span class="token line">preloader: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>aside card-tags可配置是否顯示顏色/aside subtitle可配置，優先顯示配置內容、沒有的顯示頁面subtitle #191 /aside widget 增加部分參數可配置/aside widget的Categories，Tags，post,Archives可配置limit/整合公告欄配置到aside去</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">aside:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: true</span><span class="token prefix unchanged"> </span><span class="token line"> mobile: true # 手機頁面( 顯示寬度 &lt; 768px )是否顯示aside內容</span><span class="token prefix unchanged"> </span><span class="token line"> position: right # left or right</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  card_author: true</span><span class="token prefix deleted">-</span><span class="token line">  card_announcement: true</span><span class="token prefix deleted">-</span><span class="token line">  card_recent_post: true</span><span class="token prefix deleted">-</span><span class="token line">  card_categories: true</span><span class="token prefix deleted">-</span><span class="token line">  card_tags: true</span><span class="token prefix deleted">-</span><span class="token line">  card_archives: true</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  card_author:</span><span class="token prefix inserted">+</span><span class="token line">    enable: true</span><span class="token prefix inserted">+</span><span class="token line">    description:</span><span class="token prefix inserted">+</span><span class="token line">  card_announcement:</span><span class="token prefix inserted">+</span><span class="token line">    enable: true</span><span class="token prefix inserted">+</span><span class="token line">    content: This is my Blog</span><span class="token prefix inserted">+</span><span class="token line">  card_recent_post:</span><span class="token prefix inserted">+</span><span class="token line">    enable: true</span><span class="token prefix inserted">+</span><span class="token line">    limit: 5 # if set 0 will show all</span><span class="token prefix inserted">+</span><span class="token line">  card_categories:</span><span class="token prefix inserted">+</span><span class="token line">    enable: true</span><span class="token prefix inserted">+</span><span class="token line">    limit: 8 # if set 0 will show all</span><span class="token prefix inserted">+</span><span class="token line">  card_tags:</span><span class="token prefix inserted">+</span><span class="token line">    enable: true</span><span class="token prefix inserted">+</span><span class="token line">    limit: 40 # if set 0 will show all</span><span class="token prefix inserted">+</span><span class="token line">    color: false</span><span class="token prefix inserted">+</span><span class="token line">  card_archives:</span><span class="token prefix inserted">+</span><span class="token line">    enable: true</span><span class="token prefix inserted">+</span><span class="token line">    type: monthly # yearly or monthly</span><span class="token prefix inserted">+</span><span class="token line">    format: MMMM YYYY # eg: YYYY年MM月</span><span class="token prefix inserted">+</span><span class="token line">    order: -1 # Sort of order. 1, asc for ascending; -1, desc for descending</span><span class="token prefix inserted">+</span><span class="token line">    limit: 8 # if set 0 will show all</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> card_webinfo: true</span><span class="token prefix unchanged"> </span><span class="token line"> </span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"># 網站公告</span><span class="token prefix deleted">-</span><span class="token line">announcement:</span><span class="token prefix deleted">-</span><span class="token line">  content: 感謝訪問本站，若喜歡請收藏 ^_^</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>改CDN_USE為inject,可插入代碼到head或者bottom</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"># CDN</span><span class="token prefix deleted">-</span><span class="token line"># 網站必須</span><span class="token prefix deleted">-</span><span class="token line"># 可根據需要自行添加js/css</span><span class="token prefix deleted">-</span><span class="token line">CDN_USE:</span><span class="token prefix deleted">-</span><span class="token line">  css:</span><span class="token prefix deleted">-</span><span class="token line">    - /css/index.css</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  js:</span><span class="token prefix deleted">-</span><span class="token line">    - https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js #/js/third-party/jquery.min.js</span><span class="token prefix deleted">-</span><span class="token line">    - /js/utils.js</span><span class="token prefix deleted">-</span><span class="token line">    - /js/main.js</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># inject</span><span class="token prefix inserted">+</span><span class="token line"># 插入代碼到頭部&lt;/head&gt;之前 和 尾部&lt;/body&gt;之前</span><span class="token prefix inserted">+</span><span class="token line">inject:</span><span class="token prefix inserted">+</span><span class="token line">  head:</span><span class="token prefix inserted">+</span><span class="token line">  # - &lt;link rel="stylesheet" href="xxxxx"&gt;</span><span class="token prefix inserted">+</span><span class="token line">  bottom:</span><span class="token prefix inserted">+</span><span class="token line">  # - &lt;script src="xxxx"&gt;&lt;/script&gt;</span></span># CDN# 非必要不要修改CDN:<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  # main</span><span class="token prefix inserted">+</span><span class="token line">  main_css: /css/index.css</span><span class="token prefix inserted">+</span><span class="token line">  jquery: https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js</span><span class="token prefix inserted">+</span><span class="token line">  main: /js/main.js</span><span class="token prefix inserted">+</span><span class="token line">  utils: /js/utils.js</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>適配valine 1.4.5以上版本</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">valine:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: false # if you want use valine,please set this value is true</span><span class="token prefix unchanged"> </span><span class="token line"> appId: # leancloud application app id</span><span class="token prefix unchanged"> </span><span class="token line"> appKey: # leancloud application app key</span><span class="token prefix unchanged"> </span><span class="token line"> notify: false # valine mail notify (true/false) Deprecated in v1.4.0+</span><span class="token prefix unchanged"> </span><span class="token line"> verify: false # valine verify code (true/false) Deprecated in v1.4.0+</span><span class="token prefix unchanged"> </span><span class="token line"> pageSize: 10 # comment list page size</span><span class="token prefix unchanged"> </span><span class="token line"> avatar: monsterid # gravatar style https://valine.js.org/#/avatar</span><span class="token prefix unchanged"> </span><span class="token line"> lang: en # i18n: zh-CN/zh-TW/en/ja</span><span class="token prefix unchanged"> </span><span class="token line"> placeholder: Please leave your footprints # valine comment input placeholder(like: Please leave your footprints )</span><span class="token prefix unchanged"> </span><span class="token line"> guest_info: nick,mail,link #valine comment header info</span><span class="token prefix unchanged"> </span><span class="token line"> recordIP: false # Record reviewer IP</span><span class="token prefix unchanged"> </span><span class="token line"> serverURLs: # This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  emojiCDN: # emoji CDN</span><span class="token prefix inserted">+</span><span class="token line">  enableQQ: false # enable the Nickname box to automatically get QQ Nickname and QQ Avatar</span><span class="token prefix inserted">+</span><span class="token line">  requiredFields: nick,mail # required fields nick/mail/link</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> bg: /img/comment_bg.png # valine background</span><span class="token prefix unchanged"> </span><span class="token line"> count: false # dispaly comment count in top_img</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>移除對文章隱藏的支持</p></li></ol><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li>增加標籤外掛 tag-toggle</li><li>適配hexo-generator-indexed插件</li><li>Dark mode和Read mode配色微調</li><li>增加頁面keywords設置 #191</li><li>algolia-search highlight文字加深</li><li>調整子目錄的排版(向左對齊)</li><li>調整aside和mobile sidebar 網頁資訊佈局，當缺少一個時，寬度依舊平分</li><li>sidebar menu 增加頭像轉圈hover</li><li>當沒有設置Description時，會自動讀取文章前200個文字作為meta Description</li><li>meta增加article:published_time和article:modified_time</li><li>subtitle修改為網頁加載完後再加載，防止API迴應過慢而阻礙網頁顯示</li><li>移除subtitle金山詞霸每日一句，增加搏天API的隨機語錄</li><li>本地搜索支持顯示文章內容和高亮keyword</li><li>Read mode下可以切換Dark mode和Light mode</li><li>高分辨率下的界面適配 #163</li><li>修復Dark Mode下，note標籤的顯示bug</li><li>添加 dns_prefetch</li></ol><h3 id="Fixed"><a href="#Fixed" class="headerlink" title="Fixed"></a>Fixed</h3><ol><li>修復 articleSort 設置文章封面邏輯不一致的問題 #194</li><li>修正zh-TW部分用語</li><li>修復hide-block 配置顏色顯示出錯的bug</li><li>修復只能點擊子目錄文字才能跳轉的bug</li><li>修復搜索結果在手機端無法滾動的bug</li><li>修復aside categories 查看更多跳轉到tags頁面的bug #188</li><li>修復當flink.yml內容為空時，報錯的bug</li><li>修復Dark mode下 aside 查看更多文字顏色太淺的bug</li><li>修復POST-META關閉閲讀分鐘和訪問量後,評論量前有分割線的bug</li><li>修復canvas_ribbon透明度變為1再變回預設值bug</li><li>修復當default_cover沒設置時，會出現無圖片的bug</li><li>修復文章頁替換url hash值而導致歷史記錄過多的問題</li><li>修復DarkMode下，note標籤的顯示bug</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">2.2.5(2020/03/28)</summary><div class="toggle-content"><h2 id="2-2-5-2020-03-28"><a href="#2-2-5-2020-03-28" class="headerlink" title="2.2.5(2020/03/28)"></a>2.2.5(2020/03/28)</h2><h3 id="Breaking-Change"><a href="#Breaking-Change" class="headerlink" title="Breaking Change"></a>Breaking Change</h3><ol><li><p>增加自動廣告位置</p> <pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">ad:</span><span class="token prefix inserted">+</span><span class="token line"> index:</span><span class="token prefix inserted">+</span><span class="token line"> aside:</span><span class="token prefix inserted">+</span><span class="token line"> post:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>增加圖片Figcaption顯示</p> <pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> photofigcaption: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>增加全站總字數顯示，可配置是否關閉wordcout閲讀時間/字數統計/全站總字數</p> <pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">wordcount:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: false</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  post_wordcount: true</span><span class="token prefix inserted">+</span><span class="token line">  min2read: true</span><span class="token prefix inserted">+</span><span class="token line">  total_wordcount: true</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li>文章頁上滑出現的頂欄顯示目錄</li><li>全站post-meta增加提示文本(Tooltip Text)</li><li>調整文章頁post-meta和主頁post-meta的間距</li><li>文章頁，當設置只顯示一個日期時，增加文字顯示</li></ol><h3 id="Fixed"><a href="#Fixed" class="headerlink" title="Fixed"></a>Fixed</h3><ol><li>修復lazyload中，img標籤的class在src後面時，導致替換出錯的bug</li><li>修復複製版權信息url為undefined的bug</li><li>修復aside 的 “查看更多” 不居中的bug</li><li>修復highlight_shrink設為false時,js報錯的bug</li><li>修復highlight_shrink設為true,點擊無反應，沒有打開代碼框的bug</li><li>Darkmode下，出現切換按鈕icon沒有改變的bug</li><li>修復簡繁轉換無效的bug</li><li>修復首頁文章日期顯示錯誤的bug</li><li>修復因註釋掉豆瓣設置導致報Cannot read property ‘meta’ of undefined的bug</li><li>修復Gitalk報Error: Cannot read property ‘repository’ of undefined 的bug</li><li>修復評論utterances 在display_mode設置為dark時，仍顯示light主題的bug</li><li>修復display_mode設置dark沒有效果的bug</li><li>評論增加夜間模式、文章頁判斷,減少不必要的js加載</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">2.2.0 (2020/03/17)</summary><div class="toggle-content"><h2 id="2-2-0-2020-03-17"><a href="#2-2-0-2020-03-17" class="headerlink" title="2.2.0 (2020/03/17)"></a>2.2.0 (2020/03/17)</h2><h3 id="Breaking-Change"><a href="#Breaking-Change" class="headerlink" title="Breaking Change"></a>Breaking Change</h3><ol><li><p>不再支持hexo 4.0.0以下版本</p></li><li><p>添加hexo fragment_cache,加快生成速度</p> <pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> fragment_cache: true</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>完善V5圖標顯示，不再需要同時加載V4和v5圖標</p> <pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> fontawesome_v5:</span><span class="token prefix inserted">+</span><span class="token line">  enable: false</span></span>CDN_USE:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> css:</span><span class="token prefix unchanged"> </span><span class="token line">   - /css/index.css</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">   - https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css</span><span class="token prefix deleted">-</span><span class="token line">   - https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free/css/all.min.css #fontawesomeV5_css</span></span>CDN:<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  # fontawesome</span><span class="token prefix inserted">+</span><span class="token line">  fontawesome_v4: https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css</span><span class="token prefix inserted">+</span><span class="token line">  fontawesome_v5: https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free/css/all.min.css</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>去除cheerio依賴</p></li><li><p>整合豆瓣配置，增加配置遊戲，圖書頁面top_img,可設置是否設置meta,解決部分瀏覽器無法顯示圖片問題</p> <pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> # 如果你有使用hexo-douban去生成movie界面，可配置這個</span><span class="token prefix deleted">-</span><span class="token line"> movies_img: https://cdn.jsdelivr.net/gh/jerryc127/butterfly_cdn@2.1.0/top_img/movie.jpg</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> douban:</span><span class="token prefix inserted">+</span><span class="token line">   meta: false</span><span class="token prefix inserted">+</span><span class="token line">   movies_img:</span><span class="token prefix inserted">+</span><span class="token line">   books_img:</span><span class="token prefix inserted">+</span><span class="token line">   games_img:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>友情鏈接除列表外可自定義內容</p></li><li><p>可設置主頁標題距離頂部距離</p> <pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"># 主頁設置# 默認top_img全屏，site_info在中間# 使用默認, 都無需填寫(建議默認)<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">index_site_info_top: # 主頁標題距離頂部距離  例如 300px/300em/300rem/10%</span></span>index_top_img_height: # 主頁top_img高度 例如 300px/300em/300rem  不能使用百分比<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>側邊欄可隱藏,可設置手機頁面是否隱藏</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">aside_mobile: true</span></span>aside:<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  enable: true</span><span class="token prefix inserted">+</span><span class="token line">  mobile: true # 手機頁面( 顯示寬度 &lt; 768px )是否顯示aside內容</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> position: right # left or right</span><span class="token prefix unchanged"> </span><span class="token line"> card_author: true</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>增加disqusjs和utterances 兩個評論</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">disqusjs:</span><span class="token prefix inserted">+</span><span class="token line">  enable: false #開啟改為 true</span><span class="token prefix inserted">+</span><span class="token line">  shortname:</span><span class="token prefix inserted">+</span><span class="token line">  siteName:</span><span class="token prefix inserted">+</span><span class="token line">  apikey:</span><span class="token prefix inserted">+</span><span class="token line">  api: https://disqus.skk.moe/disqus/ #一般情況下無需修改 API 地址</span><span class="token prefix inserted">+</span><span class="token line">  admin:</span><span class="token prefix inserted">+</span><span class="token line">  adminLabel:</span><span class="token prefix inserted">+</span><span class="token line">  count: true # top_img顯示評論數</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> utterances:</span><span class="token prefix inserted">+</span><span class="token line">   enable: false</span><span class="token prefix inserted">+</span><span class="token line">   repo: jerryc127/jerryc127.github.io # 可選 pathname/url/title/og:title</span><span class="token prefix inserted">+</span><span class="token line">   issue_term: pathname # 可選 github-light/github-dark/github-dark-orange/icy-dark/dark-blue/photon-dark</span><span class="token prefix inserted">+</span><span class="token line">  light_theme: github-light</span><span class="token prefix inserted">+</span><span class="token line">  dark_theme: photon-dark</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>首頁subtitle可關閉打字效果，可設置打字效果顯示一次或loop</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">subtitle:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: true</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  # 打字效果</span><span class="token prefix inserted">+</span><span class="token line">  effect: true</span><span class="token prefix inserted">+</span><span class="token line">  # 循環或者只打字一次</span><span class="token prefix inserted">+</span><span class="token line">  loop: false</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> # source調用第三方服務</span><span class="token prefix unchanged"> </span><span class="token line"> # source: false 關閉調用</span><span class="token prefix unchanged"> </span><span class="token line"> # source: 1  調用金山詞霸的每日一句(簡體)</span><span class="token prefix unchanged"> </span><span class="token line"> # source: 2  調用一言網的一句話(簡體) #https://hitokoto.cn/</span><span class="token prefix unchanged"> </span><span class="token line"> # source: 3  調用一句網(簡體) http://yijuzhan.com/</span><span class="token prefix unchanged"> </span><span class="token line"> # source: 4  調用今日詩詞(簡體) https://www.jinrishici.com/</span><span class="token prefix unchanged"> </span><span class="token line"> # subtitle 會先顯示 source , 再顯示 sub 的內容</span><span class="token prefix unchanged"> </span><span class="token line"> source: 2</span><span class="token prefix unchanged"> </span><span class="token line"> # (如果有英文逗號' , '，請使用轉義字符 &amp;#44;)</span><span class="token prefix unchanged"> </span><span class="token line"> # 如果關閉打字效果，subtitle只會顯示sub的第一行文字</span><span class="token prefix unchanged"> </span><span class="token line"> sub:</span><span class="token prefix unchanged"> </span><span class="token line">   - 今日事&amp;#44;今日畢</span><span class="token prefix unchanged"> </span><span class="token line">   - Never put off till tomorrow what you can do today</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>增加valine和gitalk的配置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">gitalk:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: false</span><span class="token prefix unchanged"> </span><span class="token line"> client_id:</span><span class="token prefix unchanged"> </span><span class="token line"> client_secret:</span><span class="token prefix unchanged"> </span><span class="token line"> repo:</span><span class="token prefix unchanged"> </span><span class="token line"> owner:</span><span class="token prefix unchanged"> </span><span class="token line"> admin:</span><span class="token prefix unchanged"> </span><span class="token line"> language: zh-CN # en , zh-CN , zh-TW</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  perPage: 10 # Pagination size, with maximum 100.</span><span class="token prefix inserted">+</span><span class="token line">  distractionFreeMode: false # Facebook-like distraction free mode.</span><span class="token prefix inserted">+</span><span class="token line">  pagerDirection: last # Comment sorting direction, available values are last and first.</span><span class="token prefix inserted">+</span><span class="token line">  createIssueManually: false # Gitalk will create a corresponding github issue for your every single page automatically</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> count: true # top_img顯示評論數</span></span>valine:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: false # if you want use valine,please set this value is true</span><span class="token prefix unchanged"> </span><span class="token line"> appId:  # leancloud application app id</span><span class="token prefix unchanged"> </span><span class="token line"> appKey:  # leancloud application app key</span><span class="token prefix unchanged"> </span><span class="token line"> notify: false # valine mail notify (true/false) https://github.com/xCss/Valine/wiki</span><span class="token prefix unchanged"> </span><span class="token line"> verify: false # valine verify code (true/false)</span><span class="token prefix unchanged"> </span><span class="token line"> pageSize: 10 # comment list page size</span><span class="token prefix unchanged"> </span><span class="token line"> avatar: monsterid # gravatar style https://valine.js.org/#/avatar</span><span class="token prefix unchanged"> </span><span class="token line"> lang: en # i18n: zh-cn/en</span><span class="token prefix unchanged"> </span><span class="token line"> placeholder: 記得留下你的暱稱和郵箱....可以快速收到回覆 # valine comment input placeholder(like: Please leave your footprints )</span><span class="token prefix unchanged"> </span><span class="token line"> guest_info: nick,mail,link #valine comment header info</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  recordIP: false # Record reviewer IP</span><span class="token prefix inserted">+</span><span class="token line">  serverURLs: # This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> bg: /img/comment_bg.png # valine background</span><span class="token prefix unchanged"> </span><span class="token line"> count: true # top_img顯示評論數</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>darkmode配置整理</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> # 夜間模式</span><span class="token prefix deleted">-</span><span class="token line"> darkmode:</span><span class="token prefix deleted">-</span><span class="token line">  enable: true</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"># 自動切換 dark mode和 light mode</span><span class="token prefix deleted">-</span><span class="token line"># autoChangeMode: 1  跟隨系統而變化，不支持的瀏覽器/系統將按照時間晚上6點到早上6點之間切換為 dark mode</span><span class="token prefix deleted">-</span><span class="token line"># autoChangeMode: 2  只按照時間晚上6點到早上6點之間切換為 dark mode</span><span class="token prefix deleted">-</span><span class="token line"># autoChangeMode: false 取消自動切換</span><span class="token prefix deleted">-</span><span class="token line">autoChangeMode: false</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> darkmode:</span><span class="token prefix inserted">+</span><span class="token line">  enable: true</span><span class="token prefix inserted">+</span><span class="token line">  # dark mode和 light mode切換按鈕</span><span class="token prefix inserted">+</span><span class="token line">  button: true</span><span class="token prefix inserted">+</span><span class="token line">  # 自動切換 dark mode和 light mode</span><span class="token prefix inserted">+</span><span class="token line">  # autoChangeMode: 1  跟隨系統而變化，不支持的瀏覽器/系統將按照時間晚上6點到早上6點之間切換為 dark mode</span><span class="token prefix inserted">+</span><span class="token line">  # autoChangeMode: 2  只按照時間晚上6點到早上6點之間切換為 dark mode</span><span class="token prefix inserted">+</span><span class="token line">  # autoChangeMode: false 取消自動切換</span><span class="token prefix inserted">+</span><span class="token line">  autoChangeMode: false</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>增加404頁面</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># A simple 404 page</span><span class="token prefix inserted">+</span><span class="token line">error_404:</span><span class="token prefix inserted">+</span><span class="token line">  enable: true</span><span class="token prefix inserted">+</span><span class="token line">  subtitle: "頁面沒有找到"</span><span class="token prefix inserted">+</span><span class="token line">  background:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>post_beautify改為beautify，頁面美化不再只限於post頁，page頁也一樣</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">post_beautify:</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">beautify:</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: true</span><span class="token prefix unchanged"> </span><span class="token line"> title-prefix-icon: '\f0c1'</span><span class="token prefix unchanged"> </span><span class="token line"> title-prefix-icon-color: "#F47466"</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>可設置是否顯示cover，可設置各位置的cover顯示</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"># the default cover of the post</span><span class="token prefix deleted">-</span><span class="token line">default_cover: https://cdn.jsdelivr.net/gh/jerryc127/butterfly_cdn@2.1.0/top_img/default.png</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">index_post_cover: both</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">cover:</span><span class="token prefix inserted">+</span><span class="token line">  # 是否顯示文章封面</span><span class="token prefix inserted">+</span><span class="token line">  index_enable: true</span><span class="token prefix inserted">+</span><span class="token line">  aside_enable: true</span><span class="token prefix inserted">+</span><span class="token line">  archives_enable: true</span><span class="token prefix inserted">+</span><span class="token line">  # 封面顯示的位置</span><span class="token prefix inserted">+</span><span class="token line">  # 三個值可配置 left , right , both</span><span class="token prefix inserted">+</span><span class="token line">  position: both</span><span class="token prefix inserted">+</span><span class="token line">  # 當沒有設置cover時，默認的封面顯示</span><span class="token prefix inserted">+</span><span class="token line">  default_cover:</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>增加mermaid,可畫流程圖、狀態圖、時序圖、甘特圖等等</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># https://github.com/knsv/mermaid</span><span class="token prefix inserted">+</span><span class="token line">mermaid:</span><span class="token prefix inserted">+</span><span class="token line">  enable: true</span><span class="token prefix inserted">+</span><span class="token line">  # built-in themes: default/forest/dark/neutral</span><span class="token prefix inserted">+</span><span class="token line">  theme: default</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>增加pangu配置，中英文之間添加空格</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"># https://github.com/vinta/pangu.js</span><span class="token prefix inserted">+</span><span class="token line"># 中英文之間添加空格</span><span class="token prefix inserted">+</span><span class="token line">pangu:</span><span class="token prefix inserted">+</span><span class="token line">  enable: true</span><span class="token prefix inserted">+</span><span class="token line">  field: page # page/post</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>整合部分配置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">avatar_effect: false</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">avatar:</span><span class="token prefix inserted">+</span><span class="token line">  img: /img/avatar.png</span><span class="token prefix inserted">+</span><span class="token line">  effect: true # 頭像會一直轉圈</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>post-copyright增加decode網址 (可以顯示中文)</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">post_copyright:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: true</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  decode: false</span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> license: CC BY-NC-SA 4.0</span><span class="token prefix unchanged"> </span><span class="token line"> license_url: https://creativecommons.org/licenses/by-nc-sa/4.0/</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>增加部分顏色配置</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">theme_color:<span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line"> enable: true</span><span class="token prefix unchanged"> </span><span class="token line"> main: "#49B1F5"</span><span class="token prefix unchanged"> </span><span class="token line"> paginator: "#00c4b6"</span><span class="token prefix unchanged"> </span><span class="token line"> button_hover: "#FF7242"</span><span class="token prefix unchanged"> </span><span class="token line"> text_selection: "#00c4b6"</span><span class="token prefix unchanged"> </span><span class="token line"> link_color: "#99a9bf"</span><span class="token prefix unchanged"> </span><span class="token line"> meta_color: '#858585'</span><span class="token prefix unchanged"> </span><span class="token line"> hr_color: "#A4D8FA"</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  read-mode-bg_color: '#FAF9DE'</span><span class="token prefix deleted">-</span><span class="token line">  inline-code-color: '#F47466'</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  code_foreground: "#F47466"</span><span class="token prefix inserted">+</span><span class="token line">  code_background: "rgba(27, 31, 35, .05)"</span><span class="token prefix inserted">+</span><span class="token line">  toc_color: "#00c4b6"</span><span class="token prefix inserted">+</span><span class="token line">  blockquote_padding_color: "#49b1f5"</span><span class="token prefix inserted">+</span><span class="token line">  blockquote_background_color: "#49b1f5"</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>主頁文章增加tags和更新日期顯示，可以配置post_meta</p><pre class="line-numbers language-diff" data-language="diff"><code class="language-diff">post_meta:<span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">  date_type: both # or created or updated 文章日期是創建日或者更新日或都顯示</span><span class="token prefix deleted">-</span><span class="token line">  categories: true # or false 是否顯示分類</span><span class="token prefix deleted">-</span><span class="token line">  tags: true # or false 是否顯示標籤</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  page:</span><span class="token prefix inserted">+</span><span class="token line">    date_type: both # created or updated or both 主頁文章日期是創建日或者更新日或都顯示</span><span class="token prefix inserted">+</span><span class="token line">    categories: true # true or false 主頁是否顯示分類</span><span class="token prefix inserted">+</span><span class="token line">    tags: true # true or false 主頁是否顯示標籤</span><span class="token prefix inserted">+</span><span class="token line">  post:</span><span class="token prefix inserted">+</span><span class="token line">    date_type: both # created or updated or both 文章頁日期是創建日或者更新日或都顯示</span><span class="token prefix inserted">+</span><span class="token line">    categories: true # true or false 文章頁是否顯示分類</span><span class="token prefix inserted">+</span><span class="token line">    tags: true # true or false 文章頁是否顯示標籤</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li>適配IE</li><li>增加一個Tag Plugins: 圖庫集</li><li>增加一個Tag Plugins: tag-hide 功能 inline/block</li><li>去除page頁開頭顯示與標題一樣的內容</li><li>aside 公告欄設置，支持html代碼</li><li>手機界面sidebar顯示進度條和加深對應的標題</li><li>主頁subtitle 的 hitokoto 顯示內容出處</li><li>footer 的hexo鏈接改為https</li><li>修改手機下，menus和toc的打開效果</li><li>手機頁面下，搜索界面全屏顯示</li><li>SEO優化，標題欄改為h1顯示</li><li>閲讀模式優化，可根據light mode 和darkmode調整背景</li><li>當屏蔽js時，header會出現(之前用js控制，會隱藏)</li></ol><h3 id="Fixed"><a href="#Fixed" class="headerlink" title="Fixed"></a>Fixed</h3><ol><li>修復Tencent Analytics的script加載為https #105</li><li>修復相關文章，日期顯示錯誤bug</li><li>修復gitalk報錯問題</li><li>修復當valine background 是絕對地址時無法顯示的bug</li><li>修復medium-zoom 無法使用的bug</li><li>修復在safari下，點擊或移動到首頁文章cover，圓角變成正方形的bug #114</li><li>修復在部分瀏覽器下，aside,友情鏈接頭像轉動變形的bug</li><li>修復在寬度限制下，表格內容溢出屏幕外而出現滾動條的bug #138</li><li>修復gitalk js 在一些沒有設置評論的page里加載的bug</li><li>修復tag plugins 的gist 在不同主題下的背景顏色問題(黑色主題下，文字不易觀看)</li><li>修復highlight figcaption 顯示不全的bug</li><li>修復disqus評論數無法獲取的bug</li><li>修復子目錄在觸摸屏下點擊,偶爾不出現的bug</li><li>修復a標籤太長(連續英文字母)不會換行的bug</li><li>修復toc滾動時，閲讀進度條也跟着滾動的bug</li><li>修復aside的圖片，可點擊顯示大圖bug</li><li>修復activate-power-mode設置參數無效bug</li><li>修復語言上的錯誤 #156</li><li>修復主頁在safari桌面端，首頁滾動卡頓的bug</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">2.1.0 (2019/12/20)</summary><div class="toggle-content"><h2 id="2-1-0-2019-12-20"><a href="#2-1-0-2019-12-20" class="headerlink" title="2.1.0 (2019/12/20)"></a>2.1.0 (2019/12/20)</h2><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li>可設置隱藏文章</li><li>適配 Hexo 的 Tag Plugins Code Block With marked lines 顯示</li><li>可配置首頁 cover 顯示的位置</li><li>更改深色模式下的配色</li><li>activate_power_mode 增加關閉顏色和抖動</li><li>增加谷歌廣告，騰訊分析</li><li>相關文章增加時間顯示，調整佈局，垂直居中</li><li>文章頁面，top_img 增加評論數顯示</li><li>可以取消點擊圖片觀看大圖</li><li>mathjax 和 kathex 可設置每頁都加載還是按需加載</li><li>深色模式下，滾動條顏色的適配</li><li>優化 gitalk 在 dark mode 下的顯示</li><li>文章頁，文章標題過長時，只顯示三行內容</li><li>深色模式下，背景圖片加上蒙板</li><li>優化深色/閲讀模式下，canvas 的顯示</li><li>優化打賞的特效和移動到二維碼不會立刻消失</li><li>優化 sub-menu 樣式</li><li>修改 aside 的 tags 顏色，在深色模式下不會出現觀看困難</li><li>升級 normalize.css 到最新版</li><li>優化手機上 toc 和 menu 的打開動畫</li><li>優化代碼框打開關閉的特效</li><li>精簡 js,部分操作改為 css 控制</li><li>優化主題的一些動畫，不會過於生硬</li></ol><h3 id="Fixed"><a href="#Fixed" class="headerlink" title="Fixed"></a>Fixed</h3><ol><li>修復當圖片被 a 標籤包圍時，點擊圖標沒有跳轉到對應網頁而是出現大圖觀看模式的 bug</li><li>修復當網址有 subdirectory 時，menu、打賞二維碼和 lodding_bg 鏈接路徑錯誤的 bug</li><li>修復當網址有 subdirectory 時,</li><li>修復 katex 的 CSS 無法讀取 bug</li><li>修復搜索按鈕在文章頁不顯示的 bug</li><li>修復 gitalk css 引用失敗的 bug</li><li>修復 點擊特效 煙花 無效的 bug</li><li>修復 gitalk 報 path.startsWith is not a function 的 bug</li><li>修復 閲讀模式下，背景沒有變純色的 bug</li><li>修復閲讀模式下，header 偶爾出現沒有靠攏頂部的 bug</li><li>修復 Hexo Tag Plugins Block Quote 裏的鏈接顯示出外面的 Bug</li><li>修復 aside 歸檔日期過長導致錯位的 bug</li><li>修復 toc 為空時，toc 按鈕仍存在的 bug</li><li>修復關閉懶加載後，頭像無法顯示的 bug</li><li>修復深色模式下，切換 readmode 偶爾會無效的 bug</li><li>修復在一些手機設備上，toc 和 menu 的按鈕顯示不對齊的 bug #72</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">2.0.0 (2019/11/03)</summary><div class="toggle-content"><h2 id="2-0-0-2019-11-03"><a href="#2-0-0-2019-11-03" class="headerlink" title="2.0.0 (2019/11/03)"></a>2.0.0 (2019/11/03)</h2><h3 id="Breaking-change"><a href="#Breaking-change" class="headerlink" title="Breaking change"></a>Breaking change</h3><ol><li>手機端界面卡片化，同時，手機端也可以顯示側邊欄的內容</li><li>修復當menu過多時，header界面出現錯亂的bug。當menu過多時，會變為sidebar模式</li><li>增加medium-zoom大圖查看模式</li><li>增加鼠標點擊特效：文字和愛心 兩個點擊特效</li><li>主頁subtitle可以調用第三方api(金山詞霸每日一句、一言網的一句話、一句網、今日詩詞)</li><li>添加 snackbar 彈窗</li><li>修改nightshift為darkmode，darkmode可隨系統設置而自動切換，可設置隨時間而切換darkmode</li><li>修復hexo自帶的標籤外掛(Tag Plugins)顯示bug(Block Quote、Code Block With caption、Gist、Youtube、Vimeo)</li><li>主題所需要的css和js可根據需要配置CDN</li><li>更改darkmode的加載方式，網站設置dark mode後，現在進入網頁不會在’閃’一下</li><li>背景特效和背景圖片在手機界面也會顯示</li><li>增加justified-gallery圖片顯示(Tag Plugins)</li></ol><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li>文章頁面，字數統計、閲讀時長和閲讀量前面添加icon</li><li>更改懶加載js</li><li>升級typed.js/instantpage.js到最新版</li><li>搜索和右下角按鈕添加退出特效</li></ol><h3 id="Fixed"><a href="#Fixed" class="headerlink" title="Fixed"></a>Fixed</h3><ol><li>修復在 Hexo 4.0.0下，一些按鈕點擊會跳出一個空白頁的bug</li><li>修復在 Hexo 4.0.0下，分頁按鈕出現代碼的bug</li><li>修復當沒有設置評論時，右下角依舊出現’直達評論’按鈕的bug</li><li>優化sidebar的打開速度</li><li>修復文章頁標題左右邊距不平等的bug</li><li>修復keywords讀取的bug</li><li>修復當post/page 內容為空時，footer位置錯亂的bug</li><li>修復在手機safari，toc sidebar底部內容被遮擋的bug</li><li>完善Dark mode,一些界面的配色</li><li>修復 card-archives 查看更多 跳轉bug</li></ol><h3 id="Remove"><a href="#Remove" class="headerlink" title="Remove"></a>Remove</h3><ol><li>移除Gitment</li><li>移除Gallery</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">1.2.0 (2019/09/24)</summary><div class="toggle-content"><h2 id="1-2-0-2019-09-24"><a href="#1-2-0-2019-09-24" class="headerlink" title="1.2.0 (2019/09/24)"></a>1.2.0 (2019/09/24)</h2><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li>更改手機頁面的menu和toc的顯示方式和顯示特效(ipad也能看TOC)</li><li>可設置禁止複製網站內容</li><li>可設置複製時，內容自動加上版權信息</li><li>可修改tag的top_img</li><li>可修改category的top_img</li><li>可修改valine的背景</li><li>archives頁UI優化</li><li>ICP增加icon #37</li><li>可設置主頁top_img的高度</li><li>可設置主頁site-info的位置</li><li>category頁和tag頁的UI可以設置與主頁UI一樣 #31</li><li>主頁subtitle可設置多個句子(不再限制2個) #37</li><li>設置menu時，頭尾添加空格不受影響</li><li>調整post頁的佈局</li><li>書籤添加icon</li><li>公告icon效果</li><li>首頁歸檔模塊，可設置數量限制，會顯示’查看更多’按鈕</li><li>右下角按鈕調整。</li></ol><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol start="19"><li>修復文章cover隨機圖片生成，同一篇文章，不同地方的cover顯示不一樣的bug</li><li>修復gitalk語言設置無效的bug #35</li><li>修復post頁面，當沒有設置word count時，閲讀量前有’|”</li><li>修復sub-menu在safari的顯示問題</li><li>修復tags頁評論居中問題</li><li>修復header a hover 白色問題</li><li>修復夜間模式下footer的顏色bug</li><li>修復英文語言下，書籤英文顯示不完整的問題</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">1.1.5 (2019/09/08)</summary><div class="toggle-content"><h2 id="1-1-5-2019-09-08"><a href="#1-1-5-2019-09-08" class="headerlink" title="1.1.5 (2019/09/08)"></a>1.1.5 (2019/09/08)</h2><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li>Feature: 可設置內聯代碼塊樣式 #26</li><li>Feature: 可設置夜間模式作為默認樣式</li><li>Feature: 可設置是否顯示code language名稱</li><li>Feature: 可設置是否展開或關閉代碼框</li><li>Feature: 可設置背景圖片/顏色</li><li>Feature: 可設置是否顯示footer背景</li><li>Feature: 增加 canvas-nest.js</li><li>Feature: 頭像可設置效果(轉圈圈)</li><li>Feature: menu可設置分組</li></ol><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol start="10"><li>Fix: 優化打賞和搜索打開特效</li><li>Fix: 優化sidebar的打開特效，避免與文章頁特效不同步</li><li>Fix: 適配<strong>hexo-blog-encrypt</strong>，現在可以顯示toc</li><li>Fix: 修復設置不顯示評論時，直達評論按鈕沒有消失的bug</li><li>Fix: 修復post頁底欄，當沒有顯示評論，不顯示TOC，評論和toc都不顯示 這三種狀態下按鈕的bug</li><li>Fix: 修復代碼框左右滑動時，代碼名字跟着滑動的bug</li><li>Fix: 其他page頁標題的字體顯示</li><li>Fix: 修復當設置開啟canvas_ribbons，進入網站會先顯示canvas_ribbons的bug</li><li>Fix: 完善夜間模式下，字體顯示問題</li><li>Fix: 修復代碼框 複製 和 代碼名 z-index bug #25</li><li>Fix: 完善閲讀模式</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">1.1.0 (2019/08/29)</summary><div class="toggle-content"><h2 id="1-1-0-2019-08-29"><a href="#1-1-0-2019-08-29" class="headerlink" title="1.1.0 (2019/08/29)"></a>1.1.0 (2019/08/29)</h2><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li>Feature: 手機menu界面重新設計</li><li>Feature: 文章頁增加美化(原 melody主題功能),並增加更改標題前綴圖標和顏色</li><li>Feature: PC端增加直達評論按鈕</li><li>Feature: 可以對單獨文章設置是否顯示版權信息</li></ol><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>Fix: 修復閲讀模式下，調整字體大小對代碼無效的bug</li><li>Fix: 調整Valine字體顯示問題</li><li>Fix: 修正夜間模式下Valine的適配問題</li><li>Fix: 修復Valine設置notify和verify無效的bug (thx @VincentTV )</li><li>Fix: 修復使用hexo-asset-image,開啟懶加載後，圖片會出現無法加載問題</li><li>Fix:修復 ‘返回頂部’箭頭無法點擊的bug</li></ol><h3 id="Remove"><a href="#Remove" class="headerlink" title="Remove"></a>Remove</h3><ol><li>Remove: 去掉主題”閲讀更多”按鈕</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">1.0.8 (2019/08/11)</summary><div class="toggle-content"><h2 id="1-0-8-2019-08-11"><a href="#1-0-8-2019-08-11" class="headerlink" title="1.0.8 (2019/08/11)"></a>1.0.8 (2019/08/11)</h2><ol><li>Feature: 可關閉圖片懶加載</li><li>Feature: 增加頁面排版，可選擇把右邊欄放在左邊</li><li>Feature: 增加 Note (Bootstrap Callout) (移植於next主題)</li><li>Feature: 手機上能夠查看TOC</li><li>Feature: 增加直達評論按鈕</li><li>Fix: 修復post頁在寬度1024px下的顯示bug</li><li>Fix: 修復代碼框部分語言沒有顯示正確的代碼語言</li><li>Fix: 修復設置裏把Disqus註釋掉無法運行的bug</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">1.0.7 (2019/07/29)</summary><div class="toggle-content"><h2 id="1-0-7-2019-07-29"><a href="#1-0-7-2019-07-29" class="headerlink" title="1.0.7 (2019/07/29)"></a>1.0.7 (2019/07/29)</h2><h3 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h3><ol><li>Feature: add the option to change the site name font-family</li><li>Feature: add the option to close instant-page</li><li>Feature: the sidebar can auto scroll when the toc out of the screen</li></ol><h3 id="Fix"><a href="#Fix" class="headerlink" title="Fix"></a>Fix</h3><ol><li>Fix: random cover of previous post and next post</li><li>Fix: Display null when the subtitle not set</li><li>Fix: display related post’s headline when it is not related posts</li><li>Fix: the bugs of image display</li><li>Fix: When the picture is loaded, the picture appears black frame</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">1.0.6 (2019/07/06)</summary><div class="toggle-content"><h2 id="1-0-6-2019-07-06"><a href="#1-0-6-2019-07-06" class="headerlink" title="1.0.6 (2019/07/06)"></a>1.0.6 (2019/07/06)</h2><ol><li>Feature: random cover #10</li><li>Fix: valine lang not work</li><li>Fix: archives page site name not change when the language change</li><li>Fix: related posts url error</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">1.0.5 (2019/06/28)</summary><div class="toggle-content"><h2 id="1-0-5-2019-06-28"><a href="#1-0-5-2019-06-28" class="headerlink" title="1.0.5 (2019/06/28)"></a>1.0.5 (2019/06/28)</h2><ol><li>fix bugs of gitalk #9</li><li>fix bugs of valine</li><li>new look of the mobile menu</li></ol></div></details><details class="toggle"><summary class="toggle-button" style="">1.0.0 (2019.06/17)</summary><div class="toggle-content"><h2 id="1-0-0-2019-06-17"><a href="#1-0-0-2019-06-17" class="headerlink" title="1.0.0 (2019.06/17)"></a>1.0.0 (2019.06/17)</h2><p>first release</p></div></details>]]></content>
      
      
      <categories>
          
          <category> Docs文檔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Hexo </tag>
            
            <tag> 主題 </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly 安裝文檔(六) 進階教程</title>
      <link href="/posts/4073eda.html"/>
      <url>/posts/4073eda.html</url>
      
        <content type="html"><![CDATA[<div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>📖  本教程更新於 2022 年 02 月 13 日，教程的內容針對最新<strong>穩定版</strong>而更新（如果你是舊版，教程會有些出入，請留意）</p><p>🦋  Butterfly 已經更新到 <a href="https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.1.0">4.1.0</a></p></div><div class="note green icon flat"><i class="note-icon fas fa-rocket"></i><p> 📚  文檔目錄</p><p><a href="#">Post not found: Butterfly-安裝文檔-一-快速開始 🚀 快速開始</a> - <a href="#">Post not found: Butterfly-安裝文檔-二-主題頁面 📑 主題頁面</a> - <a href="#">Post not found: Butterfly-安裝文檔-三-主題配置-1 🛠 主題配置-1</a> - <a href="#">Post not found: Butterfly-安裝文檔-四-主題配置-2 ⚔️ 主題配置-2</a> - <a href="#">Post not found: Butterfly-安裝文檔-五-主題問答 ❓ 主題問答</a> - <a href="#">Post not found: Butterfly-安裝文檔-六-進階教程 ⚡️ 進階教程</a> - <a href="#">Post not found: Butterfly-安裝文檔-七-更新日誌 ✨ 更新日誌</a> - <a href="#">Post not found: Butterfly-打賞 🤞 打賞</a></p></div><div class="note orange icon flat"><i class="note-icon fas fa-magic"></i><p>你可以通過右下角的 <strong>簡</strong> 按鈕切換為簡體顯示 </p></div><hr><h2 id="建議"><a href="#建議" class="headerlink" title="建議"></a>建議</h2><ol><li>不要把個人需要的文件/圖片放在主題<code>source</code>文件夾裏，因為在升級主題的過程中，可能會把文件覆蓋刪除了。<br>在Hexo根目錄的<code>source</code>文件夾裏，創建一個文件夾來放置個人文件/圖片。<br>引用文件直接為<code>/文件夾名稱/文件名</code></li></ol><h2 id="音樂"><a href="#音樂" class="headerlink" title="音樂"></a>音樂</h2><p>音樂界面使用了插件 <code>hexo-tag-aplayer</code><br>使用方法請參考插件<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md">文檔</a></p><p>音樂頁面只是普通的page頁，按普通頁面操作生成就行。</p><blockquote><p>以下內容可供<strong>選擇</strong>配置</p><p>注意： 仍需要安裝插件<a href="https://github.com/MoePlayer/hexo-tag-aplayer">hexo-tag-aplayer</a></p></blockquote><p>插件會在每一個文件都插入 js 和 css，為了避免這一情況，3.0 版本內置了 aplayer 需要的 css 和 js。</p><p>首先在Hexo根目錄<code>_config</code>裏配置<code>asset_inject</code>為<code>false</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">aplayer</span><span class="token punctuation">:</span>  <span class="token key atrule">asset_inject</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然後在你需要使用aplayer的頁面Front-matter添加</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">aplayer: true<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>這樣只會在需要aplayer的頁面插入js和css。</p><p>如何添加全局 Aplayer 播放，請參考 <a href="/posts/507c070f.html">這篇文章</a></p><h2 id="電影"><a href="#電影" class="headerlink" title="電影"></a>電影</h2><p>電影界面使用了插件 <code>hexo-butterfly-douban</code><br>使用方法請參考插件的<a href="https://github.com/jerryc127/butterfly-plugins/tree/main/hexo-butterfly-douban">文檔</a>。</p><p><strong>注意：</strong> </p><ol><li>hexo-butterfly-douban 會主動生成頁面，所以不需要自己創建。</li><li>如遇到無法抓取問題，顯示 <code>INFO  0 movies have been loaded in xxx ms, because you are offline or your network is bad</code><br>請過段時間再試試，這我也無能為力。</li></ol><h2 id="説説"><a href="#説説" class="headerlink" title="説説"></a>説説</h2><h3 id="Artitalk"><a href="#Artitalk" class="headerlink" title="Artitalk"></a>Artitalk</h3><p>安裝插件 <a href="https://www.npmjs.com/package/hexo-butterfly-artitalk">hexo-butterfly-artitalk</a></p><p>具體配置查看<a href="https://github.com/jerryc127/butterfly-plugins/tree/main/hexo-butterfly-artitalk">插件文檔</a></p><h3 id="HexoPlusPlus-Talk"><a href="#HexoPlusPlus-Talk" class="headerlink" title="HexoPlusPlus Talk"></a>HexoPlusPlus Talk</h3><p>安裝插件 <a href="https://www.npmjs.com/package/hexo-butterfly-hpptalk">hexo-butterfly-hpptalk</a></p><p>具體配置查看<a href="https://github.com/jerryc127/butterfly-plugins/tree/main/hexo-butterfly-hpptalk">插件文檔</a></p><h2 id="自定義代碼配色"><a href="#自定義代碼配色" class="headerlink" title="自定義代碼配色"></a>自定義代碼配色</h2><a class="btn-beautify block blue" href="/posts/b37b5fe3.html" title="點擊前往"><i class="fas fa-code"></i><span>點擊前往</span></a><h2 id="自定義側邊欄"><a href="#自定義側邊欄" class="headerlink" title="自定義側邊欄"></a>自定義側邊欄</h2><a class="btn-beautify block green" href="/posts/ea33ab97.html" title="點擊前往"><i class="fas fa-lightbulb"></i><span>點擊前往</span></a><h2 id="添加全局吸底Aplayer教程"><a href="#添加全局吸底Aplayer教程" class="headerlink" title="添加全局吸底Aplayer教程"></a>添加全局吸底Aplayer教程</h2><a class="btn-beautify block pink" href="/posts/507c070f.html" title="點擊前往"><i class="fas fa-music"></i><span>點擊前往</span></a><h2 id="Icon"><a href="#Icon" class="headerlink" title="Icon"></a>Icon</h2><p>Butterfly主題內置了<a href="https://fontawesome.com/">Font Awesome V5 </a>圖標，目前已更新到 5.13.0，總共有1,588個免費圖標。由於是國外的圖標網站，對於國內的一些網站Icon並不支持。如有需要，你可以引入其它的圖標服務商。</p><h3 id="iconfont"><a href="#iconfont" class="headerlink" title="iconfont"></a>iconfont</h3><p>國內最出名的莫過於<a href="https://www.iconfont.cn/">iconfont</a>,功能很強大且圖標內容很豐富的矢量圖標庫。很多<code>Font Awesome</code>不支持的圖標都可以在這裏找到。同時，<a href="https://www.iconfont.cn/">iconfont</a>支持選擇需要的圖標生成css鏈接，減少不必要的CSS加載。</p><h4 id="註冊賬號"><a href="#註冊賬號" class="headerlink" title="註冊賬號"></a>註冊賬號</h4><p>打開<a href="https://www.iconfont.cn/">iconfont</a>的網站，點擊導航欄的<code>人像</code>圖標，會跳出註冊界面，按要求註冊賬號。</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-iconfont.png" alt="Snipaste_2020-05-28_21-12-01"></p><h4 id="添加圖標入庫"><a href="#添加圖標入庫" class="headerlink" title="添加圖標入庫"></a>添加圖標入庫</h4><p>選擇自己需要的圖標，把鼠標移到圖標上，會顯示三個按鈕（依次是添加入庫、收藏和下載），而我們需要的是把圖標添加入庫</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-iconfont-add.png" alt="image-20200528205401440"></p><p>添加入庫後，你可以看到網站右上角<code>購物車</code>圖標顯示了<code>1</code>字，代表圖標已經添加入庫，點擊<code>購物車</code>圖標，會彈出側邊欄顯示詳情。</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-iconfont-check.png" alt="image-20200528205925258"></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-iconfont-detail.png" alt="image-20200528210120442"></p><p>已選擇的圖標會顯示在上面，你可以重複上面的操作，把需要的圖標添加入庫，然後點擊<code>添加到項目</code>。</p><p>接下來會要求選擇項目名稱，沒有的自己創建一個。</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-iconfont-create.png" alt="image-20200528211624459"></p><h4 id="生成CSS鏈接"><a href="#生成CSS鏈接" class="headerlink" title="生成CSS鏈接"></a>生成CSS鏈接</h4><p>在添加到項目之後，會跳到項目的詳情界面。點擊<code>Font class</code>，然後再點擊<code>暫無代碼，點擊生成</code>文字。網站會自動生成CSS鏈接，我們只需要複製鏈接就行。</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-iconfont-link.png" alt="image-20200528212301786"></p><h4 id="添加鏈接進主題配置文件"><a href="#添加鏈接進主題配置文件" class="headerlink" title="添加鏈接進主題配置文件"></a>添加鏈接進主題配置文件</h4><p>打開<code>主題配置文件</code>，找到<code>inject</code>配置，按要求把鏈接填入</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-iconfont-setting.png" alt="image-20200528212440743"></p><p>在我們需要使用的地方填入icon，例如<code>Menu</code>，圖片使用格式為<code>iconfont icon名字</code></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-iconfont-setting-menu.png" alt="image-20200528213151304"></p><p>運行Butterfly之後，你就可以看到menu的圖標生效了</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-iconfont-show.png" alt="image-20200528213346338"></p><h4 id="其他添加方法"><a href="#其他添加方法" class="headerlink" title="其他添加方法"></a>其他添加方法</h4><p>除了通過引入CSS鏈接使用圖標，iconfont也支持通過其它方法使用圖標，具體可查看<a href="https://www.iconfont.cn/help/detail?helptype=code">iconfont官方使用文檔</a></p><h3 id="其它圖標提供商"><a href="#其它圖標提供商" class="headerlink" title="其它圖標提供商"></a>其它圖標提供商</h3><p>除了<a href="https://www.iconfont.cn/">iconfont</a>，還有<a href="https://github.com/Remix-Design/RemixIcon">RemixIcon</a>、<a href="https://www.flaticon.com/categories/seo-and-web">Flaticon</a>等等提供商，很多圖標可以選擇，具體使用方法請參考各自的文檔。</p><h2 id="圖片壓縮"><a href="#圖片壓縮" class="headerlink" title="圖片壓縮"></a>圖片壓縮</h2><p>Butterfly主題需要使用到很多圖片。如果圖片太大，會嚴重拖慢網站的加載速度。</p><p>圖片壓縮能夠有效的緩解這個問題。</p><p>除了通過<code>gulp-imagemin</code>來壓縮圖片，還可以通過在綫壓縮網站和軟件來進行壓縮。以下兩款是我自己正在使用的工具。網上有很多這樣的工具，挑選一款適合自己的就行。</p><ul><li><p><a href="https://tinypng.com/">tinypng</a></p><p>一個在綫壓縮的網站。壓縮後的圖片也保留了很高的質量，在知乎上很多人推薦，不過免費版有限制。</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-tinypng.png" alt="image-20200526173511503"></p></li><li><p><a href="https://saerasoft.com/caesium/">caesium</a></p><p>開源軟件，支持Windows和macOS。可以批量壓縮軟件，無限制。</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-caesium.png" alt="image-20200526173316278"></p></li><li><p> <a href="https://github.com/marketplace/imgbot">imgbot</a></p></li></ul><p>  imgbot 是一款 Github 插件。</p><p>  安裝後，你上傳圖片到 Github 去，imgbot 會自動壓縮圖片並推送 PR，我們只需要合併 PR 就行</p><p>  你可以配置 imgbot 的偵測方法、壓縮方法（有損/無損），具體可以查看插件的文檔</p><p>  <img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-enhance-imgbot.png" alt="image-20200830231742951"></p><h2 id="插件推薦"><a href="#插件推薦" class="headerlink" title="插件推薦"></a>插件推薦</h2><ul><li><p><a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a></p><p>可以把鏈接permalink轉為數字的插件，配置容易，生成時自動轉為數字。</p></li><li><p><a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> </p><p>生成RSS文件的插件</p></li><li><p><a href="https://github.com/hexojs/hexo-filter-nofollow">hexo-filter-nofollow</a></p><p>為網站使用到的所有外鏈添加<code>rel="noopener external nofollow noreferrer"</code>, 可以有效地加強網站SEO和防止權重流失</p></li><li><p><a href="https://github.com/hexojs/hexo-generator-sitemap">hexo-generator-sitemap</a></p><p>生成sitemap的插件</p></li><li><p><a href="https://github.com/coneycode/hexo-generator-baidu-sitemap">hexo-generator-baidu-sitemap</a></p><p>看名字就知道，是專門為百度生成sitemap的插件</p></li></ul><a class="btn-beautify block purple right larger" href="/posts/198a4240.html" title="✨ Butterfly 安裝文檔(七) 更新日誌"><i class="far fa-hand-point-right"></i><span>✨ Butterfly 安裝文檔(七) 更新日誌</span></a>]]></content>
      
      
      <categories>
          
          <category> Docs文檔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Hexo </tag>
            
            <tag> 主題 </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly 安裝文檔(五) 主題問答</title>
      <link href="/posts/98d20436.html"/>
      <url>/posts/98d20436.html</url>
      
        <content type="html"><![CDATA[<div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>📖  本教程更新於 2022 年 02 月 13 日，教程的內容針對最新<strong>穩定版</strong>而更新（如果你是舊版，教程會有些出入，請留意）</p><p>🦋  Butterfly 已經更新到 <a href="https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.1.0">4.1.0</a></p></div><div class="note green icon flat"><i class="note-icon fas fa-rocket"></i><p> 📚  文檔目錄</p><p><a href="#">Post not found: Butterfly-安裝文檔-一-快速開始 🚀 快速開始</a> - <a href="#">Post not found: Butterfly-安裝文檔-二-主題頁面 📑 主題頁面</a> - <a href="#">Post not found: Butterfly-安裝文檔-三-主題配置-1 🛠 主題配置-1</a> - <a href="#">Post not found: Butterfly-安裝文檔-四-主題配置-2 ⚔️ 主題配置-2</a> - <a href="#">Post not found: Butterfly-安裝文檔-五-主題問答 ❓ 主題問答</a> - <a href="#">Post not found: Butterfly-安裝文檔-六-進階教程 ⚡️ 進階教程</a> - <a href="#">Post not found: Butterfly-安裝文檔-七-更新日誌 ✨ 更新日誌</a> - <a href="#">Post not found: Butterfly-打賞 🤞 打賞</a></p></div><div class="note orange icon flat"><i class="note-icon fas fa-magic"></i><p>你可以通過右下角的 <strong>簡</strong> 按鈕切換為簡體顯示 </p></div><hr><p>以下是一些網友在安裝的過程中出現的問題。在提問題之前，先看有沒有解決方法。</p><h3 id="運行後網頁顯示代碼"><a href="#運行後網頁顯示代碼" class="headerlink" title="運行後網頁顯示代碼"></a>運行後網頁顯示代碼</h3><p>頁面只顯示 <code>extends includes/layout.pug block content #recent-posts.recent-posts include includes/recent-posts.pug include includes/pagination.pug #aside_content.aside_content include includes/aside.pug</code></p><blockquote><p>請下載安裝：<code>npm install hexo-renderer-pug hexo-renderer-stylus --save</code> or `yarn add hexo-renderer-pug hexo-renderer-stylus</p></blockquote><h3 id="配置友情鏈接報錯"><a href="#配置友情鏈接報錯" class="headerlink" title="配置友情鏈接報錯"></a>配置友情鏈接報錯</h3><p>配置友情鏈接頁面時出現報錯</p><pre class="line-numbers language-none"><code class="language-none">ERROR D:\Desktop\orxing-blog\themes\Butterfly\layout\flink.pug:2    1| .flink  &gt; 2|   each i in site.data.link    3|     p.comment-word= i.class_name    4|     .post-cards    5|       ul.md-linksCannot read property 'length' of undefinedTypeError: D:\Desktop\orxing-blog\themes\Butterfly\layout\flink.pug:2    1| .flink  &gt; 2|   each i in site.data.link    3|     p.comment-word= i.class_name    4|     .post-cards    5|       ul.md-linksCannot read property 'length' of undefined    at eval (eval at wrap (D:\Desktop\orxing-blog\node_modules\pug-runtime\wrap.js:6:10), &lt;anonymous&gt;:1890:32)    at eval (eval at wrap (D:\Desktop\orxing-blog\node_modules\pug-runtime\wrap.js:6:10), &lt;anonymous&gt;:2017:4)    at template (eval at wrap (D:\Desktop\orxing-blog\node_modules\pug-runtime\wrap.js:6:10), &lt;anonymous&gt;:10152:72)    at Theme._View.View._compiled (D:\Desktop\orxing-blog\node_modules\hexo\lib\theme\view.js:123:48)    at Theme._View.View.View.render (D:\Desktop\orxing-blog\node_modules\hexo\lib\theme\view.js:29:15)    at D:\Desktop\orxing-blog\node_modules\hexo\lib\hexo\index.js:349:21    at tryCatcher (D:\Desktop\orxing-blog\node_modules\bluebird\js\release\util.js:16:23)    at D:\Desktop\orxing-blog\node_modules\bluebird\js\release\method.js:15:34    at RouteStream._read (D:\Desktop\orxing-blog\node_modules\hexo\lib\hexo\router.js:123:3)    at RouteStream.Readable.read (_stream_readable.js:457:10)    at resume_ (_stream_readable.js:936:12)    at processTicksAndRejections (internal/process/task_queues.js:84:9)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>請檢查 <code>link.yml</code>文檔內代碼的空格</p></blockquote><h3 id="升級最新版後運行報錯"><a href="#升級最新版後運行報錯" class="headerlink" title="升級最新版後運行報錯"></a>升級最新版後運行報錯</h3><p>升級最新版本hexo g後報錯</p><pre class="line-numbers language-none"><code class="language-none">INFO  Deleted database.INFO  Start processingFATAL Something's wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.htmlTypeError: Cannot read property 'enable' of undefined    at Hexo.&lt;anonymous&gt; (/Users/qinkangdeid/Nextcloud/work/codes/personal/github/personal/qinkangdeid.github.io/themes/Butterfly/scripts/post-lazyload.js:5:23)    at Hexo.tryCatcher (/Users/qinkangdeid/Nextcloud/work/codes/personal/github/personal/qinkangdeid.github.io/node_modules/bluebird/js/release/util.js:16:23)    at Hexo.&lt;anonymous&gt; (/Users/qinkangdeid/Nextcloud/work/codes/personal/github/personal/qinkangdeid.github.io/node_modules/bluebird/js/release/method.js:15:34)    at /Users/qinkangdeid/Nextcloud/work/codes/personal/github/personal/qinkangdeid.github.io/node_modules/hexo/lib/extend/filter.js:60:50    at tryCatcher (/Users/qinkangdeid/Nextcloud/work/codes/personal/github/personal/qinkangdeid.github.io/node_modules/bluebird/js/release/util.js:16:23)    at Object.gotValue (/Users/qinkangdeid/Nextcloud/work/codes/personal/github/personal/qinkangdeid.github.io/node_modules/bluebird/js/release/reduce.js:155:18)    at Object.gotAccum (/Users/qinkangdeid/Nextcloud/work/codes/personal/github/personal/qinkangdeid.github.io/node_modules/bluebird/js/release/reduce.js:144:25)    at Object.tryCatcher (/Users/qinkangdeid/Nextcloud/work/codes/personal/github/personal/qinkangdeid.github.io/node_modules/bluebird/js/release/util.js:16:23)    at Promise._settlePromiseFromHandler (/Users/qinkangdeid/Nextcloud/work/codes/personal/github/personal/qinkangdeid.github.io/node_modules/bluebird/js/release/promise.js:517:31)    at Promise._settlePromise (/Users/qinkangdeid/Nextcloud/work/codes/personal/github/personal/qinkangdeid.github.io/node_modules/bluebird/js/release/promise.js:574:18)    at Promise._settlePromiseCtx (/Users/qinkangdeid/Nextcloud/work/codes/personal/github/personal/qinkangdeid.github.io/node_modules/bluebird/js/release/promise.js:611:10)    at _drainQueueStep (/Users/qinkangdeid/Nextcloud/work/codes/personal/github/personal/qinkangdeid.github.io/node_modules/bluebird/js/release/async.js:142:12)    at _drainQueue (/Users/qinkangdeid/Nextcloud/work/codes/personal/github/personal/qinkangdeid.github.io/node_modules/bluebird/js/release/async.js:131:9)    at Async._drainQueues (/Users/qinkangdeid/Nextcloud/work/codes/personal/github/personal/qinkangdeid.github.io/node_modules/bluebird/js/release/async.js:147:5)    at Immediate.Async.drainQueues [as _onImmediate] (/Users/qinkangdeid/Nextcloud/work/codes/personal/github/personal/qinkangdeid.github.io/node_modules/bluebird/js/release/async.js:17:14)    at processImmediate (internal/timers.js:439:21)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>請參照最新版的_config.yml, 比對後，把缺的配置複製到主題配置文件中去</p></blockquote><h3 id="wordcount-is-not-a-function-totalcount-is-not-a-function"><a href="#wordcount-is-not-a-function-totalcount-is-not-a-function" class="headerlink" title="wordcount is not a function / totalcount is not a function"></a>wordcount is not a function / totalcount is not a function</h3><p>報錯<code>wordcount is not a function</code></p><blockquote><p>請檢查是否安裝了wordcount插件 <code>npm i --save hexo-wordcount</code></p></blockquote><h3 id="升級2-0-0後運行報錯"><a href="#升級2-0-0後運行報錯" class="headerlink" title="升級2.0.0後運行報錯"></a>升級2.0.0後運行報錯</h3><p>舊版本升級到2.0.0後報錯</p><pre class="line-numbers language-none"><code class="language-none">INFO Start processingFATAL Something’s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.htmlTemplate render error: (unknown path)unexpected end of fileat Object.prettifyError (F:\hexo\nodemodules\nunjucks\src\lib.js:36:11)at Template.render (F:\hexo\node_modules\nunjucks\src\environment.js:542:21)at Environment.renderString (F:\hexo\node_modules\nunjucks\src\environment.js:380:17)at Promise.fromCallback.cb (F:\hexo\node_modules\hexo\lib\extend\tag.js:123:48)at tryCatcher (F:\hexo\node_modules\bluebird\js\release\util.js:16:23)at Function.Promise.fromNode.Promise.fromCallback (F:\hexo\node_modules\bluebird\js\release\promise.js:185:30)at Tag.render (F:\hexo\node_modules\hexo\lib\extend\tag.js:123:18)at Object.onRenderEnd (F:\hexo\node_modules\hexo\lib\hexo\post.js:280:20)at Promise.then.then.result (F:\hexo\node_modules\hexo\lib\hexo\render.js:64:19)at tryCatcher (F:\hexo\node_modules\bluebird\js\release\util.js:16:23)at Promise.settlePromiseFromHandler (F:\hexo\nodemodules\bluebird\js\release\promise.js:517:31)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>2.0.0版本以上刪掉了gallery，而引入新的gallery。所以如果有使用舊版，需刪掉或者更改寫法。</p></blockquote><h3 id="代碼渲染與實際不同"><a href="#代碼渲染與實際不同" class="headerlink" title="代碼渲染與實際不同"></a>代碼渲染與實際不同</h3><p>2.1.0 以下版本會出現的問題</p><p>代碼渲染與實際不同</p><pre class="line-numbers language-none"><code class="language-none">&lt;div&gt;aaa&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>渲染結果:</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/73515338-e6874d80-442f-11ea-9d07-725d37002985.png"></p><blockquote><p>cheerio版本錯誤，請安裝0.22.0版本</p><p>npm install <a href="mailto:cheerio@0.22.0">cheerio@0.22.0</a> –save</p></blockquote><h3 id="搜索欄在底部"><a href="#搜索欄在底部" class="headerlink" title="搜索欄在底部"></a>搜索欄在底部</h3><p>hexo deploy後搜索欄在頁面底部</p><blockquote><p>生成前先hexo clean</p></blockquote><h3 id="本地可以正常運行，但是push上去後出錯-缺失-無效"><a href="#本地可以正常運行，但是push上去後出錯-缺失-無效" class="headerlink" title="本地可以正常運行，但是push上去後出錯/缺失/無效"></a>本地可以正常運行，但是push上去後出錯/缺失/無效</h3><blockquote><ol><li>清理瀏覽器緩存</li><li>如果1無效，請確認上傳時是否有運行 hexo clean</li></ol></blockquote><h3 id="已在Hexo的配置文件設置了語言，為什麼導航欄仍然是英文"><a href="#已在Hexo的配置文件設置了語言，為什麼導航欄仍然是英文" class="headerlink" title="已在Hexo的配置文件設置了語言，為什麼導航欄仍然是英文"></a>已在Hexo的配置文件設置了語言，為什麼導航欄仍然是英文</h3><blockquote><p>請在導航的配置裏，自己修改成想要的中文</p></blockquote><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">首頁</span><span class="token punctuation">:</span> / <span class="token punctuation">|</span><span class="token punctuation">|</span> fa fa<span class="token punctuation">-</span>home<span class="token key atrule">時間軸</span><span class="token punctuation">:</span> /archives/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fa fa<span class="token punctuation">-</span>archive<span class="token key atrule">標籤</span><span class="token punctuation">:</span> /tags/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fa fa<span class="token punctuation">-</span>tags<span class="token key atrule">分類</span><span class="token punctuation">:</span> /categories/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fa fa<span class="token punctuation">-</span>folder<span class="token punctuation">-</span>open<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="運行報錯-Cannot-read-property-‘bind’-of-undefined-full-url-for-is-not-function"><a href="#運行報錯-Cannot-read-property-‘bind’-of-undefined-full-url-for-is-not-function" class="headerlink" title="運行報錯 Cannot read property ‘bind’ of undefined/full_url_for is not function"></a>運行報錯 Cannot read property ‘bind’ of undefined/full_url_for is not function</h3><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">TypeError: Cannot read property <span class="token string">'bind'</span> of undefined<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>把Hexo升級到4.0以上版本</p></blockquote><h3 id="Cannot-read-property-‘appId’-of-undefined"><a href="#Cannot-read-property-‘appId’-of-undefined" class="headerlink" title="Cannot read property ‘appId’ of undefined"></a>Cannot read property ‘appId’ of undefined</h3><p>報錯</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">  &gt; 1<span class="token punctuation">|</span> <span class="token operator">-</span>    2<span class="token punctuation">|</span>   <span class="token keyword">var</span> algolia = <span class="token string">'undefined'</span><span class="token punctuation">;</span>    3<span class="token punctuation">|</span>   <span class="token keyword">var</span> env = <span class="token keyword">process</span><span class="token punctuation">.</span>env<span class="token punctuation">;</span>    4<span class="token punctuation">|</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>algolia_search<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span>Cannot read property <span class="token string">'appId'</span> of undefined    at eval <span class="token punctuation">(</span>eval at wrap <span class="token punctuation">(</span>F:\github\Blog\blog\node_modules\pug-runtime\wrap<span class="token punctuation">.</span>js:6:10<span class="token punctuation">)</span><span class="token punctuation">,</span> &lt;anonymous&gt;:8:49<span class="token punctuation">)</span>    at template <span class="token punctuation">(</span>eval at wrap <span class="token punctuation">(</span>F:\github\Blog\blog\node_modules\pug-runtime\wrap<span class="token punctuation">.</span>js:6:10<span class="token punctuation">)</span><span class="token punctuation">,</span> &lt;anonymous&gt;:329:53<span class="token punctuation">)</span>    at _View<span class="token punctuation">.</span>_compiledSync <span class="token punctuation">(</span>F:\github\Blog\blog\node_modules\hexo\lib\theme\view<span class="token punctuation">.</span>js:132:24<span class="token punctuation">)</span>    at _View<span class="token punctuation">.</span>renderSync <span class="token punctuation">(</span>F:\github\Blog\blog\node_modules\hexo\lib\theme\view<span class="token punctuation">.</span>js:59:25<span class="token punctuation">)</span>    at F:\github\Blog\blog\node_modules\hexo\lib\plugins\helper\partial<span class="token punctuation">.</span>js:31:52    at Cache<span class="token punctuation">.</span>apply <span class="token punctuation">(</span>F:\github\Blog\blog\node_modules\hexo\node_modules\hexo-util\lib\cache<span class="token punctuation">.</span>js:27:46<span class="token punctuation">)</span>    at Object<span class="token punctuation">.</span>fragmentCache <span class="token punctuation">(</span>F:\github\Blog\blog\node_modules\hexo\lib\plugins\helper\fragment_cache<span class="token punctuation">.</span>js:11:34<span class="token punctuation">)</span>    at Object<span class="token punctuation">.</span>partial <span class="token punctuation">(</span>F:\github\Blog\blog\node_modules\hexo\lib\plugins\helper\partial<span class="token punctuation">.</span>js:31:17<span class="token punctuation">)</span>    at eval <span class="token punctuation">(</span>eval at wrap <span class="token punctuation">(</span>F:\github\Blog\blog\node_modules\pug-runtime\wrap<span class="token punctuation">.</span>js:6:10<span class="token punctuation">)</span><span class="token punctuation">,</span> &lt;anonymous&gt;:149:46<span class="token punctuation">)</span>    at template <span class="token punctuation">(</span>eval at wrap <span class="token punctuation">(</span>F:\github\Blog\blog\node_modules\pug-runtime\wrap<span class="token punctuation">.</span>js:6:10<span class="token punctuation">)</span><span class="token punctuation">,</span> &lt;anonymous&gt;:5213:93<span class="token punctuation">)</span>    at _View<span class="token punctuation">.</span>_compiled <span class="token punctuation">(</span>F:\github\Blog\blog\node_modules\hexo\lib\theme\view<span class="token punctuation">.</span>js:136:50<span class="token punctuation">)</span>    at _View<span class="token punctuation">.</span>render <span class="token punctuation">(</span>F:\github\Blog\blog\node_modules\hexo\lib\theme\view<span class="token punctuation">.</span>js:39:17<span class="token punctuation">)</span>    at F:\github\Blog\blog\node_modules\hexo\lib\hexo\index<span class="token punctuation">.</span>js:64:21    at tryCatcher <span class="token punctuation">(</span>F:\github\Blog\blog\node_modules\hexo\node_modules\bluebird\js\release\util<span class="token punctuation">.</span>js:16:23<span class="token punctuation">)</span>    at F:\github\Blog\blog\node_modules\hexo\node_modules\bluebird\js\release\method<span class="token punctuation">.</span>js:15:34    at RouteStream<span class="token punctuation">.</span>_read <span class="token punctuation">(</span>F:\github\Blog\blog\node_modules\hexo\lib\hexo\router<span class="token punctuation">.</span>js:30:5<span class="token punctuation">)</span>    at RouteStream<span class="token punctuation">.</span>Readable<span class="token punctuation">.</span>read <span class="token punctuation">(</span>_stream_readable<span class="token punctuation">.</span>js:490:10<span class="token punctuation">)</span>    at resume_ <span class="token punctuation">(</span>_stream_readable<span class="token punctuation">.</span>js:975:12<span class="token punctuation">)</span>    at processTicksAndRejections <span class="token punctuation">(</span>internal/<span class="token keyword">process</span><span class="token operator">/</span>task_queues<span class="token punctuation">.</span>js:80:21<span class="token punctuation">)</span> <span class="token punctuation">{</span>  path: <span class="token string">'F:\\github\\Blog\\blog\\themes\\Butterfly\\layout\\includes\\head.pug'</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>algolia 插件安裝後還需要配置<br>查看插件文檔配置</p></blockquote><h3 id="頂部出現-Loading"><a href="#頂部出現-Loading" class="headerlink" title="頂部出現 Loading"></a>頂部出現 Loading</h3><blockquote><p>生成前先 hexo clean</p></blockquote><a class="btn-beautify block orange right larger" href="/posts/4073eda.html" title="⚡️ Butterfly 安裝文檔(六) 進階教程"><i class="far fa-hand-point-right"></i><span>⚡️ Butterfly 安裝文檔(六) 進階教程</span></a><h3 id="點擊中文目錄報錯的問題"><a href="#點擊中文目錄報錯的問題" class="headerlink" title="點擊中文目錄報錯的問題"></a>點擊中文目錄報錯的問題</h3><p>這種情況出現在主題為 <code>3.0.0</code>以下版本，升級主題就行</p>]]></content>
      
      
      <categories>
          
          <category> Docs文檔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Hexo </tag>
            
            <tag> 主題 </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly 安裝文檔(四) 主題配置-2</title>
      <link href="/posts/ceeb73f.html"/>
      <url>/posts/ceeb73f.html</url>
      
        <content type="html"><![CDATA[<div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>📖  本教程更新於 2022 年 02 月 13 日，教程的內容針對最新<strong>穩定版</strong>而更新（如果你是舊版，教程會有些出入，請留意）</p><p>🦋  Butterfly 已經更新到 <a href="https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.1.0">4.1.0</a></p></div><div class="note green icon flat"><i class="note-icon fas fa-rocket"></i><p> 📚  文檔目錄</p><p><a href="#">Post not found: Butterfly-安裝文檔-一-快速開始 🚀 快速開始</a> - <a href="#">Post not found: Butterfly-安裝文檔-二-主題頁面 📑 主題頁面</a> - <a href="#">Post not found: Butterfly-安裝文檔-三-主題配置-1 🛠 主題配置-1</a> - <a href="#">Post not found: Butterfly-安裝文檔-四-主題配置-2 ⚔️ 主題配置-2</a> - <a href="#">Post not found: Butterfly-安裝文檔-五-主題問答 ❓ 主題問答</a> - <a href="#">Post not found: Butterfly-安裝文檔-六-進階教程 ⚡️ 進階教程</a> - <a href="#">Post not found: Butterfly-安裝文檔-七-更新日誌 ✨ 更新日誌</a> - <a href="#">Post not found: Butterfly-打賞 🤞 打賞</a></p></div><div class="note orange icon flat"><i class="note-icon fas fa-magic"></i><p>你可以通過右下角的 <strong>簡</strong> 按鈕切換為簡體顯示 </p></div><hr><h2 id="評論"><a href="#評論" class="headerlink" title="評論"></a>評論</h2><div class="tabs" id="comments"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#comments-1">通用設置</button></li><li class="tab"><button type="button" data-href="#comments-2">Disqus</button></li><li class="tab"><button type="button" data-href="#comments-3">Disqusjs</button></li><li class="tab"><button type="button" data-href="#comments-4">livere（來必力）</button></li><li class="tab"><button type="button" data-href="#comments-5">Gitalk</button></li><li class="tab"><button type="button" data-href="#comments-6">Valine</button></li><li class="tab"><button type="button" data-href="#comments-7">Waline</button></li><li class="tab"><button type="button" data-href="#comments-8">Utterances</button></li><li class="tab"><button type="button" data-href="#comments-9">Facebook Comments</button></li><li class="tab"><button type="button" data-href="#comments-10">Twikoo</button></li><li class="tab"><button type="button" data-href="#comments-11">Giscus</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="comments-1"><p>從3.0.0開始，開啟評論需要在<code>comments-use</code>中填寫你需要的評論。</p><p>支持雙評論顯示，只需要配置兩個評論（第一個為默認顯示）</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">comments</span><span class="token punctuation">:</span>  <span class="token comment"># Up to two comments system, the first will be shown as default</span>  <span class="token comment"># Choose: Disqus/Disqusjs/Livere/Gitalk/Valine/Waline/Utterances/Facebook Comments/Twikoo</span>  <span class="token key atrule">use</span><span class="token punctuation">:</span> Valine<span class="token punctuation">,</span>Disqus  <span class="token key atrule">text</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># Display the comment name next to the button</span>  <span class="token comment"># lazyload: The comment system will be load when comment element enters the browser's viewport.</span>  <span class="token comment"># If you set it to true, the comment count will be invalid</span>  <span class="token key atrule">lazyload</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">count</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># Display comment count in top_img</span>  <span class="token key atrule">card_post_count</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># Display comment count in Home Page</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>參數</th><th>解釋</th></tr></thead><tbody><tr><td>use</td><td>使用的評論（請注意，最多支持兩個，如果不需要請留空）<br><em>注意：雙評論不能是 Disqus 和 Disqusjs 一起，由於其共用同一個 ID，會出錯</em></td></tr><tr><td>text</td><td>是否顯示評論服務商的名字</td></tr><tr><td>lazyload</td><td>是否為評論開啟lazyload，開啟後，只有滾動到評論位置時才會加載評論所需要的資源（開啟lazyload後，評論數將不顯示）</td></tr><tr><td>count</td><td>是否在文章頂部顯示評論數 <br> livere、Giscus 和 utterances 不支持評論數顯示</td></tr><tr><td>card_post_count</td><td>是否在首頁文章卡片顯示評論數<br>gitalk、livere 、Giscus 和 utterances 不支持評論數顯示</td></tr></tbody></table><blockquote><p>單評論</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-single-comments.png" alt="image-20200731172506907"></p><blockquote><p>雙評論</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-double-comments.png" alt="image-20200731173006128"></p><blockquote><p>顯示text</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-double-comments.png" alt="image-20200731173006128"></p><blockquote><p>不顯示text</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-double-comments-not-text.png" alt="image-20200731173143712"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="comments-2"><p>註冊 <a href="https://disqus.com/">disqus</a>，配置你自己的 disqus，然後在<code>Butterfly</code>裏開啟它。</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">disqus</span><span class="token punctuation">:</span>  shortname<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-disqus-new.png" alt="image-20201027211418161"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="comments-3"><p>與Disqus一樣，但由於Disqus在中國大陸無法訪問， 使用Disqusjs可以在無法訪問Disqus時顯示評論。具體可參考<a href="https://github.com/SukkaW/DisqusJS">Disqusjs</a>。</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">disqusjs</span><span class="token punctuation">:</span>  <span class="token key atrule">shortname</span><span class="token punctuation">:</span>  <span class="token key atrule">apikey</span><span class="token punctuation">:</span>  option<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>當無法訪問 Disqus 時，會顯示</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-disqusjs-new.png" alt="image-20201027212543851"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="comments-4"><p>註冊<a href="https://livere.com/">來必力</a>，配置你自己的來必力設置，然後在<code>Butterfly</code>裏開啟它。</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">livere</span><span class="token punctuation">:</span>  uid<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>laibili 的 uid 你能在這裏找到:</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-laibili.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-laibili_2-new.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="comments-5"><p>遵循 <a href="https://github.com/gitalk/gitalk">gitalk</a>的指示去獲取你的 github Oauth 應用的 client id 和 secret 值。以及查看它的相關配置説明。</p><p>然後修改 <code>主題配置文件</code>:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">gitalk</span><span class="token punctuation">:</span>  <span class="token key atrule">client_id</span><span class="token punctuation">:</span>  <span class="token key atrule">client_secret</span><span class="token punctuation">:</span>  <span class="token key atrule">repo</span><span class="token punctuation">:</span>  <span class="token key atrule">owner</span><span class="token punctuation">:</span>  <span class="token key atrule">admin</span><span class="token punctuation">:</span>  option<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-gitalk-new.png" alt="image-20201027212704930"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="comments-6"><p>遵循 <a href="https://github.com/xCss/Valine">Valine</a>的指示去配置你的 LeanCloud 應用。以及查看相應的配置説明。</p><p>然後修改 <code>主題配置文件</code>:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">valine</span><span class="token punctuation">:</span>  <span class="token key atrule">appId</span><span class="token punctuation">:</span> <span class="token comment"># leancloud application app id</span>  <span class="token key atrule">appKey</span><span class="token punctuation">:</span> <span class="token comment"># leancloud application app key</span>  <span class="token key atrule">avatar</span><span class="token punctuation">:</span> monsterid <span class="token comment"># gravatar style https://valine.js.org/#/avatar</span>  <span class="token key atrule">serverURLs</span><span class="token punctuation">:</span> <span class="token comment"># This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span>  <span class="token key atrule">bg</span><span class="token punctuation">:</span> <span class="token comment"># valine background</span>  <span class="token key atrule">visitor</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  option<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Valine於 v1.4.5 開始支持自定義表情，如果你需要自行配置，請在<code>emojiCDN</code>配置表情 CDN。</p><p>同時在Hexo 工作目錄下的<code>source/_data/</code>創建一個json文件<code>valine.json</code>,等同於 Valine 需要配置的<code>emojiMaps</code>，<code>valine.json</code>配置方式可參考如下</p><blockquote><p>valine.json</p></blockquote><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span> <span class="token property">"tv_doge"</span><span class="token operator">:</span> <span class="token string">"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png"</span><span class="token punctuation">,</span><span class="token property">"tv_親親"</span><span class="token operator">:</span> <span class="token string">"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png"</span><span class="token punctuation">,</span><span class="token property">"tv_偷笑"</span><span class="token operator">:</span> <span class="token string">"bb690d4107620f1c15cff29509db529a73aee261.png"</span><span class="token punctuation">,</span><span class="token property">"tv_再見"</span><span class="token operator">:</span> <span class="token string">"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png"</span><span class="token punctuation">,</span><span class="token property">"tv_冷漠"</span><span class="token operator">:</span> <span class="token string">"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png"</span><span class="token punctuation">,</span><span class="token property">"tv_發怒"</span><span class="token operator">:</span> <span class="token string">"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png"</span><span class="token punctuation">,</span><span class="token property">"tv_發財"</span><span class="token operator">:</span> <span class="token string">"34db290afd2963723c6eb3c4560667db7253a21a.png"</span><span class="token punctuation">,</span><span class="token property">"tv_可愛"</span><span class="token operator">:</span> <span class="token string">"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png"</span><span class="token punctuation">,</span><span class="token property">"tv_吐血"</span><span class="token operator">:</span> <span class="token string">"09dd16a7aa59b77baa1155d47484409624470c77.png"</span><span class="token punctuation">,</span><span class="token property">"tv_呆"</span><span class="token operator">:</span> <span class="token string">"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png"</span><span class="token punctuation">,</span><span class="token property">"tv_嘔吐"</span><span class="token operator">:</span> <span class="token string">"9f996894a39e282ccf5e66856af49483f81870f3.png"</span><span class="token punctuation">,</span><span class="token property">"tv_困"</span><span class="token operator">:</span> <span class="token string">"241ee304e44c0af029adceb294399391e4737ef2.png"</span><span class="token punctuation">,</span><span class="token property">"tv_壞笑"</span><span class="token operator">:</span> <span class="token string">"1f0b87f731a671079842116e0991c91c2c88645a.png"</span><span class="token punctuation">,</span><span class="token property">"tv_大佬"</span><span class="token operator">:</span> <span class="token string">"093c1e2c490161aca397afc45573c877cdead616.png"</span><span class="token punctuation">,</span><span class="token property">"tv_大哭"</span><span class="token operator">:</span> <span class="token string">"23269aeb35f99daee28dda129676f6e9ea87934f.png"</span><span class="token punctuation">,</span><span class="token property">"tv_委屈"</span><span class="token operator">:</span> <span class="token string">"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png"</span><span class="token punctuation">,</span><span class="token property">"tv_害羞"</span><span class="token operator">:</span> <span class="token string">"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png"</span><span class="token punctuation">,</span><span class="token property">"tv_尷尬"</span><span class="token operator">:</span> <span class="token string">"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png"</span><span class="token punctuation">,</span><span class="token property">"tv_微笑"</span><span class="token operator">:</span> <span class="token string">"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png"</span><span class="token punctuation">,</span><span class="token property">"tv_思考"</span><span class="token operator">:</span> <span class="token string">"90cf159733e558137ed20aa04d09964436f618a1.png"</span><span class="token punctuation">,</span><span class="token property">"tv_驚嚇"</span><span class="token operator">:</span> <span class="token string">"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"</span><span class="token punctuation">}</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-valine.png"></p><blockquote><p>default_avatar</p></blockquote><table><thead><tr><th>參數</th><th>效果</th></tr></thead><tbody><tr><td>留空（默認）</td><td><img src="https://www.gravatar.com/avatar/00000000000000000000000000000000"></td></tr><tr><td>mp</td><td><img src="https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp"></td></tr><tr><td>identicon</td><td><img src="https://www.gravatar.com/avatar/00000000000000000000000000000000?d=identicon"></td></tr><tr><td>monsterid</td><td><img src="https://www.gravatar.com/avatar/00000000000000000000000000000000?d=monsterid"></td></tr><tr><td>wavatar</td><td><img src="https://www.gravatar.com/avatar/00000000000000000000000000000000?d=wavatar"></td></tr><tr><td>retro</td><td><img src="https://www.gravatar.com/avatar/00000000000000000000000000000000?d=retro"></td></tr><tr><td>robohash</td><td><img src="https://www.gravatar.com/avatar/00000000000000000000000000000000?d=robohash"></td></tr><tr><td>blank</td><td><img src="https://www.gravatar.com/avatar/00000000000000000000000000000000?d=blank&amp;f=y"></td></tr><tr><td>404</td><td><img src="https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&amp;f=y"></td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="comments-7"><p>Waline - 一款從 Valine 衍生的帶後端評論系統。可以將 Waline 等價成 With backend Valine。</p><p>具體配置可參考 <a href="https://waline.js.org/">waline 文檔</a></p><p>然後修改 <code>主題配置文件</code>:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">waline</span><span class="token punctuation">:</span>  <span class="token key atrule">serverURL</span><span class="token punctuation">:</span> <span class="token comment"># Waline server address url</span>  <span class="token key atrule">bg</span><span class="token punctuation">:</span> <span class="token comment"># waline background</span>  <span class="token key atrule">visitor</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  option<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由於 waline 將會逐步去掉 <code>emojiCDN</code> 和 <code>emojiMaps</code>, 舊的添加表情方法已被棄用（從 3.7.8 開始）</p><p>請參看 waline 的<a href="https://waline.js.org/guide/client/emoji.html">添加表情文檔</a>進行配置</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-valine.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="comments-8"><p>與Gitalk一樣，基於 GitHub issues 的評論工具。相對於Gitalk,其相對需要權限較少。具體配置可參考<a href="https://utteranc.es/">Utterances</a>。</p><p>修改 <code>主題配置文件</code>:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">utterances</span><span class="token punctuation">:</span>  <span class="token key atrule">repo</span><span class="token punctuation">:</span>  <span class="token comment"># 可選 pathname/url/title/og:title</span>  <span class="token key atrule">issue_term</span><span class="token punctuation">:</span> pathname  <span class="token comment"># 可選 github-light/github-dark/github-dark-orange/icy-dark/dark-blue/photon-dark</span>  <span class="token key atrule">light_theme</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>light  <span class="token key atrule">dark_theme</span><span class="token punctuation">:</span> photon<span class="token punctuation">-</span>dark<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-Utterances.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="comments-9"><p><code>Facebook Comments</code>是Facebook提供的評論插件，需要登陸Facebook纔可評論。</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Facebook Comments Plugin</span><span class="token comment"># https://developers.facebook.com/docs/plugins/comments/</span><span class="token key atrule">facebook_comments</span><span class="token punctuation">:</span>  <span class="token key atrule">app_id</span><span class="token punctuation">:</span>   <span class="token key atrule">user_id</span><span class="token punctuation">:</span> <span class="token comment"># optional</span>  <span class="token key atrule">pageSize</span><span class="token punctuation">:</span> <span class="token number">10</span> <span class="token comment"># The number of comments to show</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> social <span class="token comment"># social/time/reverse_time</span>  <span class="token key atrule">lang</span><span class="token punctuation">:</span> en_US <span class="token comment"># Language en_US/zh_CN/zh_TW and so on</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-butterfly-docs-facebook-comments.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="comments-10"><p><code>Twikoo</code> 是一個簡潔、安全、無後端的靜態網站評論系統，基於<a href="https://curl.qcloud.com/KnnJtUom">騰訊雲開發</a>。</p><p>具體如何配置評論，請查看 <a href="https://twikoo.js.org/quick-start.html#%E7%8E%AF%E5%A2%83%E5%88%9D%E5%A7%8B%E5%8C%96">Twikoo文檔</a></p><p>你只需要把獲取到的 <code>環境ID (envId)</code> 填寫到配置上去就行</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">twikoo</span><span class="token punctuation">:</span>  <span class="token key atrule">envId</span><span class="token punctuation">:</span>  <span class="token key atrule">region</span><span class="token punctuation">:</span>  <span class="token key atrule">visitor</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  option<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>參數</th><th>解釋</th></tr></thead><tbody><tr><td>envId</td><td>環境 ID</td></tr><tr><td>region</td><td>環境地域，默認為 ap-shanghai，如果您的環境地域不是上海，需傳此參數</td></tr><tr><td>visitor</td><td>是否顯示文章閲讀數</td></tr><tr><td>option</td><td>可選配置</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-twikoo-comments.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="comments-11"><p>一個基於 <em>GitHub Discussions</em> 的評論</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Giscus</span><span class="token comment"># https://giscus.app/</span><span class="token key atrule">giscus</span><span class="token punctuation">:</span>  <span class="token key atrule">repo</span><span class="token punctuation">:</span>  <span class="token key atrule">repo_id</span><span class="token punctuation">:</span>  <span class="token key atrule">category_id</span><span class="token punctuation">:</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span>    <span class="token key atrule">light</span><span class="token punctuation">:</span> light    <span class="token key atrule">dark</span><span class="token punctuation">:</span> dark  option<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>具體配置的意思，請參考 Giscus 的<a href="https://giscus.app/zh-TW">文檔</a></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN@m2/img/hexo-theme-butterfly-docs-giscus.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="在綫聊天"><a href="#在綫聊天" class="headerlink" title="在綫聊天"></a>在綫聊天</h2><p>從3.0開始，Butterfly主題內置了多種在綫聊天工具。你可以選擇開啟一種，方便你與訪客的交流。</p><div class="tabs" id="online-chat"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#online-chat-1">通用設置</button></li><li class="tab"><button type="button" data-href="#online-chat-2">chatra</button></li><li class="tab"><button type="button" data-href="#online-chat-3">tidio</button></li><li class="tab"><button type="button" data-href="#online-chat-4">daovoice</button></li><li class="tab"><button type="button" data-href="#online-chat-5">Gitter</button></li><li class="tab"><button type="button" data-href="#online-chat-6">crisp</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="online-chat-1"><p>這些工具都提供了一個按鈕可以打開/關閉聊天窗口。<br>主題也提供了一個集合主題特色的按鈕來替換這些工具本身的按鈕，這個聊天按鈕將會出現在右下角裏。<br>你只需要把<code>chat_btn</code>打開就行。</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Chat Button [recommend]</span><span class="token comment"># It will create a button in the bottom right corner of website, and hide the origin button</span><span class="token key atrule">chat_btn</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-chat-button.png"></p><p>為了不影響訪客的體驗，主題提供一個<code>chat_hide_show</code>配置<br>設為<code>true</code>後，使用工具提供的按鈕時，只有向上滾動才會顯示聊天按鈕，向下滾動時會隱藏按鈕。</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># The origin chat button is displayed when scrolling up, and the button is hidden when scrolling down</span><span class="token key atrule">chat_hide_show</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div class="note info flat"><p>如果使用工具自帶的聊天按鈕，按鈕位置可能會遮擋右下角圖標，請配置<code>rightside-bottom</code>調正右下角圖標位置</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="online-chat-2"><p>配置chatra,需要知道<code>Public key</code></p><p>打開<a href="https://chatra.com/">chatra</a>並註冊賬號。<br>你可以在<code>Preferences</code>中找到<code>Public key</code></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-chat-chatra-id.png"></p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># chatra</span><span class="token comment"># https://chatra.io/</span><span class="token key atrule">chatra</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span> xxxxxxxx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>chatra</code>的樣式你可以<code>Chat Widget</code>自行配置</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-chat-chatra-ui-settings.png"></p><blockquote><p>Demo</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-chat-chatra-ui-demo.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="online-chat-3"><p>配置tidio,需要知道<code>Public key</code></p><p>打開<a href="https://www.tidio.com/">tidio</a>並註冊賬號。<br>你可以在<code>Preferences &gt; Developer</code>中找到<code>Public key</code></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-chat-tidio-id.png"></p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># tidio</span><span class="token comment"># https://www.tidio.com/</span><span class="token key atrule">tidio</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">public_key</span><span class="token punctuation">:</span> XXXX<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>tidio</code>的樣式你可以<code>Channels</code>自行配置</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-chat-tidio-setting.png"></p><blockquote><p>Demo</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-chat-tidio-demo.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="online-chat-4"><p>打開<a href="http://daovoice.io/">daovoice</a>和註冊帳號<br>找到你的<code>app id</code></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-chat-daovoice-appid.png"></p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># daovoice</span><span class="token comment"># http://daovoice.io/</span><span class="token key atrule">daovoice</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">app_id</span><span class="token punctuation">:</span> xxxxx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可在<code>聊天設置</code>裏配置聊天按鈕等樣式</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-chat-daovoice-ui.png"></p><blockquote><p>Demo</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-chat-daovoice-demo.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="online-chat-5"><p>打開<a href="https://gitter.im/">Gitter</a>和註冊賬號<br>創建一個<code>community</code>或者<code>room</code>,複製名稱到設置去</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-chat-gitter-setting.png"></p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># gitter</span><span class="token comment"># https://gitter.im/</span><span class="token key atrule">gitter</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">room</span><span class="token punctuation">:</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>Demo</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-chat-gitter-ui.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="online-chat-6"><p>打開<a href="https://crisp.chat/en/">crisp</a>並註冊帳號</p><p>找到需要的網站ID</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># crisp</span><span class="token comment"># https://crisp.chat/en/</span><span class="token key atrule">crisp</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">website_id</span><span class="token punctuation">:</span> xxxxxxxx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-buttefly-docs-chat-crisp.png" alt="image-20200731183023863"></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-crisp-demo.png" alt="image-20200731183444781"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h2><blockquote><p>只能選擇一個分享服務商</p></blockquote><div class="tabs" id="分享"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分享-1">AddThis</button></li><li class="tab"><button type="button" data-href="#分享-2">Sharejs</button></li><li class="tab"><button type="button" data-href="#分享-3">Addtoany</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分享-1"><blockquote><p>訪問 <a href="https://www.addthis.com/">AddThis</a> 官網<br>找到你的 pub-id</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-addthis.jpg"></p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">addThis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># or false</span>  <span class="token key atrule">pubid</span><span class="token punctuation">:</span> 你的pub<span class="token punctuation">-</span>id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分享-2"><p>如果你不知道 <a href="https://github.com/overtrue/share.js/">sharejs</a>，看看它的説明。</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">sharejs</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">sites</span><span class="token punctuation">:</span> facebook<span class="token punctuation">,</span>twitter<span class="token punctuation">,</span>wechat<span class="token punctuation">,</span>weibo<span class="token punctuation">,</span>qq  <span class="token comment">#想要顯示的內容</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-sharejs.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分享-3"><p>可以到<a href="https://www.addtoany.com/">addtoany</a>查看使用説明</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">addtoany</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">item</span><span class="token punctuation">:</span> facebook<span class="token punctuation">,</span>twitter<span class="token punctuation">,</span>wechat<span class="token punctuation">,</span>sina_weibo<span class="token punctuation">,</span>facebook_messenger<span class="token punctuation">,</span>email<span class="token punctuation">,</span>copy_link<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-addtoany.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="搜索系統"><a href="#搜索系統" class="headerlink" title="搜索系統"></a>搜索系統</h2><div class="tabs" id="search"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#search-1"><i class="fab fa-algolia"></i>Algolia</button></li><li class="tab"><button type="button" data-href="#search-2"><i class="fas fa-search"></i>本地搜索</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="search-1"><blockquote><p>記得運行 hexo clean</p></blockquote><ol><li><p>你需要安裝 <a href="https://github.com/oncletom/hexo-algolia">hexo-algolia</a>或 <a href="https://github.com/LouisBarranqueiro/hexo-algoliasearch">hexo-algoliasearch</a>. 根據它們的説明文檔去做相應的配置。</p></li><li><p>修改 <code>主題配置文件</code></p></li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">algolia_search</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">hits</span><span class="token punctuation">:</span>    <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">6</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="search-2"><blockquote><p>記得運行 hexo clean</p></blockquote><ol><li><p>你需要安裝 <a href="https://github.com/PaicHyperionDev/hexo-generator-search">hexo-generator-search</a>，根據它的文檔去做相應配置</p></li><li><p>修改 <code>主題配置文件</code></p></li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">local_search</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="網站驗證"><a href="#網站驗證" class="headerlink" title="網站驗證"></a>網站驗證</h2><p>如果需要搜索引擎收錄網站，可能需要登錄對應搜索引擎的管理平臺進行提交。<br>各自的驗證碼可從各自管理平臺拿到</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">site_verification</span><span class="token punctuation">:</span>  <span class="token comment"># - name: google_site_verification</span>  <span class="token comment">#   content: xxxxxx</span>  <span class="token comment"># - name: baidu_site_verification</span>  <span class="token comment">#   content: xxxxxxx</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="分析統計"><a href="#分析統計" class="headerlink" title="分析統計"></a>分析統計</h2><div class="tabs" id="分析統計"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分析統計-1">百度統計</button></li><li class="tab"><button type="button" data-href="#分析統計-2">谷歌分析</button></li><li class="tab"><button type="button" data-href="#分析統計-3">CNZZ分析</button></li><li class="tab"><button type="button" data-href="#分析統計-4">Cloudflare分析</button></li><li class="tab"><button type="button" data-href="#分析統計-5">Microsoft Clarity</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分析統計-1"><ol><li><p>登錄百度統計的<a href="https://tongji.baidu.com/web/welcome/login">官方網站</a></p></li><li><p>找到你百度統計的統計代碼</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-baidu-tongji.jpg"></p><ol start="3"><li>修改 <code>主題配置文件</code></li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">baidu_analytics</span><span class="token punctuation">:</span> 你的代碼<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分析統計-2"><ol><li><p>登錄谷歌分析的<a href="https://www.google.com/analytics/">官方網站</a></p></li><li><p>找到你的谷歌分析的跟蹤 ID</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-google-analytics.jpg"></p><ol start="3"><li>修改 <code>主題配置文件</code></li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">google_analytics</span><span class="token punctuation">:</span> 你的代碼 <span class="token comment"># 通常以`UA-`打頭</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分析統計-3"><ol><li>登錄CNZZ分析的<a href="https://www.umeng.com/">官方網站</a></li><li>找到 <code>站點設置 - 獲取代碼</code></li><li>找到你的 <code>web_id</code></li></ol><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-CNZZ-analysic.png"></p><ol start="4"><li>修改 <code>主題配置文件</code></li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">cnzz_analytics</span><span class="token punctuation">:</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分析統計-4"><ol><li>登錄 Cloudflare 分析的<a href="https://www.cloudflare.com/zh-tw/web-analytics/">官方網站</a></li><li>找到 <code>JavaScript 程式碼片段</code></li><li>找到你的 <code>token</code></li></ol><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-cloudflare-analytics-id.png" alt="image-20201230195158742"></p><ol start="4"><li><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Cloudflare Analytics</span><span class="token comment"># https://www.cloudflare.com/zh-tw/web-analytics/</span>cloudflare_analytics<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分析統計-5"><ol><li><p>登錄 Clarity 的<a href="https://clarity.microsoft.com/">官方網站</a></p></li><li><p>創建 <code>PROJECT</code></p></li><li><p>找到你的 <code>ID</code><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-clarity-id.png" alt="image-20201230195541443"></p></li><li><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Microsoft Clarity</span><span class="token comment"># https://clarity.microsoft.com/</span>microsoft_clarity<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="廣告"><a href="#廣告" class="headerlink" title="廣告"></a>廣告</h2><div class="tabs" id="廣告"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#廣告-1">谷歌廣告</button></li><li class="tab"><button type="button" data-href="#廣告-2">手動廣告配置</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="廣告-1"><p>主題已集成谷歌廣告（自動廣告）</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">google_adsense</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">auto_ads</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">js</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js  <span class="token key atrule">client</span><span class="token punctuation">:</span> <span class="token comment"># 填入個人識別碼</span>  <span class="token key atrule">enable_page_level_ads</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-google-adsense1.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="廣告-2"><p>主題預留了三個位置可供插入廣告，分別為主頁文章(每三篇文章出現廣告)/aside公告之後/文章頁打賞之後。<br>把html代碼填寫到對應的位置</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">ad</span><span class="token punctuation">:</span>  <span class="token key atrule">index</span><span class="token punctuation">:</span>  <span class="token key atrule">aside</span><span class="token punctuation">:</span>  post<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>例如:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">index</span><span class="token punctuation">:</span> &lt;ins class="adsbygoogle" style="display<span class="token punctuation">:</span>block" data<span class="token punctuation">-</span>ad<span class="token punctuation">-</span>format="fluid" data<span class="token punctuation">-</span>ad<span class="token punctuation">-</span>layout<span class="token punctuation">-</span>key="xxxxxxxxxxxx" data<span class="token punctuation">-</span>ad<span class="token punctuation">-</span>client="ca<span class="token punctuation">-</span>pub<span class="token punctuation">-</span>xxxxxxxxxx" data<span class="token punctuation">-</span>ad<span class="token punctuation">-</span>slot="xxxxxxxxxx"<span class="token punctuation">&gt;</span>&lt;/ins<span class="token punctuation">&gt;</span>&lt;script<span class="token punctuation">&gt;</span>(adsbygoogle=window.adsbygoogle<span class="token punctuation">|</span><span class="token punctuation">|</span><span class="token punctuation">[</span><span class="token punctuation">]</span>).push(<span class="token punctuation">{</span><span class="token punctuation">}</span>)&lt;/script<span class="token punctuation">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-ad-post.png"><br><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-ad-index.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="Math-數學"><a href="#Math-數學" class="headerlink" title="Math 數學"></a>Math 數學</h2><div class="tabs" id="math"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#math-1">MathJax</button></li><li class="tab"><button type="button" data-href="#math-2">KaTeX</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="math-1"><div class="note warning flat"><p>不要在標題裏使用 mathjax 語法，toc 目錄不一定能正確顯示 mathjax，可能顯示 mathjax 代碼</p></div><blockquote><p>建議使用 KaTex 獲得更好的效果，下文有介紹！</p></blockquote><p>修改 <code>主題配置文件</code>:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">mathjax</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># true 表示每一頁都加載mathjax.js</span>  <span class="token comment"># false 需要時加載，須在使用的Markdown Front-matter 加上 mathjax: true</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>如果 <code>per_page</code> 設為 <code>true</code>,則每一頁都會加載 Mathjax 服務。設為 <code>false</code>，則需要在文章 <code>Front-matter</code> 添加 <code>mathjax: true</code>,對應的文章才會加載 Mathjax 服務。</p></blockquote><p>然後你需要修改一下默認的 <code>markdown</code> 渲染引擎來實現 MathJax 的效果。</p><p>查看: <a href="https://www.npmjs.com/package/hexo-renderer-kramed">hexo-renderer-kramed</a></p><p>以下操作在你 hexo 博客的目錄下 (<strong>不是 Butterfly 的目錄</strong>):</p><ol><li><p>安裝插件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> uninstall hexo-renderer-marked --save<span class="token function">npm</span> <span class="token function">install</span> hexo-renderer-kramed --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>配置 hexo 根目錄的配置文件</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">kramed</span><span class="token punctuation">:</span>  <span class="token key atrule">gfm</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">pedantic</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">sanitize</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">tables</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">breaks</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">smartLists</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">smartypants</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><p>效果：</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-mathjax-2.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="math-2"><div class="note warning flat"><p>不要在標題裏使用 KaTeX 語法，toc 目錄不能正確顯示 KaTeX。</p></div><p>首先禁用<code>MathJax</code>（如果你配置過 MathJax 的話），然後修改你的<code>主題配置文件</code>以便加載<code>katex.min.css</code>:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">katex</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># true 表示每一頁都加載katex.js</span>  <span class="token comment"># false 需要時加載，須在使用的Markdown Front-matter 加上 katex: true</span>  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">hide_scrollbar</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你不需要添加 <code>katex.min.js</code> 來渲染數學方程。相應的你需要卸載你之前的 hexo 的 markdown 渲染器，然後安裝其它插件。</p><div class="tabs" id="katex-plugins"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#katex-plugins-1">hexo-renderer-markdown-it 【建議】</button></li><li class="tab"><button type="button" data-href="#katex-plugins-2">hexo-renderer-markdown-it-plus</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="katex-plugins-1"><p>卸載掉 marked 插件，安裝 <a href="https://github.com/hexojs/hexo-renderer-markdown-it">hexo-renderer-markdown-it</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> un hexo-renderer-marked --save <span class="token comment"># 如果有安裝這個的話，卸載</span><span class="token function">npm</span> un hexo-renderer-kramed --save <span class="token comment"># 如果有安裝這個的話，卸載</span><span class="token function">npm</span> i hexo-renderer-markdown-it --save <span class="token comment"># 需要安裝這個渲染插件</span><span class="token function">npm</span> <span class="token function">install</span> @neilsustc/markdown-it-katex --save <span class="token comment">#需要安裝這個katex插件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在 hexo 的根目錄的 <code>_config.yml</code> 中配置</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">markdown</span><span class="token punctuation">:</span>  <span class="token key atrule">plugins</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">plugin</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">'@neilsustc/markdown-it-katex'</span>      <span class="token key atrule">options</span><span class="token punctuation">:</span>        <span class="token key atrule">strict</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如需配置其它參數，請參考 <a href="https://katex.org/docs/options.html">katex 官網</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="katex-plugins-2"><blockquote><p>注意，此方法生成的 katex 沒有斜體</p></blockquote><p>卸載掉 marked 插件，然後安裝新的<code>hexo-renderer-markdown-it-plus</code>:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 替換 `hexo-renderer-kramed` 或者 `hexo-renderer-marked` 等hexo的markdown渲染器</span><span class="token comment"># 你可以在你的package.json裏找到hexo的markdwon渲染器，並將其卸載</span><span class="token function">npm</span> un hexo-renderer-marked --save<span class="token comment"># or</span><span class="token function">npm</span> un hexo-renderer-kramed --save<span class="token comment"># 然後安裝 `hexo-renderer-markdown-it-plus`</span><span class="token function">npm</span> i @upupming/hexo-renderer-markdown-it-plus --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意到 <a href="https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus"><code>hexo-renderer-markdown-it-plus</code></a>已經無人持續維護, 所以我們使用 <a href="https://github.com/upupming/hexo-renderer-markdown-it-plus"><code>@upupming/hexo-renderer-markdown-it-plus</code></a>。 這份 fork 的代碼使用了 <a href="https://github.com/yzhang-gh/markdown-it-katex"><code>@neilsustc/markdown-it-katex</code></a>同時它也是 VSCode 的插件 <a href="https://github.com/yzhang-gh/vscode-markdown">Markdown All in One</a>所使用的, 所以我們可以獲得最新的 KaTex 功能例如 <code>\tag{}</code>。</p><p>你還可以通過 <a href="https://github.com/yzhang-gh/markdown-it-katex"><code>@neilsustc/markdown-it-katex</code></a>控制 KaTeX 的設置，所有可配置的選項參見 <a href="https://katex.org/docs/options.html%E3%80%82">https://katex.org/docs/options.html。</a> 比如你想要禁用掉 KaTeX 在命令行上輸出的宂長的警告信息，你可以在根目錄的 <code>_config.yml</code> 中使用下面的配置將 <code>strict</code> 設置為 false:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">markdown_it_plus</span><span class="token punctuation">:</span>  <span class="token key atrule">plugins</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">plugin</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">'@neilsustc/markdown-it-katex'</span>      <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token key atrule">options</span><span class="token punctuation">:</span>        <span class="token key atrule">strict</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>當然，你還可以利用這個特性來定義一些自己常用的 <code>macros</code>。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>因為 KaTeX 更快更輕量，因此沒有 MathJax 的功能多（比如右鍵菜單）。為那些使用 MathJax 的用戶，主題也內置了 katex 的 <a href="https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex">複製</a> 功能。</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-katex.gif"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="美化-特效"><a href="#美化-特效" class="headerlink" title="美化/特效"></a>美化/特效</h2><h3 id="自定義主題色"><a href="#自定義主題色" class="headerlink" title="自定義主題色"></a>自定義主題色</h3><p>可以修改大部分UI顏色</p><p>修改 <code>主題配置文件</code>，比如：</p><blockquote><p>顏色值必須被雙引號包裹，就像<code>"#000"</code>而不是<code>#000</code>。否則將會在構建的時候報錯！</p></blockquote><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">theme_color</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">main</span><span class="token punctuation">:</span> <span class="token string">"#49B1F5"</span>  <span class="token key atrule">paginator</span><span class="token punctuation">:</span> <span class="token string">"#00c4b6"</span>  <span class="token key atrule">button_hover</span><span class="token punctuation">:</span> <span class="token string">"#FF7242"</span>  <span class="token key atrule">text_selection</span><span class="token punctuation">:</span> <span class="token string">"#00c4b6"</span>  <span class="token key atrule">link_color</span><span class="token punctuation">:</span> <span class="token string">"#99a9bf"</span>  <span class="token key atrule">meta_color</span><span class="token punctuation">:</span> <span class="token string">"#858585"</span>  <span class="token key atrule">hr_color</span><span class="token punctuation">:</span> <span class="token string">"#A4D8FA"</span>  <span class="token key atrule">code_foreground</span><span class="token punctuation">:</span> <span class="token string">"#F47466"</span>  <span class="token key atrule">code_background</span><span class="token punctuation">:</span> <span class="token string">"rgba(27, 31, 35, .05)"</span>  <span class="token key atrule">toc_color</span><span class="token punctuation">:</span> <span class="token string">"#00c4b6"</span>  <span class="token key atrule">blockquote_padding_color</span><span class="token punctuation">:</span> <span class="token string">"#49b1f5"</span>  <span class="token key atrule">blockquote_background_color</span><span class="token punctuation">:</span> <span class="token string">"#49b1f5"</span>  <span class="token key atrule">scrollbar_color</span><span class="token punctuation">:</span> <span class="token string">"#49b1f5"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-color_1.png"><br><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-color_2.png"></p><h3 id="網站背景"><a href="#網站背景" class="headerlink" title="網站背景"></a>網站背景</h3><p>默認顯示白色，可設置圖片或者顏色</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 圖片格式 url(http://xxxxxx.com/xxx.jpg)</span><span class="token comment"># 顏色（HEX值/RGB值/顔色單詞/漸變色)</span><span class="token comment"># 留空 不顯示背景</span>background<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><em>留意:</em> 如果你的網站根目錄不是’/‘,使用本地圖片時，需加上你的根目錄。<br>例如：網站是 <code>https://yoursite.com/blog</code>,引用一張<code>img/xx.png</code>圖片，則設置background為 `url(/blog/img/xx.png)</p><blockquote><p>background:’#49B202’</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-set-body-background-color.png"></p><blockquote><p>background: url(<a href="https://i.loli.net/2019/09/09/5oDRkWVKctx2b6A.png">https://i.loli.net/2019/09/09/5oDRkWVKctx2b6A.png</a>)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-set-body-background-img.png"></p><h3 id="footer-背景"><a href="#footer-背景" class="headerlink" title="footer 背景"></a>footer 背景</h3><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># footer是否顯示圖片背景(與top_img一致)</span><span class="token key atrule">footer_bg</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><table><thead><tr><th>配置的值</th><th>效果</th></tr></thead><tbody><tr><td>留空/false</td><td>顯示默認的顔色</td></tr><tr><td>img鏈接</td><td>圖片的鏈接，顯示所配置的圖片</td></tr><tr><td>顔色(<br>HEX值 - #0000FF<br>RGB值 - rgb(0,0,255)<br>顔色單詞 - orange<br>漸變色 - linear-gradient( 135deg, #E2B0FF 10%, #9F44D3 100%)<br>）</td><td>對應的顔色</td></tr><tr><td>true</td><td>顯示跟 top_img 一樣</td></tr></tbody></table><blockquote><p>true</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-footer-img.png"></p><h3 id="打字效果"><a href="#打字效果" class="headerlink" title="打字效果"></a>打字效果</h3><p>打字效果<a href="https://github.com/disjukr/activate-power-mode">activate-power-mode</a></p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Typewriter Effect (打字效果)</span><span class="token comment"># https://github.com/disjukr/activate-power-mode</span><span class="token key atrule">activate_power_mode</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">colorful</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># open particle animation (冒光特效)</span>  <span class="token key atrule">shake</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#  open shake (抖動特效)</span>  <span class="token key atrule">mobile</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-type-animation.gif"></p><h3 id="背景特效"><a href="#背景特效" class="headerlink" title="背景特效"></a>背景特效</h3><div class="tabs" id="背景特效"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#背景特效-1">靜止綵帶</button></li><li class="tab"><button type="button" data-href="#背景特效-2">動態綵帶</button></li><li class="tab"><button type="button" data-href="#背景特效-3">canvas-nest</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="背景特效-1"><p>好看的綵帶背景，可設置每次刷新更換綵帶，或者每次點擊更換綵帶<br>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">canvas_ribbon</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">size</span><span class="token punctuation">:</span> <span class="token number">150</span>  <span class="token key atrule">alpha</span><span class="token punctuation">:</span> <span class="token number">0.6</span>  <span class="token key atrule">zIndex</span><span class="token punctuation">:</span> <span class="token number">-1</span>  <span class="token key atrule">click_to_change</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment">#設置是否每次點擊都更換綵帶</span>  <span class="token key atrule">mobile</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># false 手機端不顯示 true 手機端顯示</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>相關配置可查看<a href="https://github.com/hustcc/ribbon.js">canvas_ribbon</a></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-canvas-ribbon.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="背景特效-2"><p>好看的綵帶背景，會飄動<br>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">canvas_fluttering_ribbon</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">mobile</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># false 手機端不顯示 true 手機端顯示</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-canvas-ribbon-piao.gif"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="背景特效-3"><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">canvas_nest</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">'0,0,255'</span> <span class="token comment">#color of lines, default: '0,0,0'; RGB values: (R,G,B).(note: use ',' to separate.)</span>  <span class="token key atrule">opacity</span><span class="token punctuation">:</span> <span class="token number">0.7</span> <span class="token comment"># the opacity of line (0~1), default: 0.5.</span>  <span class="token key atrule">zIndex</span><span class="token punctuation">:</span> <span class="token number">-1</span> <span class="token comment"># z-index property of the background, default: -1.</span>  <span class="token key atrule">count</span><span class="token punctuation">:</span> <span class="token number">99</span> <span class="token comment"># the number of lines, default: 99.</span>  <span class="token key atrule">mobile</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># false 手機端不顯示 true 手機端顯示</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-canvas_nest.gif"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="鼠標點擊效果"><a href="#鼠標點擊效果" class="headerlink" title="鼠標點擊效果"></a>鼠標點擊效果</h3><div class="tabs" id="鼠標點擊效果"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#鼠標點擊效果-1"><i class="fas fa-fire-alt"></i>煙花</button></li><li class="tab"><button type="button" data-href="#鼠標點擊效果-2"><i class="fas fa-heart"></i>愛心</button></li><li class="tab"><button type="button" data-href="#鼠標點擊效果-3"><i class="fab fa-amilia"></i>文字</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="鼠標點擊效果-1"><p><code>zIndex</code>建議只在<code>-1</code>和<code>9999</code>上選<br><code>-1</code> 代表煙火效果在底部<br><code>9999</code> 代表煙火效果在前面</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">fireworks</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">zIndex</span><span class="token punctuation">:</span> <span class="token number">9999</span> <span class="token comment"># -1 or 9999</span>  <span class="token key atrule">mobile</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-firewall.gif"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="鼠標點擊效果-2"><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 點擊出現愛心</span><span class="token key atrule">click_heart</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">mobile</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/click_love.gif"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="鼠標點擊效果-3"><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 點擊出現文字，文字可自行修改</span><span class="token key atrule">ClickShowText</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">text</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> I    <span class="token punctuation">-</span> LOVE    <span class="token punctuation">-</span> YOU  <span class="token key atrule">fontSize</span><span class="token punctuation">:</span> 15px  <span class="token key atrule">random</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 文字隨機顯示</span>  <span class="token key atrule">mobile</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/click_word.gif"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="頁面美化"><a href="#頁面美化" class="headerlink" title="頁面美化"></a>頁面美化</h3><p>會改變ol、ul、h1-h5的樣式</p><p><code>field</code>配置生效的區域</p><ul><li><code>post</code> 只在文章頁生效</li><li><code>site</code> 在全站生效</li></ul><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 美化頁面顯示</span><span class="token key atrule">beautify</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">field</span><span class="token punctuation">:</span> site <span class="token comment"># site/post</span>  <span class="token key atrule">title-prefix-icon</span><span class="token punctuation">:</span> <span class="token string">'\f0c1'</span>  <span class="token key atrule">title-prefix-icon-color</span><span class="token punctuation">:</span> <span class="token string">"#F47466"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>title-prefix-icon</code>填寫的是fontawesome的icon的Unicode數。<br><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-fontwesome-unicode.png"></p><blockquote><p>未開啟美化</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-beautify.png"></p><blockquote><p>開啟美化</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-beautif.png"></p><h3 id="自定義字體和字體大小"><a href="#自定義字體和字體大小" class="headerlink" title="自定義字體和字體大小"></a>自定義字體和字體大小</h3><h4 id="全局字體"><a href="#全局字體" class="headerlink" title="全局字體"></a>全局字體</h4><p>可自行設置字體的<code>font-family</code><br><strong>如不需要配置，請留空</strong></p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Global font settings</span><span class="token comment"># Don't modify the following settings unless you know how they work (非必要不要修改)</span><span class="token key atrule">font</span><span class="token punctuation">:</span>  <span class="token key atrule">global-font-size</span><span class="token punctuation">:</span>  <span class="token key atrule">code-font-size</span><span class="token punctuation">:</span>  <span class="token key atrule">font-family</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>apple<span class="token punctuation">-</span>system<span class="token punctuation">,</span> BlinkMacSystemFont<span class="token punctuation">,</span> <span class="token string">"Segoe UI"</span><span class="token punctuation">,</span> <span class="token string">"Helvetica Neue"</span><span class="token punctuation">,</span> Lato<span class="token punctuation">,</span> Roboto<span class="token punctuation">,</span> <span class="token string">"PingFang SC"</span><span class="token punctuation">,</span> <span class="token string">"Microsoft JhengHei"</span><span class="token punctuation">,</span> <span class="token string">"Microsoft YaHei"</span><span class="token punctuation">,</span> sans<span class="token punctuation">-</span>serif  <span class="token key atrule">code-font-family</span><span class="token punctuation">:</span> consolas<span class="token punctuation">,</span> Menlo<span class="token punctuation">,</span> <span class="token string">"PingFang SC"</span><span class="token punctuation">,</span> <span class="token string">"Microsoft JhengHei"</span><span class="token punctuation">,</span> <span class="token string">"Microsoft YaHei"</span><span class="token punctuation">,</span> sans<span class="token punctuation">-</span>serif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Blog-標題字體"><a href="#Blog-標題字體" class="headerlink" title="Blog 標題字體"></a>Blog 標題字體</h4><p>可自行設置字體的<code>font-family</code><br><strong>如不需要配置，請留空。</strong><br><strong>如不需要使用網絡字體，只需要把font_link留空就行</strong></p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Font settings for the site title and site subtitle</span><span class="token comment"># 左上角網站名字 主頁居中網站名字</span><span class="token key atrule">blog_title_font</span><span class="token punctuation">:</span>  <span class="token key atrule">font_link</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//fonts.googleapis.com/css<span class="token punctuation">?</span>family=Titillium+Web<span class="token important">&amp;display=swap</span>  <span class="token key atrule">font-family</span><span class="token punctuation">:</span> Titillium Web<span class="token punctuation">,</span> <span class="token string">'PingFang SC'</span><span class="token punctuation">,</span> <span class="token string">'Hiragino Sans GB'</span><span class="token punctuation">,</span> <span class="token string">'Microsoft JhengHei'</span><span class="token punctuation">,</span> <span class="token string">'Microsoft YaHei'</span><span class="token punctuation">,</span> sans<span class="token punctuation">-</span>serif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="網站副標題"><a href="#網站副標題" class="headerlink" title="網站副標題"></a>網站副標題</h3><p>可設置主頁中顯示的網站副標題或者喜歡的座右銘。</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 主頁subtitle</span><span class="token key atrule">subtitle</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># Typewriter Effect (打字效果)</span>  <span class="token key atrule">effect</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># loop (循環打字)</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># source 調用第三方服務</span>  <span class="token comment"># source: false 關閉調用</span>  <span class="token comment"># source: 1  調用一言網的一句話（簡體） https://hitokoto.cn/</span>  <span class="token comment"># source: 2  調用一句網（簡體） http://yijuzhan.com/</span>  <span class="token comment"># source: 3  調用今日詩詞（簡體） https://www.jinrishici.com/</span>  <span class="token comment"># subtitle 會先顯示 source , 再顯示 sub 的內容</span>  <span class="token key atrule">source</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 如果關閉打字效果，subtitle 只會顯示 sub 的第一行文字</span>  <span class="token key atrule">sub</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> 今日事&amp;<span class="token comment">#44;今日畢</span>    <span class="token punctuation">-</span> Never put off till tomorrow what you can do today<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-index-subtitle.gif"></p><h3 id="主頁top-img顯示大小"><a href="#主頁top-img顯示大小" class="headerlink" title="主頁top_img顯示大小"></a>主頁top_img顯示大小</h3><blockquote><p>適用於 版本號 &gt;= V1.2.0</p></blockquote><p>默認的顯示為全屏。site-info的區域會居中顯示</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 主頁設置</span><span class="token comment"># 默認top_img全屏，site_info在中間</span><span class="token comment"># 使用默認, 都無需填寫（建議默認）</span><span class="token key atrule">index_site_info_top</span><span class="token punctuation">:</span> <span class="token comment"># 主頁標題距離頂部距離  例如 300px/300em/300rem/10%</span><span class="token key atrule">index_top_img_height</span><span class="token punctuation">:</span>  <span class="token comment">#主頁top_img高度 例如 300px/300em/300rem  不能使用百分比</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：<code>index_top_img_height</code>的值不能使用百分比。<br>2個都不填的話，會使用默認值</p><p>舉例，當</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">index_top_img_height</span><span class="token punctuation">:</span> 400px<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>效果</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-index-top-img-setting.png"></p><h3 id="頁面加載動畫preloader"><a href="#頁面加載動畫preloader" class="headerlink" title="頁面加載動畫preloader"></a>頁面加載動畫preloader</h3><p>當進入網頁時，因為加載速度的問題，可能會導致top_img圖片出現斷層顯示，或者網頁加載不全而出現等待時間，開啟preloader後，會顯示加載動畫，等頁面加載完，加載動畫會消失。</p><p>配置<code>butterly.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 加載動畫 Loading Animation</span><span class="token key atrule">preloader</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-preloader.gif"></p><h2 id="PWA"><a href="#PWA" class="headerlink" title="PWA"></a>PWA</h2><p>要為<code>Butterfly</code>配上 PWA 特性, 你需要如下幾個步驟:</p><ol><li><p>打開 hexo 工作目錄</p></li><li><p><code>npm install hexo-offline --save</code> 或者 <code>yarn add hexo-offline</code></p></li><li><p>在根目錄創建 <code>hexo-offline.config.cjs</code> 文件，並增加以下內容。</p></li></ol><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// offline config passed to workbox-build.</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token literal-property property">globPatterns</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'**/*.{js,html,css,png,jpg,gif,svg,webp,eot,ttf,woff,woff2}'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment">// 靜態文件合集，如果你的站點使用了例如 webp 格式的文件，請將文件類型添加進去。</span>  <span class="token literal-property property">globDirectory</span><span class="token operator">:</span> <span class="token string">'public'</span><span class="token punctuation">,</span>  <span class="token literal-property property">swDest</span><span class="token operator">:</span> <span class="token string">'public/service-worker.js'</span><span class="token punctuation">,</span>  <span class="token literal-property property">maximumFileSizeToCacheInBytes</span><span class="token operator">:</span> <span class="token number">10485760</span><span class="token punctuation">,</span> <span class="token comment">// 緩存的最大文件大小，以字節為單位。</span>  <span class="token literal-property property">skipWaiting</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token literal-property property">clientsClaim</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token literal-property property">runtimeCaching</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token comment">// 如果你需要加載 CDN 資源，請配置該選項，如果沒有，可以不配置。</span>    <span class="token comment">// CDNs - should be CacheFirst, since they should be used specific versions so should not change</span>    <span class="token punctuation">{</span>      <span class="token literal-property property">urlPattern</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^https:\/\/cdn\.example\.com\/.*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token comment">// 可替換成你的 URL</span>      <span class="token literal-property property">handler</span><span class="token operator">:</span> <span class="token string">'CacheFirst'</span>    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更多內容請查看 <a href="https://github.com/JLHwung/hexo-offline">hexo-offline</a>的官方文檔</p><ol start="4"><li>在<code>主題配置文件</code>中開啟 pwa 選項。</li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">pwa</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">manifest</span><span class="token punctuation">:</span> /img/pwa/manifest.json  <span class="token key atrule">apple_touch_icon</span><span class="token punctuation">:</span> /img/pwa/apple<span class="token punctuation">-</span>touch<span class="token punctuation">-</span>icon.png  <span class="token key atrule">favicon_32_32</span><span class="token punctuation">:</span> /img/pwa/32.png  <span class="token key atrule">favicon_16_16</span><span class="token punctuation">:</span> /img/pwa/16.png  <span class="token key atrule">mask_icon</span><span class="token punctuation">:</span> /img/pwa/safari<span class="token punctuation">-</span>pinned<span class="token punctuation">-</span>tab.svg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li>在創建<code>source/</code>目錄中創建<code>manifest.json</code>文件。</li></ol><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>    <span class="token property">"short_name"</span><span class="token operator">:</span> <span class="token string">"Junzhou"</span><span class="token punctuation">,</span>    <span class="token property">"theme_color"</span><span class="token operator">:</span> <span class="token string">"#49b1f5"</span><span class="token punctuation">,</span>    <span class="token property">"background_color"</span><span class="token operator">:</span> <span class="token string">"#49b1f5"</span><span class="token punctuation">,</span>    <span class="token property">"display"</span><span class="token operator">:</span> <span class="token string">"standalone"</span><span class="token punctuation">,</span>    <span class="token property">"scope"</span><span class="token operator">:</span> <span class="token string">"/"</span><span class="token punctuation">,</span>    <span class="token property">"start_url"</span><span class="token operator">:</span> <span class="token string">"/"</span><span class="token punctuation">,</span>    <span class="token property">"icons"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>          <span class="token property">"src"</span><span class="token operator">:</span> <span class="token string">"images/pwaicons/36.png"</span><span class="token punctuation">,</span>          <span class="token property">"sizes"</span><span class="token operator">:</span> <span class="token string">"36x36"</span><span class="token punctuation">,</span>          <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"image/png"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"src"</span><span class="token operator">:</span> <span class="token string">"images/pwaicons/48.png"</span><span class="token punctuation">,</span>          <span class="token property">"sizes"</span><span class="token operator">:</span> <span class="token string">"48x48"</span><span class="token punctuation">,</span>          <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"image/png"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>          <span class="token property">"src"</span><span class="token operator">:</span> <span class="token string">"images/pwaicons/72.png"</span><span class="token punctuation">,</span>          <span class="token property">"sizes"</span><span class="token operator">:</span> <span class="token string">"72x72"</span><span class="token punctuation">,</span>          <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"image/png"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>          <span class="token property">"src"</span><span class="token operator">:</span> <span class="token string">"images/pwaicons/96.png"</span><span class="token punctuation">,</span>          <span class="token property">"sizes"</span><span class="token operator">:</span> <span class="token string">"96x96"</span><span class="token punctuation">,</span>          <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"image/png"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>          <span class="token property">"src"</span><span class="token operator">:</span> <span class="token string">"images/pwaicons/144.png"</span><span class="token punctuation">,</span>          <span class="token property">"sizes"</span><span class="token operator">:</span> <span class="token string">"144x144"</span><span class="token punctuation">,</span>          <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"image/png"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>          <span class="token property">"src"</span><span class="token operator">:</span> <span class="token string">"images/pwaicons/192.png"</span><span class="token punctuation">,</span>          <span class="token property">"sizes"</span><span class="token operator">:</span> <span class="token string">"192x192"</span><span class="token punctuation">,</span>          <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"image/png"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"src"</span><span class="token operator">:</span> <span class="token string">"images/pwaicons/512.png"</span><span class="token punctuation">,</span>            <span class="token property">"sizes"</span><span class="token operator">:</span> <span class="token string">"512x512"</span><span class="token punctuation">,</span>            <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"image/png"</span>          <span class="token punctuation">}</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token property">"splash_pages"</span><span class="token operator">:</span> <span class="token null keyword">null</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你也可以通過 <a href="https://app-manifest.firebaseapp.com/">Web App Manifest</a>快速創建<code>manifest.json</code>。（Web App Manifest 要求至少包含一個 512*512 像素的圖標）</p><ol start="6"><li>可以通過<code>Chrome</code>插件<code>Lighthouse</code>檢查 PWA 配置是否生效以及配置是否正確。<ul><li>打開博客頁面</li><li>啟動<code>Lighthouse</code>插件 (<code>Lighthouse</code>插件要求至少包含一個 512*512 像素的圖標)</li></ul></li></ol><p>關於 PWA（漸進式增強 Web 應用）的更多內容請參閲 <a href="https://developers.google.com/web/tools/lighthouse/audits/address-bar">Google Tools for Web Developers</a></p><h2 id="字數統計"><a href="#字數統計" class="headerlink" title="字數統計"></a>字數統計</h2><p>要為<code>Butterfly</code>配上字數統計特性, 你需要如下幾個步驟:</p><ol><li><p>打開 hexo 工作目錄</p></li><li><p><code>npm install hexo-wordcount --save</code> or <code>yarn add hexo-wordcount</code></p></li><li><p>修改 <code>主題配置文件</code>:</p></li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">wordcount</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">post_wordcount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">total_wordcount</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-word-count.png"><br><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-wordcount-totalcount.png"></p><h2 id="圖片大圖查看模式"><a href="#圖片大圖查看模式" class="headerlink" title="圖片大圖查看模式"></a>圖片大圖查看模式</h2><div class="note info flat"><p>只能開啟一個</p></div><div class="tabs" id="圖片大圖查看模式"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#圖片大圖查看模式-1">注意</button></li><li class="tab"><button type="button" data-href="#圖片大圖查看模式-2">fancybox</button></li><li class="tab"><button type="button" data-href="#圖片大圖查看模式-3">medium_zoom</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="圖片大圖查看模式-1"><p>如果你並不想爲某張圖片添加大圖查看模式，你可以使用 html 格式引用圖片，併爲圖片添加 <code>no-lightbox</code> class 名。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="圖片大圖查看模式-2"><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># fancybox http://fancyapps.com/fancybox/3/</span><span class="token key atrule">fancybox</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/fancybox.gif" alt="fancybox.gif"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="圖片大圖查看模式-3"><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">medium_zoom</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/medium_zoom.gif" alt="medium_zoom.gif"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="Snackbar-彈窗"><a href="#Snackbar-彈窗" class="headerlink" title="Snackbar 彈窗"></a>Snackbar 彈窗</h2><p>Snackbar 彈窗,根據自己愛好開啟</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Snackbar 彈窗</span><span class="token comment"># https://github.com/polonel/SnackBar</span><span class="token comment"># position 彈窗位置</span><span class="token comment"># 可選 top-left / top-center / top-right / bottom-left / bottom-center / bottom-right</span><span class="token key atrule">snackbar</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">position</span><span class="token punctuation">:</span> bottom<span class="token punctuation">-</span>left  <span class="token key atrule">bg_light</span><span class="token punctuation">:</span> <span class="token string">'#49b1f5'</span> <span class="token comment">#light mode時彈窗背景</span>  <span class="token key atrule">bg_dark</span><span class="token punctuation">:</span> <span class="token string">'#2d3035'</span> <span class="token comment">#dark mode時彈窗背景</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>未開啟Snackbar</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/snackbar_false.gif" alt="snackbar_false.gif"></p><blockquote><p>開啟Snackbar</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/snackbar_true.gif" alt="snackbar_true.gif"></p><h2 id="其它配置"><a href="#其它配置" class="headerlink" title="其它配置"></a>其它配置</h2><h3 id="CSS-前綴"><a href="#CSS-前綴" class="headerlink" title="CSS 前綴"></a>CSS 前綴</h3><p>有些 CSS 並不是所有瀏覽器都支持，需要增加對應的前綴才會生效。</p><p>開啟  <code>css_prefix</code> 後，會自動為一些 CSS 增加前綴。（會增加 20%的體積）</p><p>修改配置文件</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Add the vendor prefixes to ensure compatibility</span><span class="token key atrule">css_prefix</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="Open-Graph"><a href="#Open-Graph" class="headerlink" title="Open Graph"></a>Open Graph</h3><p>在 <code>head</code> 裏增加一些 meta 資料，例如縮略圖、標題、時間等等。當你分享網頁到一些平臺時，平臺會讀取 Open Graph 的內容，展示縮略圖，標題等等信息。</p><p>修改配置文件</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Open graph meta tags</span><span class="token comment"># https://developers.facebook.com/docs/sharing/webmasters/</span><span class="token key atrule">Open_Graph_meta</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Instantpage"><a href="#Instantpage" class="headerlink" title="Instantpage"></a>Instantpage</h3><p>當鼠標懸停到鏈接上超過 65 毫秒時，Instantpage 會對該鏈接進行預加載，可以提升訪問速度。</p><p>修改配置文件</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># https://instant.page/</span><span class="token comment"># prefetch (預加載)</span><span class="token key atrule">instantpage</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Pangu"><a href="#Pangu" class="headerlink" title="Pangu"></a>Pangu</h3><blockquote><p>如果你跟我一樣，每次看到網頁上的中文字和英文、數字、符號擠在一塊，就會坐立難安，忍不住想在它們之間加個空格。這個外掛正是你在網路世界走跳所需要的東西，它會自動替你在網頁中所有的中文字和半形的英文、數字、符號之間插入空白。</p></blockquote><p>修改配置文件</p><pre class="line-numbers language-YAML" data-language="YAML"><code class="language-YAML"># https://github.com/vinta/pangu.js# Insert a space between Chinese character and English character (中英文之間添加空格)pangu:  enable: false  field: post # site/post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>field</code>只支持兩個參數，<code>post</code>(只在文章頁生效)和<code>site</code>(全站生效)</p><h2 id="Pjax"><a href="#Pjax" class="headerlink" title="Pjax"></a>Pjax</h2><p>當用戶點擊鏈接，通過ajax更新頁面需要變化的部分，然後使用HTML5的pushState修改瀏覽器的URL地址。</p><p>這樣可以不用重複加載相同的資源（css/js）， 從而提升網頁的加載速度。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Pjax [Beta]</span><span class="token comment"># It may contain bugs and unstable, give feedback when you find the bugs.</span><span class="token comment"># https://github.com/MoOx/pjax</span><span class="token key atrule">pjax</span><span class="token punctuation">:</span>   <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">exclude</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> /music/    <span class="token punctuation">-</span> /no<span class="token punctuation">-</span>pjax/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note info flat"><p>對於一些第三方插件，有些並不支持 pjax 。<br>你可以把<strong>網頁</strong>加入到 <code>exclude</code> 裏，這個網頁會被 pjax 排除在外。<br>點擊該網頁會重新加載網站</p><p>使用pjax後，一些自己DIY的js可能會無效，跳轉頁面時需要重新調用，請參考<a href="https://github.com/MoOx/pjax">Pjax文檔</a><br>使用pjax後，一些個別頁面加載的js/css，將會改為所有頁面都加載</p></div><div class="note warning flat"><p>Butterfly的Pjax目前仍有一些問題，請留意</p><ul><li>使用谷歌廣告可能會報錯（例如自動廣告）</li></ul><p>如果你在使用中發現問題，歡迎反饋Bugs</p></div><h2 id="Inject"><a href="#Inject" class="headerlink" title="Inject"></a>Inject</h2><blockquote><p>2.3.0以上支持</p></blockquote><p>如想添加額外的js/css/meta等等東西，可以在Inject裏添加，支持添加到head(<code>&lt;/body&gt;</code>標籤之前)和bottom(<code>&lt;/html&gt;</code>標籤之前)。</p><p>請注意：以標準的html格式添加內容</p><p>例如</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">inject</span><span class="token punctuation">:</span>  <span class="token key atrule">head</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> &lt;link rel="stylesheet" href="/self.css"<span class="token punctuation">&gt;</span>  <span class="token key atrule">bottom</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> &lt;script src="xxxx"<span class="token punctuation">&gt;</span>&lt;/script<span class="token punctuation">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>留意:</em> 如果你的網站根目錄不是’/‘,使用本地圖片時，需加上你的根目錄。<br>例如：網站是 <code>https://yoursite.com/blog</code>,引用<code>css/xx.css</code>，則設置為<code>&lt;link rel="stylesheet" href="/blog/css/xx.css"&gt;</code></p><h2 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h2><p>配置文件中最後一部分CDN，裏面是主題所引用到的文件，可自行配置CDN。（非必要請勿修改，配置後請確認鏈接是否能訪問）</p><p>以下是一些CDN提供商：</p><ul><li><a href="https://www.jsdelivr.com/">jsdelivr</a>   👍主題使用</li><li><a href="https://www.bootcdn.cn/">bootcdn</a></li><li><a href="https://cdnjs.com/">cdnjs</a></li><li>……</li></ul><a class="btn-beautify block green right larger" href="/posts/98d20436.html" title="❓ Butterfly 安裝文檔(五) 主題問答"><i class="far fa-hand-point-right"></i><span>❓ Butterfly 安裝文檔(五) 主題問答</span></a>]]></content>
      
      
      <categories>
          
          <category> Docs文檔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Hexo </tag>
            
            <tag> 主題 </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly 安裝文檔(三) 主題配置-1</title>
      <link href="/posts/4aa8abbe.html"/>
      <url>/posts/4aa8abbe.html</url>
      
        <content type="html"><![CDATA[<div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>📖  本教程更新於 2022 年 02 月 13 日，教程的內容針對最新<strong>穩定版</strong>而更新（如果你是舊版，教程會有些出入，請留意）</p><p>🦋  Butterfly 已經更新到 <a href="https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.1.0">4.1.0</a></p></div><div class="note green icon flat"><i class="note-icon fas fa-rocket"></i><p> 📚  文檔目錄</p><p><a href="#">Post not found: Butterfly-安裝文檔-一-快速開始 🚀 快速開始</a> - <a href="#">Post not found: Butterfly-安裝文檔-二-主題頁面 📑 主題頁面</a> - <a href="#">Post not found: Butterfly-安裝文檔-三-主題配置-1 🛠 主題配置-1</a> - <a href="#">Post not found: Butterfly-安裝文檔-四-主題配置-2 ⚔️ 主題配置-2</a> - <a href="#">Post not found: Butterfly-安裝文檔-五-主題問答 ❓ 主題問答</a> - <a href="#">Post not found: Butterfly-安裝文檔-六-進階教程 ⚡️ 進階教程</a> - <a href="#">Post not found: Butterfly-安裝文檔-七-更新日誌 ✨ 更新日誌</a> - <a href="#">Post not found: Butterfly-打賞 🤞 打賞</a></p></div><div class="note orange icon flat"><i class="note-icon fas fa-magic"></i><p>你可以通過右下角的 <strong>簡</strong> 按鈕切換為簡體顯示 </p></div><hr><h2 id="語言"><a href="#語言" class="headerlink" title="語言"></a>語言</h2><p>修改站點配置文件 <code>_config.yml</code></p><p>默認語言是 en</p><p>主題支持三種語言</p><ul><li>default(en)</li><li>zh-CN (簡體中文)</li><li>zh-TW (繁體中文)</li></ul><h2 id="網站資料"><a href="#網站資料" class="headerlink" title="網站資料"></a>網站資料</h2><p>修改網站各種資料，例如標題、副標題和郵箱等個人資料，請修改博客根目錄的<code>_config.yml</code></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/20191120000444.png"></p><h2 id="導航菜單"><a href="#導航菜單" class="headerlink" title="導航菜單"></a>導航菜單</h2><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">Home</span><span class="token punctuation">:</span> / <span class="token punctuation">|</span><span class="token punctuation">|</span> fas fa<span class="token punctuation">-</span>home<span class="token key atrule">Archives</span><span class="token punctuation">:</span> /archives/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fas fa<span class="token punctuation">-</span>archive<span class="token key atrule">Tags</span><span class="token punctuation">:</span> /tags/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fas fa<span class="token punctuation">-</span>tags<span class="token key atrule">Categories</span><span class="token punctuation">:</span> /categories/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fas fa<span class="token punctuation">-</span>folder<span class="token punctuation">-</span>open<span class="token key atrule">List||fas fa-list</span><span class="token punctuation">:</span>  <span class="token key atrule">Music</span><span class="token punctuation">:</span> /music/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fas fa<span class="token punctuation">-</span>music  <span class="token key atrule">Movie</span><span class="token punctuation">:</span> /movies/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fas fa<span class="token punctuation">-</span>video<span class="token key atrule">Link</span><span class="token punctuation">:</span> /link/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fas fa<span class="token punctuation">-</span>link<span class="token key atrule">About</span><span class="token punctuation">:</span> /about/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fas fa<span class="token punctuation">-</span>heart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>必須是 <code>/xxx/</code>，後面<code>||</code>分開，然後寫圖標名。</p><p>如果不希望顯示圖標，圖標名可不寫。</p><p>默認子目錄是展開的，如果你想要隱藏，在子目錄裏添加 <code>hide</code> 。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">List||fas fa-list||hide</span><span class="token punctuation">:</span>  <span class="token key atrule">Music</span><span class="token punctuation">:</span> /music/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fas fa<span class="token punctuation">-</span>music  <span class="token key atrule">Movie</span><span class="token punctuation">:</span> /movies/ <span class="token punctuation">|</span><span class="token punctuation">|</span> fas fa<span class="token punctuation">-</span>video<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>注意：</strong> 導航的文字可自行更改</p><p>例如：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">menu:  首頁: / || fas fa-home  時間軸: /archives/ || fas fa-archive  標籤: /tags/ || fas fa-tags  分類: /categories/ || fas fa-folder-open  清單||fa fa-heartbeat:    音樂: /music/ || fas fa-music    照片: /Gallery/ || fas fa-images    電影: /movies/ || fas fa-video  友鏈: /link/ || fas fa-link  關於: /about/ || fas fa-heart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-menu.png"></p><h2 id="代碼"><a href="#代碼" class="headerlink" title="代碼"></a>代碼</h2><div class="note info flat"><p>代碼塊中的所有功能只適用於 Hexo 自帶的代碼渲染</p><p>如果使用第三方的渲染器，不一定會有效</p></div><h3 id="代碼高亮主題"><a href="#代碼高亮主題" class="headerlink" title="代碼高亮主題"></a>代碼高亮主題</h3><div class="tabs" id="highlight-theme"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#highlight-theme-1">默認主題</button></li><li class="tab"><button type="button" data-href="#highlight-theme-2">自定義主題</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="highlight-theme-1"><p><code>Butterfly</code> 支持6種代碼高亮樣式：</p><ul><li>darker</li><li>pale night</li><li>light</li><li>ocean</li><li>mac</li><li>mac light</li></ul><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight_theme</span><span class="token punctuation">:</span> light<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>darker</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-darker.png"></p><blockquote><p>pale night</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-pale-night.png"></p><blockquote><p>light</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-light.png"></p><blockquote><p>ocean</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-highlight-ocean.png"></p><blockquote><p>mac</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-highlight-mac.png"></p><blockquote><p>mac light</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-mac-light.png" alt="image-20200731175026827"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="highlight-theme-2"><p>主題從3.0開始，支持使用自定義的代碼顔色。</p><p>如何自定義主題，請查看下面這篇文章。</p><p><a href="#">Post not found: 自定義代碼配色 自定義代碼配色</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="代碼複製"><a href="#代碼複製" class="headerlink" title="代碼複製"></a>代碼複製</h3><p>主題支持代碼複製功能</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight_copy</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-copy.png"></p><h3 id="代碼框展開-關閉"><a href="#代碼框展開-關閉" class="headerlink" title="代碼框展開/關閉"></a>代碼框展開/關閉</h3><p>在默認情況下，代碼框自動展開，可設置是否所有代碼框都關閉狀態，點擊<code>&gt;</code>可展開代碼</p><ul><li>true 全部代碼框不展開，需點擊<code>&gt;</code>打開 </li><li>false 代碼狂展開，有<code>&gt;</code>點擊按鈕</li><li>none 不顯示<code>&gt;</code>按鈕</li></ul><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight_shrink</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#代碼框不展開，需點擊 '&gt;' 打開</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="note info flat"><p>你也可以在post/page頁對應的markdown文件front-matter添加highlight_shrink來獨立配置。</p><p>當<strong>主題配置文件中</strong>的 <code>highlight_shrink </code>設為true時，可在front-matter添加<code>highlight_shrink: false</code>來單獨配置文章展開代碼框。</p><p>當<strong>主題配置文件中</strong>的 <code>highlight_shrink </code>設為false時，可在front-matter添加<code>highlight_shrink: true</code>來單獨配置文章收縮代碼框。</p></div><p><code>highlight_shrink: true</code></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-highlight-shrink-true.png"></p><p><code>highlight_shrink: false</code></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-highlight-shrink-false.png"></p><p><code>highlight_shrink: none</code></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-highlight-shirk-none.png"></p><h3 id="代碼換行"><a href="#代碼換行" class="headerlink" title="代碼換行"></a>代碼換行</h3><p>在默認情況下，Hexo 在編譯的時候不會實現代碼自動換行。如果你不希望在代碼塊的區域裏有橫向滾動條的話，那麼你可以考慮開啟這個功能。</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">code_word_wrap</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果你是使用 highlight 渲染，需要找到你站點的 Hexo 配置文件<code>_config.yml</code>，將<code>line_number</code>改成<code>false</code>:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># &lt;- 改這裏</span>  <span class="token key atrule">auto_detect</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  tab_replace<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果你是使用 prismjs 渲染，需要找到你站點的 Hexo 配置文件<code>_config.yml</code>，將<code>line_number</code>改成<code>false</code>:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">prismjs</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">preprocess</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># &lt;- 改這裏</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>設置<code>code_word_wrap</code>之前:</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-word-wrap-before.png"></p><blockquote><p>設置<code>code_word_wrap</code>之後:</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-code-word-wrap-after.png"></p><h3 id="代碼高度限制"><a href="#代碼高度限制" class="headerlink" title="代碼高度限制"></a>代碼高度限制</h3><blockquote><p>3.7.0 及以上支持</p></blockquote><p>可配置代碼高度限制，超出的部分會隱藏，並顯示展開按鈕。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight_height_limit</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># unit: px</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意：</p><ol><li><p>單位是 <code>px</code>，直接添加數字，如 200</p></li><li><p>實際限制高度為 <code>highlight_height_limit + 30 px</code> ，多增加 30px 限制，目的是避免代碼高度只超出highlight_height_limit 一點時，出現展開按鈕，展開沒內容。</p></li><li><p>不適用於隱藏後的代碼塊（ css 設置 display: none）</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN@m2/img/hexo-theme-butterfly-docs-highlight-heigh-limit.gif" alt="hexo-theme-butterfly-docs-highlight-heigh-limit"></p><h2 id="社交圖標"><a href="#社交圖標" class="headerlink" title="社交圖標"></a>社交圖標</h2><p>Butterfly支持 <a href="https://fontawesome.com/icons?from=io">font-awesome v6</a>圖標. </p><p>書寫格式 <code>圖標名：url || 描述性文字</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">social</span><span class="token punctuation">:</span>  <span class="token key atrule">fab fa-github</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/xxxxx <span class="token punctuation">|</span><span class="token punctuation">|</span> Github  <span class="token key atrule">fas fa-envelope</span><span class="token punctuation">:</span> mailto<span class="token punctuation">:</span>xxxxxx@gmail.com <span class="token punctuation">|</span><span class="token punctuation">|</span> Email<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>圖標名可在這尋找</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-fontawesome.png"></p><p>PC:</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-social-icon-pc.png"></p><p>Mobile:</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-socila-icon-mobile.png" alt="1560603353743"></p><h2 id="主頁文章節選-自動節選和文章頁description"><a href="#主頁文章節選-自動節選和文章頁description" class="headerlink" title="主頁文章節選(自動節選和文章頁description)"></a>主頁文章節選(自動節選和文章頁description)</h2><p>因為主題UI的關係，<code>主頁文章節選</code>只支持<code>自動節選</code>和<code>文章頁description</code>。</p><p>在<code>butterfly</code>裏，有四種可供選擇</p><ol><li><strong>description：</strong> 只顯示description</li><li><strong>both：</strong> 優先選擇description，如果沒有配置description，則顯示自動節選的內容</li><li><strong>auto_excerpt：</strong>只顯示自動節選</li><li><strong>false：</strong> 不顯示文章內容</li></ol><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">index_post_content</span><span class="token punctuation">:</span>  <span class="token key atrule">method</span><span class="token punctuation">:</span> <span class="token number">3</span>  <span class="token key atrule">length</span><span class="token punctuation">:</span> <span class="token number">500</span> <span class="token comment"># if you set method to 2 or 3, the length need to config</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><code>description</code>在front-matter裏添加</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-description.png"></p><h2 id="頂部圖"><a href="#頂部圖" class="headerlink" title="頂部圖"></a>頂部圖</h2><div class="note info flat"><p>如果不要顯示頂部圖，可直接配置 <code>disable_top_img: true</code></p></div><p>配置中的值：</p><table><thead><tr><th>配置</th><th>解釋</th></tr></thead><tbody><tr><td>index_img</td><td>主頁的 top_img</td></tr><tr><td>default_top_img</td><td>默認的 top_img，當頁面的 top_img 沒有配置時，會顯示 default_top_img</td></tr><tr><td>archive_img</td><td>歸檔頁面的 top_img</td></tr><tr><td>tag_img</td><td>tag 子頁面 的 默認 top_img</td></tr><tr><td>tag_per_img</td><td>tag 子頁面的 top_img，可配置每個 tag 的 top_img</td></tr><tr><td>category_img</td><td>category 子頁面 的 默認 top_img</td></tr><tr><td>category_per_img</td><td>category 子頁面的 top_img，可配置每個 category 的 top_img</td></tr></tbody></table><p>其它頁面 （tags/categories/自建頁面）和 文章頁 的 <code>top_img</code> ，請到對應的 md 頁面設置<code>front-matter</code>中的<code>top_img</code></p><p>以上所有的 top_img 可配置以下值</p><blockquote><p><strong>3.2.0 以下</strong>版本的配置只支持</p><ul><li>留空，true 和 false - 顯示默認的顔色</li><li>img鏈接 - 顯示所配置的圖片</li></ul></blockquote><table><thead><tr><th>配置的值</th><th>效果</th></tr></thead><tbody><tr><td>留空</td><td>顯示默認的top_img（如有），否則顯示默認的顔色<br>（文章頁top_img留空的話，會顯示 cover 的值）</td></tr><tr><td>img鏈接</td><td>圖片的鏈接，顯示所配置的圖片</td></tr><tr><td>顔色(<br>HEX值 - #0000FF<br>RGB值 - rgb(0,0,255)<br>顔色單詞 - orange<br>漸變色 - linear-gradient( 135deg, #E2B0FF 10%, #9F44D3 100%)<br>）</td><td>對應的顔色</td></tr><tr><td>transparent</td><td>透明</td></tr><tr><td>false</td><td>不顯示 top_img</td></tr></tbody></table><p><code>tag_per_img</code> 和 <code>category_per_img</code> 是 3.2.0 新增的內容，可對 tag 和 category 進行單獨的配置</p><p>並不推薦為每個 tag 和每個 category 都配置不同的頂部圖，因為配置太多會拖慢生成速度</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">tag_per_img：  <span class="token key atrule">aplayer</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//xxxxxx.png  <span class="token key atrule">android</span><span class="token punctuation">:</span> ddddddd.png  category_per_img：  <span class="token key atrule">隨想</span><span class="token punctuation">:</span> hdhdh.png  <span class="token key atrule">推薦</span><span class="token punctuation">:</span> ddjdjdjd.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>top_img: false</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/theme-butterfly-docs-page-top-img-false.png" alt="image-20200924224536013"></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/theme-butterfly-docs-post-top-img-false-new.png" alt="image-20201027210949089"></p><blockquote><p>top_img: orange</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/theme-butterfly-docs-top-img-orange.png" alt="image-20200924225024153"></p><blockquote><p>top_img: ‘linear-gradient(20deg, #0062be, #925696, #cc426e, #fb0347)’</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/theme-butterfly-docs-top-img-color.png" alt="image-20200924225300934"></p><h2 id="文章置頂"><a href="#文章置頂" class="headerlink" title="文章置頂"></a>文章置頂</h2><p>【推薦】<a href="https://github.com/hexojs/hexo-generator-index"><code>hexo-generator-index</code></a>從 2.0.0 開始，已經支持文章置頂功能。你可以直接在文章的<code>front-matter</code>區域裏添加<code>sticky: 1</code>屬性來把這篇文章置頂。數值越大，置頂的優先級越大。</p><h2 id="文章封面"><a href="#文章封面" class="headerlink" title="文章封面"></a>文章封面</h2><p>文章的markdown文檔上,在<code>Front-matter</code>添加<code>cover</code>,並填上要顯示的圖片地址。<br>如果不配置<code>cover</code>,可以設置顯示默認的cover.</p><p>如果不想在首頁顯示cover,可以設置為<code>false</code></p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">cover</span><span class="token punctuation">:</span>  <span class="token comment"># 是否顯示文章封面</span>  <span class="token key atrule">index_enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">aside_enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">archives_enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 封面顯示的位置</span>  <span class="token comment"># 三個值可配置 left , right , both</span>  <span class="token key atrule">position</span><span class="token punctuation">:</span> both  <span class="token comment"># 當沒有設置cover時，默認的封面顯示</span>  <span class="token key atrule">default_cover</span><span class="token punctuation">:</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>當配置多張圖片時,會隨機選擇一張作為cover.此時寫法應為</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">default_cover</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png  <span class="token punctuation">-</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg2.png  <span class="token punctuation">-</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg3.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-cover.png"><br><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-cover-show.png"></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-cover-false.png"></p><blockquote><p>left</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-cover-left.png"></p><blockquote><p>right</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-cover-right.png"></p><blockquote><p>both</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-cover-both.png"></p><h2 id="文章頁相關配置"><a href="#文章頁相關配置" class="headerlink" title="文章頁相關配置"></a>文章頁相關配置</h2><h3 id="文章meta顯示"><a href="#文章meta顯示" class="headerlink" title="文章meta顯示"></a>文章meta顯示</h3><p>這個選項是用來顯示文章的相關信息的。</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">post_meta</span><span class="token punctuation">:</span>  <span class="token key atrule">page</span><span class="token punctuation">:</span>    <span class="token key atrule">date_type</span><span class="token punctuation">:</span> both <span class="token comment"># created or updated or both 主頁文章日期是創建日或者更新日或都顯示</span>    <span class="token key atrule">date_format</span><span class="token punctuation">:</span> relative <span class="token comment"># date/relative 顯示日期還是相對日期</span>    <span class="token key atrule">categories</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># true or false 主頁是否顯示分類</span>    <span class="token key atrule">tags</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># true or false 主頁是否顯示標籤</span>    <span class="token key atrule">label</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># true or false 顯示描述性文字</span>  <span class="token key atrule">post</span><span class="token punctuation">:</span>    <span class="token key atrule">date_type</span><span class="token punctuation">:</span> both <span class="token comment"># created or updated or both 文章頁日期是創建日或者更新日或都顯示</span>    <span class="token key atrule">date_format</span><span class="token punctuation">:</span> relative <span class="token comment"># date/relative 顯示日期還是相對日期</span>    <span class="token key atrule">categories</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># true or false 文章頁是否顯示分類</span>    <span class="token key atrule">tags</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># true or false 文章頁是否顯示標籤</span>    <span class="token key atrule">label</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># true or false 顯示描述性文字</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>主頁</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-page-meta.png"></p><blockquote><p>文章頁</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-info.png"></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-tag.png"></p><p><code>date_format</code>  是 3.2.0 新增的內容，配置時間顯示明確時間還是相對時間</p><blockquote><p>相對時間</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/theme-butterfly-docs-relative-time.png" alt="image-20200928201701560"></p><blockquote><p>明確時間</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/theme-butterfly-docs-full-date.png" alt="image-20200928201911032"></p><h3 id="文章版權"><a href="#文章版權" class="headerlink" title="文章版權"></a>文章版權</h3><p>為你的博客文章展示文章版權和許可協議。</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">post_copyright</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">decode</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">license</span><span class="token punctuation">:</span> CC BY<span class="token punctuation">-</span>NC<span class="token punctuation">-</span>SA 4.0  <span class="token key atrule">license_url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//creativecommons.org/licenses/by<span class="token punctuation">-</span>nc<span class="token punctuation">-</span>sa/4.0/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由於<code>Hexo 4.1</code>開始，默認對網址進行解碼，以至於如果是中文網址，會被解碼，可設置<code>decode: true</code>來顯示中文網址。</p><p>如果有文章（例如：轉載文章）不需要顯示版權，可以在文章Front-matter單獨設置</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">copyright</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>從<code>3.0.0</code>開始，支持對單獨文章設置版權信息，可以在文章Front-matter單獨設置</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">copyright_author: xxxxcopyright_author_href: https://xxxxxx.comcopyright_url: https://xxxxxx.comcopyright_info: 此文章版權歸xxxxx所有，如有轉載，請註明來自原作者<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>版權顯示截圖</strong></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-copyright.png" alt="image-20210130161913121"></p><h3 id="文章打賞"><a href="#文章打賞" class="headerlink" title="文章打賞"></a>文章打賞</h3><p>在你每篇文章的結尾，可以添加打賞按鈕。相關二維碼可以自行配置。</p><p>對於沒有提供二維碼的，可配置一張軟件的icon圖片，然後在link上添加相應的打賞鏈接。用戶點擊圖片就會跳轉到鏈接去。</p><p>link可以不寫，會默認為圖片的鏈接。</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">reward</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">QR_code</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">img</span><span class="token punctuation">:</span> /img/wechat.jpg      <span class="token key atrule">link</span><span class="token punctuation">:</span>      <span class="token key atrule">text</span><span class="token punctuation">:</span> 微信    <span class="token punctuation">-</span> <span class="token key atrule">img</span><span class="token punctuation">:</span> /img/alipay.jpg      <span class="token key atrule">link</span><span class="token punctuation">:</span>      <span class="token key atrule">text</span><span class="token punctuation">:</span> 支付寶<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-donate.png"></p><h3 id="TOC"><a href="#TOC" class="headerlink" title="TOC"></a>TOC</h3><p>在文章頁，會有一個目錄，用於顯示TOC。</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">toc</span><span class="token punctuation">:</span>  <span class="token key atrule">post</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">page</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">expand</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">style_simple</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># for post</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>屬性</th><th>解釋</th></tr></thead><tbody><tr><td>post</td><td>文章頁是否顯示 TOC</td></tr><tr><td>page</td><td>普通頁面是否顯示 TOC</td></tr><tr><td>number</td><td>是否顯示章節數</td></tr><tr><td>expand</td><td>是否展開 TOC</td></tr><tr><td>style_simple</td><td>簡潔模式（側邊欄<strong>只</strong>顯示 TOC, 只對文章頁有效 ）</td></tr></tbody></table><blockquote><p>Toc PC</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-toc-pc-new.png"></p><blockquote><p>Toc Mobile</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-toc-mobile-new.png"></p><blockquote><p>style_simple: true</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-toc-style-simple.png" alt="image-20201209232104167"></p><h4 id="為特定的文章配置"><a href="#為特定的文章配置" class="headerlink" title="為特定的文章配置"></a>為特定的文章配置</h4><p>在你的文章<code>md</code>文件的頭部，加入<code>toc_number</code>和<code>toc</code>，並配置<code>true</code>或者<code>false</code>即可。</p><p>主題會優先判斷文章Markdown的Front-matter是否有配置，如有，則以Front-matter的配置為準。否則，以<strong>主題配置文件中</strong>的配置為準</p><h3 id="相關文章"><a href="#相關文章" class="headerlink" title="相關文章"></a>相關文章</h3><p>相關文章推薦的原理是根據文章tags的比重來推薦</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">related_post</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">6</span> <span class="token comment"># 顯示推薦文章數目</span>  <span class="token key atrule">date_type</span><span class="token punctuation">:</span> created <span class="token comment"># or created or updated 文章日期顯示創建日或者更新日</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-releatedpost.png"></p><h3 id="文章錨點"><a href="#文章錨點" class="headerlink" title="文章錨點"></a>文章錨點</h3><p>開啟文章錨點後，當你在文章頁進行滾動時，文章鏈接會根據標題ID進行替換<br>(注意: 每替換一次，會留下一個歷史記錄。所以如果一篇文章有很多錨點的話，網頁的歷史記錄會很多。)</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># anchor</span><span class="token comment"># when you scroll in post , the url will update according to header id.</span><span class="token key atrule">anchor</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="文章過期提醒"><a href="#文章過期提醒" class="headerlink" title="文章過期提醒"></a>文章過期提醒</h3><p>可設置是否顯示文章過期提醒，以更新時間為基準。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> Displays outdated notice for a post (文章過期提醒)</span>noticeOutdate:  enable: true  style: flat # style: simple/flat  limit_day: 365 # When will it be shown  position: top # position: top/bottom  message_prev: It has been  message_next: days since the last update, the content of the article may be outdated.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code> limit_day</code>： 距離更新時間多少天才顯示文章過期提醒</p><p><code>message_prev</code> ： 天數之前的文字</p><p><code>message_next</code>：天數之後的文字</p><blockquote><p>style: flat</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butteffly-docs-outdate-flat.png" alt="image-20200731175909296"></p><blockquote><p>style: simple</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-outdated-simple.png" alt="image-20200731180037968"></p><h3 id="文章編輯按鈕"><a href="#文章編輯按鈕" class="headerlink" title="文章編輯按鈕"></a>文章編輯按鈕</h3><p>在文章標題旁邊顯示一個編輯按鈕，點擊會跳轉到對應的鏈接去。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Post edit</span><span class="token comment"># Easily browse and edit blog source code online.</span><span class="token key atrule">post_edit</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># url: https://github.com/user-name/repo-name/edit/branch-name/subdirectory-name/</span>  <span class="token comment"># For example: https://github.com/jerryc127/butterfly.js.org/edit/main/source/</span>  url<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-post-edit.png" alt="image-20210130160108360"></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-post-edit-2.png" alt="image-20210130160208436"></p><h3 id="文章分頁按鈕"><a href="#文章分頁按鈕" class="headerlink" title="文章分頁按鈕"></a>文章分頁按鈕</h3><p>可設置分頁的邏輯，也可以關閉分頁顯示</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># post_pagination (分頁)</span><span class="token comment"># value: 1 || 2 || false</span><span class="token comment"># 1: The 'next post' will link to old post</span><span class="token comment"># 2: The 'next post' will link to new post</span><span class="token comment"># false: disable pagination</span><span class="token key atrule">post_pagination</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>參數</th><th>解釋</th></tr></thead><tbody><tr><td>post_pagination: false</td><td>關閉分頁按鈕</td></tr><tr><td>post_pagination: 1</td><td>下一篇顯示的是舊文章</td></tr><tr><td>post_pagination: 2</td><td>下一篇顯示的是新文章</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-post-pagination.png" alt="image-20210130161545100"></p><h2 id="頭像"><a href="#頭像" class="headerlink" title="頭像"></a>頭像</h2><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">avatar</span><span class="token punctuation">:</span>  <span class="token key atrule">img</span><span class="token punctuation">:</span> /img/avatar.png  <span class="token key atrule">effect</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 頭像會一直轉圈</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-avatar.png"></p><h2 id="圖片描述"><a href="#圖片描述" class="headerlink" title="圖片描述"></a>圖片描述</h2><p>可開啟圖片Figcaption描述文字顯示</p><p>優先顯示圖片的 title 屬性，然後是 alt 屬性</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">photofigcaption</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-photo-figcaption.png"></p><h2 id="複製相關配置"><a href="#複製相關配置" class="headerlink" title="複製相關配置"></a>複製相關配置</h2><p>可配置網站是否可以複製、複製的內容是否添加版權信息</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> copy settings</span><span class="token title important"><span class="token punctuation">#</span> copyright: Add the copyright information after copied content (複製的內容後面加上版權信息)</span>copy:  enable: true  copyright:    enable: true    limit_count: 50<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>配置</th><th>解釋</th></tr></thead><tbody><tr><td>enable</td><td>是否開啟網站複製權限</td></tr><tr><td>copyright</td><td>複製的內容後面加上版權信息</td></tr><tr><td>enable</td><td>是否開啟複製版權信息添加</td></tr><tr><td>limit_count</td><td>字數限制，當複製文字大於這個字數限制時，將在複製的內容後面加上版權信息</td></tr></tbody></table><blockquote><p>添加版權信息後</p></blockquote><pre class="line-numbers language-none"><code class="language-none">Lorem ipsum dolor sit amet, test link consectetur adipiscing elit. Strong text pellentesque ligula commodo viverra vehicula. Italic text at ullamcorper enim. Morbi a euismod nibh. Underline text non elit nisl. Deleted text tristique, sem id condimentum tempus, metus lectus venenatis mauris, sit amet semper lorem felis a eros. Fusce egestas nibh at sagittis auctor. Sed ultricies ac arcu quis molestie. Donec dapibus nunc in nibh egestas, vitae volutpat sem iaculis. Curabitur sem tellus, elementum nec quam id, fermentum laoreet mi. Ut mollis ullamcorper turpis, vitae facilisis velit ultricies sit amet. Etiam laoreet dui odio, id tempus justo tincidunt id. Phasellus scelerisque nunc sed nunc ultricies accumsan.作者: Jerry連結: http://localhost:4000/posts/bd3c650b/#Paragraph來源: Butterfly著作權歸作者所有。商業轉載請聯絡作者獲得授權，非商業轉載請註明出處。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Footer-設置"><a href="#Footer-設置" class="headerlink" title="Footer 設置"></a>Footer 設置</h2><h3 id="博客年份"><a href="#博客年份" class="headerlink" title="博客年份"></a>博客年份</h3><p><code>since</code>是一個來展示你站點起始時間的選項。它位於頁面的最底部。</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">footer</span><span class="token punctuation">:</span>  <span class="token key atrule">owner</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">since</span><span class="token punctuation">:</span> <span class="token number">2018</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-since.png"></p><h3 id="頁腳自定義文本"><a href="#頁腳自定義文本" class="headerlink" title="頁腳自定義文本"></a>頁腳自定義文本</h3><p><code>custom_text</code>是一個給你用來在頁腳自定義文本的選項。通常你可以在這裏寫聲明文本等。支持 HTML。</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">custom_text</span><span class="token punctuation">:</span> Hi<span class="token punctuation">,</span> welcome to my &lt;a href="https<span class="token punctuation">:</span>//butterfly.js.org/"<span class="token punctuation">&gt;</span>blog&lt;/a<span class="token punctuation">&gt;</span><span class="token tag">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-footer-text.png"></p><p>對於部分人需要寫 ICP 的，也可以寫在 <code>custom_text</code>裏</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">custom_text</span><span class="token punctuation">:</span> &lt;a href="icp鏈接"<span class="token punctuation">&gt;</span>&lt;img class="icp<span class="token punctuation">-</span>icon" src="icp圖片"<span class="token punctuation">&gt;</span>&lt;span<span class="token punctuation">&gt;</span>備案號：xxxxxx&lt;/span<span class="token punctuation">&gt;</span>&lt;/a<span class="token punctuation">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="右下角按鈕"><a href="#右下角按鈕" class="headerlink" title="右下角按鈕"></a>右下角按鈕</h2><h3 id="簡繁轉換"><a href="#簡繁轉換" class="headerlink" title="簡繁轉換"></a>簡繁轉換</h3><p>簡體繁體互換</p><p>右下角會有簡繁轉換按鈕。</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">translate</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 默認按鈕顯示文字(網站是簡體，應設置為'default: 繁')</span>  <span class="token key atrule">default</span><span class="token punctuation">:</span> 簡  <span class="token comment">#網站默認語言，1: 繁體中文, 2: 簡體中文</span>  <span class="token key atrule">defaultEncoding</span><span class="token punctuation">:</span> <span class="token number">1</span>  <span class="token comment">#延遲時間,若不在前, 要設定延遲翻譯時間, 如100表示100ms,默認為0</span>  <span class="token key atrule">translateDelay</span><span class="token punctuation">:</span> <span class="token number">0</span>  <span class="token comment">#當文字是簡體時，按鈕顯示的文字</span>  <span class="token key atrule">msgToTraditionalChinese</span><span class="token punctuation">:</span> <span class="token string">"繁"</span>  <span class="token comment">#當文字是繁體時，按鈕顯示的文字</span>  <span class="token key atrule">msgToSimplifiedChinese</span><span class="token punctuation">:</span> <span class="token string">"簡"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>簡體</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-simp.png"></p><blockquote><p>繁體</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-tranditional.png"></p><h3 id="夜間模式"><a href="#夜間模式" class="headerlink" title="夜間模式"></a>夜間模式</h3><p>右下角會有夜間模式按鈕</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># dark mode</span><span class="token key atrule">darkmode</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># dark mode和 light mode切換按鈕</span>  <span class="token key atrule">button</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">autoChangeMode</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-dark-mode-1.png" alt="image-20201230201029381"></p><div class="note info flat"><p>V2.0.0 開始增加一個選項，可開啟自動切換light mode 和 dark mode</p><p>autoChangeMode: 1  跟隨系統而變化，不支持的瀏覽器/系統將按照時間晚上6點到早上6點之間切換為 dark mode</p><p>autoChangeMode: 2  只按照時間 晚上6點到早上6點之間切換為 dark mode,其餘時間為light mode</p><p>autoChangeMode: false 取消自動切換</p></div><h3 id="閲讀模式"><a href="#閲讀模式" class="headerlink" title="閲讀模式"></a>閲讀模式</h3><p>閲讀模式下會去掉除文章外的內容，避免幹擾閲讀。</p><p>只會出現在文章頁面，右下角會有閲讀模式按鈕。</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">readmode</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-read-mode.png"></p><h3 id="按鈕排序"><a href="#按鈕排序" class="headerlink" title="按鈕排序"></a>按鈕排序</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Don't modify the following settings unless you know how they work (非必要請不要修改 )</span><span class="token comment"># Choose: readmode,translate,darkmode,hideAside,toc,chat,comment</span><span class="token comment"># Don't repeat 不要重複</span><span class="token key atrule">rightside_item_order</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">hide</span><span class="token punctuation">:</span> <span class="token comment"># readmode,translate,darkmode,hideAside</span>  <span class="token key atrule">show</span><span class="token punctuation">:</span> <span class="token comment"># toc,chat,comment</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意： 不要重複</p><h2 id="側邊欄設置"><a href="#側邊欄設置" class="headerlink" title="側邊欄設置"></a>側邊欄設置</h2><h3 id="側邊排版"><a href="#側邊排版" class="headerlink" title="側邊排版"></a>側邊排版</h3><p>可自行決定哪個項目需要顯示，可決定位置，也可以設置不顯示側邊欄。</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">aside</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">hide</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">button</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">mobile</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 手機頁面（ 顯示寬度 &lt; 768px ）是否顯示aside內容</span>  <span class="token key atrule">position</span><span class="token punctuation">:</span> right <span class="token comment"># left or right</span>  <span class="token key atrule">card_author</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">description</span><span class="token punctuation">:</span>    <span class="token key atrule">button</span><span class="token punctuation">:</span>      <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">icon</span><span class="token punctuation">:</span> fab fa<span class="token punctuation">-</span>github      <span class="token key atrule">text</span><span class="token punctuation">:</span> Github      <span class="token key atrule">link</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/jerryc127/hexo<span class="token punctuation">-</span>theme<span class="token punctuation">-</span>butterfly  <span class="token key atrule">card_announcement</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">content</span><span class="token punctuation">:</span> This is my Blog  <span class="token key atrule">card_recent_post</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">5</span> <span class="token comment"># if set 0 will show all</span>    <span class="token key atrule">sort</span><span class="token punctuation">:</span> date <span class="token comment"># date or updated</span>  <span class="token key atrule">card_categories</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">8</span> <span class="token comment"># if set 0 will show all</span>    <span class="token key atrule">expand</span><span class="token punctuation">:</span> none <span class="token comment"># none/true/false</span>  <span class="token key atrule">card_tags</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">40</span> <span class="token comment"># if set 0 will show all</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">card_archives</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> monthly <span class="token comment"># yearly or monthly</span>    <span class="token key atrule">format</span><span class="token punctuation">:</span> MMMM YYYY <span class="token comment"># eg: YYYY年MM月</span>    <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token number">-1</span> <span class="token comment"># Sort of order. 1, asc for ascending; -1, desc for descending</span>    <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">8</span> <span class="token comment"># if set 0 will show all</span>  <span class="token key atrule">card_webinfo</span><span class="token punctuation">:</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">post_count</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">last_push_date</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>position: left</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-aside-left.png"></p><blockquote><p>position: right</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-aside-right.png"></p><blockquote><p>card_tags color: false</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/20200426182730.png"></p><blockquote><p>card_tags color: true</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/20200426183025.png"></p><blockquote><p>aside button</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-aside-button.gif"></p><h3 id="訪問人數-busuanzi-UV-和-PV"><a href="#訪問人數-busuanzi-UV-和-PV" class="headerlink" title="訪問人數 busuanzi (UV 和 PV)"></a>訪問人數 busuanzi (UV 和 PV)</h3><p>訪問 busuanzi 的<a href="http://busuanzi.ibruce.info/">官方網站</a>查看更多的介紹。</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">busuanzi</span><span class="token punctuation">:</span>  <span class="token key atrule">site_uv</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">site_pv</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">page_pv</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-busuanzi-site-pv.png"></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-pv.png"></p><h3 id="運行時間"><a href="#運行時間" class="headerlink" title="運行時間"></a>運行時間</h3><p>網頁已運行時間</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">runtimeshow</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">publish_date</span><span class="token punctuation">:</span> 6/7/2018 00<span class="token punctuation">:</span><span class="token datetime number">00:00</span>    <span class="token comment">##網頁開通時間</span>  <span class="token comment">#格式: 月/日/年 時間</span>  <span class="token comment">#也可以寫成 年/月/日 時間</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-runtime.png"></p><h3 id="最新評論"><a href="#最新評論" class="headerlink" title="最新評論"></a>最新評論</h3><blockquote><p>3.1.0 起支持</p></blockquote><div class="note primary flat"><p>最新評論只會在刷新時才會去讀取，並不會實時變化</p><p>由於 API 有 訪問次數限制，為了避免調用太多，主題默認存取期限為 10 分鐘。也就是説，調用後資料會存在 <em>localStorage</em> 裏，10分鐘內刷新網站只會去 <em>localStorage</em> 讀取資料。 10 分鐘期限一過，刷新頁面時才會去調取 API 讀取新的數據。（ 3.6.0 新增了 <code>storage</code> 配置，可自行配置緩存時間）</p></div><p>在側邊欄顯示最新評論板塊</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"># Aside widget <span class="token operator">-</span> Newest Comments<span class="token literal-property property">newest_comments</span><span class="token operator">:</span>  <span class="token literal-property property">enable</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token literal-property property">sort_order</span><span class="token operator">:</span> # Don't modify the setting unless you know how it works  <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">6</span>  <span class="token literal-property property">storage</span><span class="token operator">:</span> <span class="token number">10</span> # unit<span class="token operator">:</span> mins<span class="token punctuation">,</span> save data to localStorage  <span class="token literal-property property">avatar</span><span class="token operator">:</span> <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>部分配置解釋：</p><table><thead><tr><th>配置</th><th>解釋</th></tr></thead><tbody><tr><td>limit</td><td>顯示的數量</td></tr><tr><td>storage</td><td>設置緩存時間，單位 分鐘</td></tr><tr><td>avatar</td><td>是否顯示頭像</td></tr></tbody></table><blockquote><p>Demo</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-newest-comments.png" alt="image-20200830223037320"></p><h3 id="自定義添加欄目"><a href="#自定義添加欄目" class="headerlink" title="自定義添加欄目"></a>自定義添加欄目</h3><a class="btn-beautify block green" href="/posts/ea33ab97.html" title="點擊前往"><i class="fas fa-lightbulb"></i><span>點擊前往</span></a><h2 id="標籤外掛（Tag-Plugins）"><a href="#標籤外掛（Tag-Plugins）" class="headerlink" title="標籤外掛（Tag Plugins）"></a>標籤外掛（Tag Plugins）</h2><div class="note info flat"><p>標籤外掛是Hexo獨有的功能，並不是標準的Markdown格式。</p><p>以下的寫法，只適用於Butterfly主題，用在其它主題上不會有效果，甚至可能會報錯。使用前請留意</p></div><div class="note warning flat"><p>標籤外掛雖然能為主題帶來一些額外的功能和UI方面的強化，但是，標籤外掛也有明顯的限制，使用時請留意。</p></div><h3 id="Note-Bootstrap-Callout"><a href="#Note-Bootstrap-Callout" class="headerlink" title="Note (Bootstrap Callout)"></a>Note (Bootstrap Callout)</h3><div class="tabs" id="note"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#note-1">通用設置</button></li><li class="tab"><button type="button" data-href="#note-2">用法 1</button></li><li class="tab"><button type="button" data-href="#note-3">用法 2（自定義 icon）</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="note-1"><p>移植於next主題，並進行修改。</p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">note</span><span class="token punctuation">:</span>  <span class="token comment"># Note tag style values:</span>  <span class="token comment">#  - simple    bs-callout old alert style. Default.</span>  <span class="token comment">#  - modern    bs-callout new (v2-v3) alert style.</span>  <span class="token comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span>  <span class="token comment">#  - disabled  disable all CSS styles import of note tag.</span>  <span class="token key atrule">style</span><span class="token punctuation">:</span> simple  <span class="token key atrule">icons</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">border_radius</span><span class="token punctuation">:</span> <span class="token number">3</span>  <span class="token comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span>  <span class="token comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span>  <span class="token key atrule">light_bg_offset</span><span class="token punctuation">:</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>icons</code>和<code>light_bg_offset</code>只對<em>方法一</em>生效</p><p>Note 標籤外掛有兩種用法</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-2"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note <span class="token url">[<span class="token content">class</span>] [<span class="token variable">no-icon</span>]</span> [style] %}Any content (support inline tags too.io).{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>名稱</th><th>用法</th></tr></thead><tbody><tr><td>class</td><td>【可選】標識，不同的標識有不同的配色<br>（ default / primary / success / info / warning / danger ）</td></tr><tr><td>no-icon</td><td>【可選】不顯示 icon</td></tr><tr><td>style</td><td>【可選】可以覆蓋配置中的 style <br>（simple/modern/flat/disabled）</td></tr></tbody></table><blockquote><p>simple</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note simple %}默認 提示塊標籤{% endnote %}{% note default simple %}default 提示塊標籤{% endnote %}{% note primary simple %}primary 提示塊標籤{% endnote %}{% note success simple %}success 提示塊標籤{% endnote %}{% note info simple %}info 提示塊標籤{% endnote %}{% note warning simple %}warning 提示塊標籤{% endnote %}{% note danger simple %}danger 提示塊標籤{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note simple"><p>默認 提示塊標籤</p></div><div class="note default simple"><p>default 提示塊標籤</p></div><div class="note primary simple"><p>primary 提示塊標籤</p></div><div class="note success simple"><p>success 提示塊標籤</p></div><div class="note info simple"><p>info 提示塊標籤</p></div><div class="note warning simple"><p>warning 提示塊標籤</p></div><div class="note danger simple"><p>danger 提示塊標籤</p></div><blockquote><p>modern</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note modern %}默認 提示塊標籤{% endnote %}{% note default modern %}default 提示塊標籤{% endnote %}{% note primary modern %}primary 提示塊標籤{% endnote %}{% note success modern %}success 提示塊標籤{% endnote %}{% note info modern %}info 提示塊標籤{% endnote %}{% note warning modern %}warning 提示塊標籤{% endnote %}{% note danger modern %}danger 提示塊標籤{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note modern"><p>默認 提示塊標籤</p></div><div class="note default modern"><p>default 提示塊標籤</p></div><div class="note primary modern"><p>primary 提示塊標籤</p></div><div class="note success modern"><p>success 提示塊標籤</p></div><div class="note info modern"><p>info 提示塊標籤</p></div><div class="note warning modern"><p>warning 提示塊標籤</p></div><div class="note danger modern"><p>danger 提示塊標籤</p></div><blockquote><p>flat</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note flat %}默認 提示塊標籤{% endnote %}{% note default flat %}default 提示塊標籤{% endnote %}{% note primary flat %}primary 提示塊標籤{% endnote %}{% note success flat %}success 提示塊標籤{% endnote %}{% note info flat %}info 提示塊標籤{% endnote %}{% note warning flat %}warning 提示塊標籤{% endnote %}{% note danger flat %}danger 提示塊標籤{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note flat"><p>默認 提示塊標籤</p></div><div class="note default flat"><p>default 提示塊標籤</p></div><div class="note primary flat"><p>primary 提示塊標籤</p></div><div class="note success flat"><p>success 提示塊標籤</p></div><div class="note info flat"><p>info 提示塊標籤</p></div><div class="note warning flat"><p>warning 提示塊標籤</p></div><div class="note danger flat"><p>danger 提示塊標籤</p></div><blockquote><p>disabled</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note disabled %}默認 提示塊標籤{% endnote %}{% note default disabled %}default 提示塊標籤{% endnote %}{% note primary disabled %}primary 提示塊標籤{% endnote %}{% note success disabled %}success 提示塊標籤{% endnote %}{% note info disabled %}info 提示塊標籤{% endnote %}{% note warning disabled %}warning 提示塊標籤{% endnote %}{% note danger disabled %}danger 提示塊標籤{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note disabled"><p>默認 提示塊標籤</p></div><div class="note default disabled"><p>default 提示塊標籤</p></div><div class="note primary disabled"><p>primary 提示塊標籤</p></div><div class="note success disabled"><p>success 提示塊標籤</p></div><div class="note info disabled"><p>info 提示塊標籤</p></div><div class="note warning disabled"><p>warning 提示塊標籤</p></div><div class="note danger disabled"><p>danger 提示塊標籤</p></div><blockquote><p>no-icon</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note no-icon %}默認 提示塊標籤{% endnote %}{% note default no-icon %}default 提示塊標籤{% endnote %}{% note primary no-icon %}primary 提示塊標籤{% endnote %}{% note success no-icon %}success 提示塊標籤{% endnote %}{% note info no-icon %}info 提示塊標籤{% endnote %}{% note warning no-icon %}warning 提示塊標籤{% endnote %}{% note danger no-icon %}danger 提示塊標籤{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note no-icon flat"><p>默認 提示塊標籤</p></div><div class="note default no-icon flat"><p>default 提示塊標籤</p></div><div class="note primary no-icon flat"><p>primary 提示塊標籤</p></div><div class="note success no-icon flat"><p>success 提示塊標籤</p></div><div class="note info no-icon flat"><p>info 提示塊標籤</p></div><div class="note warning no-icon flat"><p>warning 提示塊標籤</p></div><div class="note danger no-icon flat"><p>danger 提示塊標籤</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="note-3"><blockquote><p>3.2.0 以上版本支</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note <span class="token url">[<span class="token content">color</span>] [<span class="token variable">icon</span>]</span> [style] %}Any content (support inline tags too.io).{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>名稱</th><th>用法</th></tr></thead><tbody><tr><td>color</td><td>【可選】顔色 <br>(default / blue / pink / red / purple / orange / green)</td></tr><tr><td>icon</td><td>【可選】可配置自定義 icon (只支持 fontawesome 圖標, 也可以配置 no-icon )</td></tr><tr><td>style</td><td>【可選】可以覆蓋配置中的 style<br>（simple/modern/flat/disabled）</td></tr></tbody></table><blockquote><p>simple</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note 'fab fa-cc-visa' simple %}你是刷 Visa 還是 UnionPay{% endnote %}{% note blue 'fas fa-bullhorn' simple %}2021年快到了....{% endnote %}{% note pink 'fas fa-car-crash' simple %}小心開車 安全至上{% endnote %}{% note red 'fas fa-fan' simple%}這是三片呢？還是四片？{% endnote %}{% note orange 'fas fa-battery-half' simple %}你是刷 Visa 還是 UnionPay{% endnote %}{% note purple 'far fa-hand-scissors' simple %}剪刀石頭布{% endnote %}{% note green 'fab fa-internet-explorer' simple %}前端最討厭的瀏覽器{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note icon simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note blue icon simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon simple"><i class="note-icon fas fa-car-crash"></i><p>小心開車 安全至上</p></div><div class="note red icon simple"><i class="note-icon fas fa-fan"></i><p>這是三片呢？還是四片？</p></div><div class="note orange icon simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note purple icon simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石頭布</p></div><div class="note green icon simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最討厭的瀏覽器</p></div><blockquote><p>modern</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note 'fab fa-cc-visa' modern %}你是刷 Visa 還是 UnionPay{% endnote %}{% note blue 'fas fa-bullhorn' modern %}2021年快到了....{% endnote %}{% note pink 'fas fa-car-crash' modern %}小心開車 安全至上{% endnote %}{% note red 'fas fa-fan' modern%}這是三片呢？還是四片？{% endnote %}{% note orange 'fas fa-battery-half' modern %}你是刷 Visa 還是 UnionPay{% endnote %}{% note purple 'far fa-hand-scissors' modern %}剪刀石頭布{% endnote %}{% note green 'fab fa-internet-explorer' modern %}前端最討厭的瀏覽器{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note icon modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon modern"><i class="note-icon fas fa-car-crash"></i><p>小心開車 安全至上</p></div><div class="note red icon modern"><i class="note-icon fas fa-fan"></i><p>這是三片呢？還是四片？</p></div><div class="note orange icon modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note purple icon modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石頭布</p></div><div class="note green icon modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最討厭的瀏覽器</p></div><blockquote><p>flat</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note 'fab fa-cc-visa' flat %}你是刷 Visa 還是 UnionPay{% endnote %}{% note blue 'fas fa-bullhorn' flat %}2021年快到了....{% endnote %}{% note pink 'fas fa-car-crash' flat %}小心開車 安全至上{% endnote %}{% note red 'fas fa-fan' flat%}這是三片呢？還是四片？{% endnote %}{% note orange 'fas fa-battery-half' flat %}你是刷 Visa 還是 UnionPay{% endnote %}{% note purple 'far fa-hand-scissors' flat %}剪刀石頭布{% endnote %}{% note green 'fab fa-internet-explorer' flat %}前端最討厭的瀏覽器{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note icon flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon flat"><i class="note-icon fas fa-car-crash"></i><p>小心開車 安全至上</p></div><div class="note red icon flat"><i class="note-icon fas fa-fan"></i><p>這是三片呢？還是四片？</p></div><div class="note orange icon flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note purple icon flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石頭布</p></div><div class="note green icon flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最討厭的瀏覽器</p></div><blockquote><p>disabled</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note 'fab fa-cc-visa' disabled %}你是刷 Visa 還是 UnionPay{% endnote %}{% note blue 'fas fa-bullhorn' disabled %}2021年快到了....{% endnote %}{% note pink 'fas fa-car-crash' disabled %}小心開車 安全至上{% endnote %}{% note red 'fas fa-fan' disabled %}這是三片呢？還是四片？{% endnote %}{% note orange 'fas fa-battery-half' disabled %}你是刷 Visa 還是 UnionPay{% endnote %}{% note purple 'far fa-hand-scissors' disabled %}剪刀石頭布{% endnote %}{% note green 'fab fa-internet-explorer' disabled %}前端最討厭的瀏覽器{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note icon disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note blue icon disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon disabled"><i class="note-icon fas fa-car-crash"></i><p>小心開車 安全至上</p></div><div class="note red icon disabled"><i class="note-icon fas fa-fan"></i><p>這是三片呢？還是四片？</p></div><div class="note orange icon disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note purple icon disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石頭布</p></div><div class="note green icon disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最討厭的瀏覽器</p></div><blockquote><p>no-icon</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note no-icon %}你是刷 Visa 還是 UnionPay{% endnote %}{% note blue no-icon %}2021年快到了....{% endnote %}{% note pink no-icon %}小心開車 安全至上{% endnote %}{% note red no-icon %}這是三片呢？還是四片？{% endnote %}{% note orange no-icon %}你是刷 Visa 還是 UnionPay{% endnote %}{% note purple no-icon %}剪刀石頭布{% endnote %}{% note green no-icon %}前端最討厭的瀏覽器{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note no-icon flat"><p>你是刷 Visa 還是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了….</p></div><div class="note pink no-icon flat"><p>小心開車 安全至上</p></div><div class="note red no-icon flat"><p>這是三片呢？還是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 還是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石頭布</p></div><div class="note green no-icon flat"><p>前端最討厭的瀏覽器</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="Gallery相冊圖庫"><a href="#Gallery相冊圖庫" class="headerlink" title="Gallery相冊圖庫"></a>Gallery相冊圖庫</h3><blockquote><p>2.2.0以上提供</p></blockquote><p>一個圖庫集合。</p><p>寫法</p><pre class="line-numbers language-none"><code class="language-none">&lt;div class="gallery-group-main"&gt;{% galleryGroup name description link img-url %}{% galleryGroup name description link img-url %}{% galleryGroup name description link img-url %}&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>name：圖庫名字</li><li>description：圖庫描述</li><li>link：連接到對應相冊的地址</li><li>img-url：圖庫封面的地址</li></ul><p>例如：</p><pre class="line-numbers language-none"><code class="language-none">&lt;div class="gallery-group-main"&gt;{% galleryGroup '壁紙' '收藏的一些壁紙' '/Gallery/wallpaper' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}{% galleryGroup '漫威' '關於漫威的圖片' '/Gallery/marvel' https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg %}{% galleryGroup 'OH MY GIRL' '關於OH MY GIRL的圖片' '/Gallery/ohmygirl' https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg %}&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src="https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png" alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">壁紙</div>  <p>收藏的一些壁紙</p>  <a href="/Gallery/wallpaper"></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src="https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg" alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">漫威</div>  <p>關於漫威的圖片</p>  <a href="/Gallery/marvel"></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src="https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg" alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>關於OH MY GIRL的圖片</p>  <a href="/Gallery/ohmygirl"></a>  </figcaption>  </figure>  </div><h3 id="Gallery相冊"><a href="#Gallery相冊" class="headerlink" title="Gallery相冊"></a>Gallery相冊</h3><blockquote><p>2.0.0以上提供</p></blockquote><p>區別於舊版的Gallery相冊,新的Gallery相冊會自動根據圖片長度進行排版，書寫也更加方便，與markdown格式一樣。可根據需要插入到相應的md。</p><p>寫法:</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% gallery %}markdown 圖片格式{% endgallery %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>例如</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% gallery %}![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg){% endgallery %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg"><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg"><br><img src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg"><br><img src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg"><br><img src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg"><br><img src="https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg"><br><img src="https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg"><br><img src="https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg"></p>          </div><h3 id="tag-hide"><a href="#tag-hide" class="headerlink" title="tag-hide"></a>tag-hide</h3><div class="note warning flat"><p>2.2.0以上提供</p><p>請注意，tag-hide內的標簽外掛content內都不建議有h1 - h6 等標題。因為Toc會把隱藏內容標題也顯示出來，而且當滾動屏幕時，如果隱藏內容沒有顯示出來，會導致Toc的滾動出現異常。</p></div><p>如果你想把一些文字、內容隱藏起來，並提供按鈕讓用戶點擊顯示。可以使用這個標籤外掛。</p><div class="tabs" id="tag-hide"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tag-hide-1">Inline</button></li><li class="tab"><button type="button" data-href="#tag-hide-2">Block</button></li><li class="tab"><button type="button" data-href="#tag-hide-3">Toggle</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tag-hide-1"><p><code>inline</code> 在文本里面添加按鈕隱藏內容，只限文字</p><p>( content不能包含英文逗號，可用<code>&amp;sbquo;</code>)</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% hideInline content,display,bg,color %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>content: 文本內容</p></li><li><p>display: 按鈕顯示的文字(可選)</p></li><li><p>bg: 按鈕的背景顏色(可選)</p></li><li><p>color: 按鈕文字的顏色(可選)</p></li></ul><blockquote><p>Demo</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">哪個英文字母最酷？ {% hideInline 因為西裝褲(C裝酷),查看答案,#FF7242,#fff %}門裏站着一個人? {% hideInline 閃 %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>哪個英文字母最酷？ <span class="hide-inline"><button type="button" class="hide-button" style="background-color: #FF7242;color: #fff">查看答案<br>  </button><span class="hide-content">因為西裝褲(C裝酷)</span></span></p><p>門裏站着一個人? <span class="hide-inline"><button type="button" class="hide-button" style="">Click<br>  </button><span class="hide-content">閃</span></span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tag-hide-2"><p><code>block</code>獨立的block隱藏內容，可以隱藏很多內容，包括圖片，代碼塊等等</p><p>( display 不能包含英文逗號，可用<code>&amp;sbquo;</code>)</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% hideBlock display,bg,color %}content{% endhideBlock %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>content: 文本內容</li><li>display: 按鈕顯示的文字(可選)</li><li>bg: 按鈕的背景顏色(可選)</li><li>color: 按鈕文字的顏色(可選)</li></ul><blockquote><p>Demo</p></blockquote><pre class="line-numbers language-mark" data-language="mark"><code class="language-mark">查看答案{% hideBlock 查看答案 %}傻子，怎麼可能有答案{% endhideBlock %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>查看答案</p><div class="hide-block"><button type="button" class="hide-button" style="">查看答案    </button><div class="hide-content"><p>傻子，怎麼可能有答案</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tag-hide-3"><blockquote><p>2.3.0以上支持</p></blockquote><p>如果你需要展示的內容太多，可以把它隱藏在收縮框裏，需要時再把它展開。</p><p>( display 不能包含英文逗號，可用<code>&amp;sbquo;</code>)</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% hideToggle display,bg,color %}content{% endhideToggle %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>Demo</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% hideToggle Butterfly安裝方法 %}在你的博客根目錄裏git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly如果想要安裝比較新的dev分支，可以git clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly{% endhideToggle %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><details class="toggle"><summary class="toggle-button" style="">Butterfly安裝方法</summary><div class="toggle-content"><p>在你的博客根目錄裏</p><p>git clone -b master <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes/Butterfly</p><p>如果想要安裝比較新的dev分支，可以</p><p>git clone -b dev <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes/Butterfly</p></div></details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="mermaid"><a href="#mermaid" class="headerlink" title="mermaid"></a>mermaid</h3><p>使用mermaid標籤可以繪製Flowchart（流程圖）、Sequence diagram（時序圖 ）、Class Diagram（類別圖）、State Diagram（狀態圖）、Gantt（甘特圖）和Pie Chart（圓形圖），具體可以查看<a href="https://mermaid-js.github.io/mermaid/#/">mermaid文檔</a></p><p>修改 <code>主題配置文件</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># mermaid</span><span class="token comment"># see https://github.com/mermaid-js/mermaid</span><span class="token key atrule">mermaid</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># built-in themes: default/forest/dark/neutral</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span>    <span class="token key atrule">light</span><span class="token punctuation">:</span> default    <span class="token key atrule">dark</span><span class="token punctuation">:</span> dark<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>寫法：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% mermaid %}內容{% endmermaid %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>例如：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% mermaid %}pie    title Key elements in Product X    "Calcium" : 42.96    "Potassium" : 50.05    "Magnesium" : 10.01    "Iron" :  5{% endmermaid %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-mermaid.png"></p><h3 id="Tabs"><a href="#Tabs" class="headerlink" title="Tabs"></a>Tabs</h3><p>移植於next主題</p><p>使用方法</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% tabs Unique name, [index] %}<span class="token comment">&lt;!-- tab [Tab caption] [@icon] --&gt;</span>Any content (support inline tags too).<span class="token comment">&lt;!-- endtab --&gt;</span>{% endtabs %}Unique name   : Unique name of tabs block tag without comma.                Will be used in #id's as prefix for each tab with their index numbers.                If there are whitespaces in name, for generate #id all whitespaces will replaced by dashes.                Only for current url of post/page must be unique![index]       : Index number of active tab.                If not specified, first tab (1) will be selected.                If index is -1, no tab will be selected. It's will be something like spoiler.                Optional parameter.[Tab caption] : Caption of current tab.                If not caption specified, unique name with tab index suffix will be used as caption of tab.                If not caption specified, but specified icon, caption will empty.                Optional parameter.[@icon]       : FontAwesome icon name (full-name, look like 'fas fa-font')                Can be specified with or without space; e.g. 'Tab caption @icon' similar to 'Tab caption@icon'.                Optional parameter.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>Demo 1 - 預設選擇第一個【默認】</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% tabs test1 %}<span class="token comment">&lt;!-- tab --&gt;</span><span class="token bold"><span class="token punctuation">**</span><span class="token content">This is Tab 1.</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --&gt;</span><span class="token comment">&lt;!-- tab --&gt;</span><span class="token bold"><span class="token punctuation">**</span><span class="token content">This is Tab 2.</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --&gt;</span><span class="token comment">&lt;!-- tab --&gt;</span><span class="token bold"><span class="token punctuation">**</span><span class="token content">This is Tab 3.</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --&gt;</span>{% endtabs %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><blockquote><p>Demo 2 - 預設選擇tabs</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% tabs test2, 3 %}<span class="token comment">&lt;!-- tab --&gt;</span><span class="token bold"><span class="token punctuation">**</span><span class="token content">This is Tab 1.</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --&gt;</span><span class="token comment">&lt;!-- tab --&gt;</span><span class="token bold"><span class="token punctuation">**</span><span class="token content">This is Tab 2.</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --&gt;</span><span class="token comment">&lt;!-- tab --&gt;</span><span class="token bold"><span class="token punctuation">**</span><span class="token content">This is Tab 3.</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --&gt;</span>{% endtabs %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><blockquote><p>Demo 3 - 沒有預設值</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% tabs test3, -1 %}<span class="token comment">&lt;!-- tab --&gt;</span><span class="token bold"><span class="token punctuation">**</span><span class="token content">This is Tab 1.</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --&gt;</span><span class="token comment">&lt;!-- tab --&gt;</span><span class="token bold"><span class="token punctuation">**</span><span class="token content">This is Tab 2.</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --&gt;</span><span class="token comment">&lt;!-- tab --&gt;</span><span class="token bold"><span class="token punctuation">**</span><span class="token content">This is Tab 3.</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --&gt;</span>{% endtabs %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><blockquote><p>Demo 4 - 自定義Tab名 + 只有icon + icon和Tab名</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% tabs test4 %}<span class="token comment">&lt;!-- tab 第一個Tab --&gt;</span><span class="token bold"><span class="token punctuation">**</span><span class="token content">tab名字為第一個Tab</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --&gt;</span><span class="token comment">&lt;!-- tab @fab fa-apple-pay --&gt;</span><span class="token bold"><span class="token punctuation">**</span><span class="token content">只有圖標 沒有Tab名字</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --&gt;</span><span class="token comment">&lt;!-- tab 炸彈@fas fa-bomb --&gt;</span><span class="token bold"><span class="token punctuation">**</span><span class="token content">名字+icon</span><span class="token punctuation">**</span></span><span class="token comment">&lt;!-- endtab --&gt;</span>{% endtabs %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一個Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸彈</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字為第一個Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有圖標 沒有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h3><blockquote><p>3.0以上適用</p></blockquote><p>使用方法：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% btn [url],[text],[icon],<span class="token url">[<span class="token content">color</span>] [<span class="token variable">style</span>]</span> <span class="token url">[<span class="token content">layout</span>] [<span class="token variable">position</span>]</span> [size] %}[url]         : 鏈接[text]        : 按鈕文字[icon]        : [可選] 圖標[color]       : [可選] 按鈕背景顔色(默認style時）                      按鈕字體和邊框顔色(outline時)                      default/blue/pink/red/purple/orange/green[style]       : [可選] 按鈕樣式 默認實心                      outline/留空[layout]      : [可選] 按鈕佈局 默認為line                      block/留空[position]    : [可選] 按鈕位置 前提是設置了layout為block 默認為左邊                      center/right/留空[size]        : [可選] 按鈕大小                      larger/留空<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>Demo</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">This is my website, click the button {% btn 'https://butterfly.js.org/',Butterfly %}This is my website, click the button {% btn 'https://butterfly.js.org/',Butterfly,far fa-hand-point-right %}This is my website, click the button {% btn 'https://butterfly.js.org/',Butterfly,,outline %}This is my website, click the button {% btn 'https://butterfly.js.org/',Butterfly,far fa-hand-point-right,outline %}This is my website, click the button {% btn 'https://butterfly.js.org/',Butterfly,far fa-hand-point-right,larger %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>This is my website, click the button <a class="btn-beautify " href="https://butterfly.js.org/" title="Butterfly"><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify " href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org/" title="Butterfly"><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% btn 'https://butterfly.js.org/',Butterfly,far fa-hand-point-right,block %}{% btn 'https://butterfly.js.org/',Butterfly,far fa-hand-point-right,block center larger %}{% btn 'https://butterfly.js.org/',Butterfly,far fa-hand-point-right,block right outline larger %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><a class="btn-beautify block" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify block center larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify block right outline larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><p><strong>more than one button in center</strong></p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% btn 'https://butterfly.js.org/',Butterfly,far fa-hand-point-right,larger %}{% btn 'https://butterfly.js.org/',Butterfly,far fa-hand-point-right,blue larger %}{% btn 'https://butterfly.js.org/',Butterfly,far fa-hand-point-right,pink larger %}{% btn 'https://butterfly.js.org/',Butterfly,far fa-hand-point-right,red larger %}{% btn 'https://butterfly.js.org/',Butterfly,far fa-hand-point-right,purple larger %}{% btn 'https://butterfly.js.org/',Butterfly,far fa-hand-point-right,orange larger %}{% btn 'https://butterfly.js.org/',Butterfly,far fa-hand-point-right,green larger %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><a class="btn-beautify larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify blue larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify pink larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify red larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify purple larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify orange larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify green larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-center<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>{% btn 'https://butterfly.js.org/',Butterfly,far fa-hand-point-right,outline larger %}{% btn 'https://butterfly.js.org/',Butterfly,far fa-hand-point-right,outline blue larger %}{% btn 'https://butterfly.js.org/',Butterfly,far fa-hand-point-right,outline pink larger %}{% btn 'https://butterfly.js.org/',Butterfly,far fa-hand-point-right,outline red larger %}{% btn 'https://butterfly.js.org/',Butterfly,far fa-hand-point-right,outline purple larger %}{% btn 'https://butterfly.js.org/',Butterfly,far fa-hand-point-right,outline orange larger %}{% btn 'https://butterfly.js.org/',Butterfly,far fa-hand-point-right,outline green larger %}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="btn-center"><a class="btn-beautify outline larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline blue larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline pink larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline red larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline purple larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline orange larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline green larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></div><h3 id="inlineImg"><a href="#inlineImg" class="headerlink" title="inlineImg"></a>inlineImg</h3><p>主題中的圖片都是默認以<code>塊級元素</code>顯示，如果你想以<code>內聯元素</code>顯示，可以使用這個標簽外掛。</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% inlineImg <span class="token url">[<span class="token content">src</span>] [<span class="token variable">height</span>]</span> %}[src]      :    圖片鏈接[height]   ：   圖片高度限制【可選】<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>Demo</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">你看我長得漂亮不![](https://i.loli.net/2021/03/19/2P6ivUGsdaEXSFI.png)我覺得很漂亮 {% inlineImg https://i.loli.net/2021/03/19/5M4jUB3ynq7ePgw.png 150px %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN@m2/img/hexo-theme-butterfly-docs-inlineimg.png" alt="image-20210319001204045"></p><h3 id="label"><a href="#label" class="headerlink" title="label"></a>label</h3><blockquote><p>3.7.5 及以上版本適用</p></blockquote><p>高亮所需的文字</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% label text color %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><table><thead><tr><th>參數</th><th>解釋</th></tr></thead><tbody><tr><td>text</td><td>文字</td></tr><tr><td>color</td><td>【可選】背景顏色，默認為 <code>default</code><br>default/blue/pink/red/purple/orange/green</td></tr></tbody></table><blockquote><p>Demo</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">臣亮言：{% label 先帝 %}創業未半，而{% label 中道崩殂 blue %}。今天下三分，{% label 益州疲敝 pink %}，此誠{% label 危急存亡之秋 red %}也！然侍衞之臣，不懈於內；{% label 忠志之士 purple %}，忘身於外者，蓋追先帝之殊遇，欲報之於陛下也。誠宜開張聖聽，以光先帝遺德，恢弘志士之氣；不宜妄自菲薄，引喻失義，以塞忠諫之路也。宮中、府中，俱為一體；陟罰臧否，不宜異同。若有{% label 作奸 orange %}、{% label 犯科 green %}，及為忠善者，宜付有司，論其刑賞，以昭陛下平明之治；不宜偏私，使內外異法也。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>臣亮言：<mark class="hl-label default">先帝</mark> 創業未半，而<mark class="hl-label blue">中道崩殂</mark> 。今天下三分，<mark class="hl-label pink">益州疲敝</mark> ，此誠<mark class="hl-label red">危急存亡之秋</mark> 也！然侍衞之臣，不懈於內；<mark class="hl-label purple">忠志之士</mark> ，忘身於外者，蓋追先帝之殊遇，欲報之於陛下也。誠宜開張聖聽，以光先帝遺德，恢弘志士之氣；不宜妄自菲薄，引喻失義，以塞忠諫之路也。</p><p>宮中、府中，俱為一體；陟罰臧否，不宜異同。若有<mark class="hl-label orange">作奸</mark> 、<mark class="hl-label green">犯科</mark> ，及為忠善者，宜付有司，論其刑賞，以昭陛下平明之治；不宜偏私，使內外異法也。</p><h3 id="timeline"><a href="#timeline" class="headerlink" title="timeline"></a>timeline</h3><blockquote><p>4.0.0 以上支持</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% timeline title,color %}<span class="token comment">&lt;!-- timeline title --&gt;</span>xxxxx<span class="token comment">&lt;!-- endtimeline --&gt;</span><span class="token comment">&lt;!-- timeline title --&gt;</span>xxxxx<span class="token comment">&lt;!-- endtimeline --&gt;</span>{% endtimeline %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>參數</th><th>解釋</th></tr></thead><tbody><tr><td>title</td><td>標題/時間線</td></tr><tr><td>color</td><td>timeline 顏色<br>default(留空) / blue / pink / red / purple / orange / green</td></tr></tbody></table><blockquote><p>Demo</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% timeline 2022 %}<span class="token comment">&lt;!-- timeline 01-02 --&gt;</span>這是測試頁面<span class="token comment">&lt;!-- endtimeline --&gt;</span>{% endtimeline %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="timeline undefined"><div class="timeline-item headline"><div class="timeline-item-title"><div class="item-circle"><p>2022</p></div></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>01-02</p></div></div><div class="timeline-item-content"><p>這是測試頁面</p></div></div></div><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% timeline 2022,blue %}<span class="token comment">&lt;!-- timeline 01-02 --&gt;</span>這是測試頁面<span class="token comment">&lt;!-- endtimeline --&gt;</span>{% endtimeline %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="timeline blue"><div class="timeline-item headline"><div class="timeline-item-title"><div class="item-circle"><p>2022</p></div></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>01-02</p></div></div><div class="timeline-item-content"><p>這是測試頁面</p></div></div></div><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% timeline 2022,pink %}<span class="token comment">&lt;!-- timeline 01-02 --&gt;</span>這是測試頁面<span class="token comment">&lt;!-- endtimeline --&gt;</span>{% endtimeline %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="timeline pink"><div class="timeline-item headline"><div class="timeline-item-title"><div class="item-circle"><p>2022</p></div></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>01-02</p></div></div><div class="timeline-item-content"><p>這是測試頁面</p></div></div></div><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% timeline 2022,red %}<span class="token comment">&lt;!-- timeline 01-02 --&gt;</span>這是測試頁面<span class="token comment">&lt;!-- endtimeline --&gt;</span>{% endtimeline %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="timeline red"><div class="timeline-item headline"><div class="timeline-item-title"><div class="item-circle"><p>2022</p></div></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>01-02</p></div></div><div class="timeline-item-content"><p>這是測試頁面</p></div></div></div><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% timeline 2022,purple %}<span class="token comment">&lt;!-- timeline 01-02 --&gt;</span>這是測試頁面<span class="token comment">&lt;!-- endtimeline --&gt;</span>{% endtimeline %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="timeline purple"><div class="timeline-item headline"><div class="timeline-item-title"><div class="item-circle"><p>2022</p></div></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>01-02</p></div></div><div class="timeline-item-content"><p>這是測試頁面</p></div></div></div><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% timeline 2022,orange %}<span class="token comment">&lt;!-- timeline 01-02 --&gt;</span>這是測試頁面<span class="token comment">&lt;!-- endtimeline --&gt;</span>{% endtimeline %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="timeline orange"><div class="timeline-item headline"><div class="timeline-item-title"><div class="item-circle"><p>2022</p></div></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>01-02</p></div></div><div class="timeline-item-content"><p>這是測試頁面</p></div></div></div><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% timeline 2022,green %}<span class="token comment">&lt;!-- timeline 01-02 --&gt;</span>這是測試頁面<span class="token comment">&lt;!-- endtimeline --&gt;</span>{% endtimeline %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="timeline green"><div class="timeline-item headline"><div class="timeline-item-title"><div class="item-circle"><p>2022</p></div></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>01-02</p></div></div><div class="timeline-item-content"><p>這是測試頁面</p></div></div></div><h3 id="flink"><a href="#flink" class="headerlink" title="flink"></a>flink</h3><blockquote><p>4.1.0 支持</p></blockquote><p>可在任何界面插入類似友情鏈接列表效果</p><p>內容格式與友情鏈接界面一樣，支持 yml 格式</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% flink %}xxxxxx{% endflink %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>Demo</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% flink %}<span class="token list punctuation">-</span> class_name: 友情鏈接  class_desc: 那些人，那些事  link_list:    <span class="token list punctuation">-</span> name: JerryC      link: https://jerryc.me/      avatar: https://jerryc.me/img/avatar.png      descr: 今日事,今日畢    <span class="token list punctuation">-</span> name: Hexo      link: https://hexo.io/zh-tw/      avatar: https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg      descr: 快速、簡單且強大的網誌框架<span class="token list punctuation">-</span> class_name: 網站  class_desc: 值得推薦的網站  link_list:    <span class="token list punctuation">-</span> name: Youtube      link: https://www.youtube.com/      avatar: https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png      descr: 視頻網站    <span class="token list punctuation">-</span> name: Weibo      link: https://www.weibo.com/      avatar: https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png      descr: 中國最大社交分享平臺    <span class="token list punctuation">-</span> name: Twitter      link: https://twitter.com/      avatar: https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png      descr: 社交分享平臺{% endflink %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN@m2/img/hexo-theme-butterfly-docs-flink-demo.png"></p><a class="btn-beautify block red right larger" href="/posts/ceeb73f.html" title="⚔️ Butterfly-安裝文檔-四-主題配置-2"><i class="far fa-hand-point-right"></i><span>⚔️ Butterfly-安裝文檔-四-主題配置-2</span></a>]]></content>
      
      
      <categories>
          
          <category> Docs文檔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Hexo </tag>
            
            <tag> 主題 </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly 安裝文檔(二) 主題頁面</title>
      <link href="/posts/dc584b87.html"/>
      <url>/posts/dc584b87.html</url>
      
        <content type="html"><![CDATA[<div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>📖  本教程更新於 2022 年 02 月 13 日，教程的內容針對最新<strong>穩定版</strong>而更新（如果你是舊版，教程會有些出入，請留意）</p><p>🦋  Butterfly 已經更新到 <a href="https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.1.0">4.1.0</a></p></div><div class="note green icon flat"><i class="note-icon fas fa-rocket"></i><p> 📚  文檔目錄</p><p><a href="#">Post not found: Butterfly-安裝文檔-一-快速開始 🚀 快速開始</a> - <a href="#">Post not found: Butterfly-安裝文檔-二-主題頁面 📑 主題頁面</a> - <a href="#">Post not found: Butterfly-安裝文檔-三-主題配置-1 🛠 主題配置-1</a> - <a href="#">Post not found: Butterfly-安裝文檔-四-主題配置-2 ⚔️ 主題配置-2</a> - <a href="#">Post not found: Butterfly-安裝文檔-五-主題問答 ❓ 主題問答</a> - <a href="#">Post not found: Butterfly-安裝文檔-六-進階教程 ⚡️ 進階教程</a> - <a href="#">Post not found: Butterfly-安裝文檔-七-更新日誌 ✨ 更新日誌</a> - <a href="#">Post not found: Butterfly-打賞 🤞 打賞</a></p></div><div class="note orange icon flat"><i class="note-icon fas fa-magic"></i><p>你可以通過右下角的 <strong>簡</strong> 按鈕切換為簡體顯示 </p></div><hr><h2 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h2><p><strong>Front-matter 是 markdown 文件最上方以 <code>---</code> 分隔的區域，用於指定個別檔案的變數。</strong></p><ul><li>Page Front-matter 用於<code>頁面</code>配置</li><li>Post Front-matter 用於<code>文章頁</code>配置</li></ul><div class="note info flat"><p>如果標注<code>可選</code>的參數，可根據自己需要添加，不用全部都寫在markdown裏</p></div><h3 id="Page-Front-matter"><a href="#Page-Front-matter" class="headerlink" title="Page Front-matter"></a>Page Front-matter</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span><span class="token key atrule">date</span><span class="token punctuation">:</span><span class="token key atrule">updated</span><span class="token punctuation">:</span><span class="token key atrule">type</span><span class="token punctuation">:</span><span class="token key atrule">comments</span><span class="token punctuation">:</span><span class="token key atrule">description</span><span class="token punctuation">:</span><span class="token key atrule">keywords</span><span class="token punctuation">:</span><span class="token key atrule">top_img</span><span class="token punctuation">:</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span><span class="token key atrule">katex</span><span class="token punctuation">:</span><span class="token key atrule">aside</span><span class="token punctuation">:</span><span class="token key atrule">aplayer</span><span class="token punctuation">:</span>highlight_shrink<span class="token punctuation">:</span></span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>寫法</th><th>解釋</th></tr></thead><tbody><tr><td>title</td><td>【必需】頁面標題</td></tr><tr><td>date</td><td>【必需】頁面創建日期</td></tr><tr><td>type</td><td>【必需】標籤、分類和友情鏈接三個頁面需要配置</td></tr><tr><td>updated</td><td>【可選】頁面更新日期</td></tr><tr><td>description</td><td>【可選】頁面描述</td></tr><tr><td>keywords</td><td>【可選】頁面關鍵字</td></tr><tr><td>comments</td><td>【可選】顯示頁面評論模塊(默認 true)</td></tr><tr><td>top_img</td><td>【可選】頁面頂部圖片</td></tr><tr><td>mathjax</td><td>【可選】顯示mathjax(當設置mathjax的per_page: false時，才需要配置，默認 false)</td></tr><tr><td>katex</td><td>【可選】顯示katex(當設置katex的per_page: false時，才需要配置，默認 false)</td></tr><tr><td>aside</td><td>【可選】顯示側邊欄 (默認 true)</td></tr><tr><td>aplayer</td><td>【可選】在需要的頁面加載aplayer的js和css,請參考文章下面的<code>音樂</code> 配置</td></tr><tr><td>highlight_shrink</td><td>【可選】配置代碼框是否展開(true/false)(默認為設置中highlight_shrink的配置)</td></tr></tbody></table><h3 id="Post-Front-matter"><a href="#Post-Front-matter" class="headerlink" title="Post Front-matter"></a>Post Front-matter</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span><span class="token key atrule">date</span><span class="token punctuation">:</span><span class="token key atrule">updated</span><span class="token punctuation">:</span><span class="token key atrule">tags</span><span class="token punctuation">:</span><span class="token key atrule">categories</span><span class="token punctuation">:</span><span class="token key atrule">keywords</span><span class="token punctuation">:</span><span class="token key atrule">description</span><span class="token punctuation">:</span><span class="token key atrule">top_img</span><span class="token punctuation">:</span><span class="token key atrule">comments</span><span class="token punctuation">:</span><span class="token key atrule">cover</span><span class="token punctuation">:</span><span class="token key atrule">toc</span><span class="token punctuation">:</span><span class="token key atrule">toc_number</span><span class="token punctuation">:</span><span class="token key atrule">toc_style_simple</span><span class="token punctuation">:</span><span class="token key atrule">copyright</span><span class="token punctuation">:</span><span class="token key atrule">copyright_author</span><span class="token punctuation">:</span><span class="token key atrule">copyright_author_href</span><span class="token punctuation">:</span><span class="token key atrule">copyright_url</span><span class="token punctuation">:</span><span class="token key atrule">copyright_info</span><span class="token punctuation">:</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span><span class="token key atrule">katex</span><span class="token punctuation">:</span><span class="token key atrule">aplayer</span><span class="token punctuation">:</span><span class="token key atrule">highlight_shrink</span><span class="token punctuation">:</span>aside<span class="token punctuation">:</span></span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th align="left">寫法</th><th>解釋</th></tr></thead><tbody><tr><td align="left">title</td><td>【必需】文章標題</td></tr><tr><td align="left">date</td><td>【必需】文章創建日期</td></tr><tr><td align="left">updated</td><td>【可選】文章更新日期</td></tr><tr><td align="left">tags</td><td>【可選】文章標籤</td></tr><tr><td align="left">categories</td><td>【可選】文章分類</td></tr><tr><td align="left">keywords</td><td>【可選】文章關鍵字</td></tr><tr><td align="left">description</td><td>【可選】文章描述</td></tr><tr><td align="left">top_img</td><td>【可選】文章頂部圖片</td></tr><tr><td align="left">cover</td><td>【可選】文章縮略圖(如果沒有設置top_img,文章頁頂部將顯示縮略圖，可設為false/圖片地址/留空)</td></tr><tr><td align="left">comments</td><td>【可選】顯示文章評論模塊(默認 true)</td></tr><tr><td align="left">toc</td><td>【可選】顯示文章TOC(默認為設置中toc的enable配置)</td></tr><tr><td align="left">toc_number</td><td>【可選】顯示toc_number(默認為設置中toc的number配置)</td></tr><tr><td align="left">toc_style_simple</td><td>【可選】顯示 toc 簡潔模式</td></tr><tr><td align="left">copyright</td><td>【可選】顯示文章版權模塊(默認為設置中post_copyright的enable配置)</td></tr><tr><td align="left">copyright_author</td><td>【可選】文章版權模塊的<code>文章作者</code></td></tr><tr><td align="left">copyright_author_href</td><td>【可選】文章版權模塊的<code>文章作者</code>鏈接</td></tr><tr><td align="left">copyright_url</td><td>【可選】文章版權模塊的<code>文章連結</code>鏈接</td></tr><tr><td align="left">copyright_info</td><td>【可選】文章版權模塊的<code>版權聲明</code>文字</td></tr><tr><td align="left">mathjax</td><td>【可選】顯示mathjax(當設置mathjax的per_page: false時，才需要配置，默認 false)</td></tr><tr><td align="left">katex</td><td>【可選】顯示katex(當設置katex的per_page: false時，才需要配置，默認 false)</td></tr><tr><td align="left">aplayer</td><td>【可選】在需要的頁面加載aplayer的js和css,請參考文章下面的<code>音樂</code> 配置</td></tr><tr><td align="left">highlight_shrink</td><td>【可選】配置代碼框是否展開(true/false)(默認為設置中highlight_shrink的配置)</td></tr><tr><td align="left">aside</td><td>【可選】顯示側邊欄 (默認 true)</td></tr></tbody></table><h2 id="標籤頁"><a href="#標籤頁" class="headerlink" title="標籤頁"></a>標籤頁</h2><ol><li><p>前往你的 Hexo 博客的根目錄</p></li><li><p>輸入<code>hexo new page tags</code></p></li><li><p>你會找到<code>source/tags/index.md</code>這個文件</p></li><li><p>修改這個文件：</p><p><strong>記得添加 <code>type: "tags"</code></strong></p></li></ol><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> 標籤<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-01-05 00:00:00</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"tags"</span></span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="分類頁"><a href="#分類頁" class="headerlink" title="分類頁"></a>分類頁</h2><ol><li><p>前往你的 Hexo 博客的根目錄</p></li><li><p>輸入<code>hexo new page categories</code></p></li><li><p>你會找到<code>source/categories/index.md</code>這個文件</p></li><li><p>修改這個文件：</p><p><strong>記得添加 <code>type: "categories"</code></strong></p></li></ol><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> 分類<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-01-05 00:00:00</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"categories"</span></span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="友情鏈接"><a href="#友情鏈接" class="headerlink" title="友情鏈接"></a>友情鏈接</h2><p>為你的博客創建一個友情鏈接！</p><h3 id="創建友情鏈接頁面"><a href="#創建友情鏈接頁面" class="headerlink" title="創建友情鏈接頁面"></a>創建友情鏈接頁面</h3><ol><li><p>前往你的 Hexo 博客的根目錄</p></li><li><p>輸入 <code>hexo new page link</code></p></li><li><p>你會找到<code>source/link/index.md</code>這個文件</p></li><li><p>修改這個文件：</p><p>記得添加 <code>type: "link"</code></p></li></ol><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> 友情鏈接<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-06-07 22:17:49</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"link"</span></span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="友情鏈接添加"><a href="#友情鏈接添加" class="headerlink" title="友情鏈接添加"></a>友情鏈接添加</h3><div class="tabs" id="flink-add"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#flink-add-1">本地生成</button></li><li class="tab"><button type="button" data-href="#flink-add-2">遠程拉取</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="flink-add-1"><p>在Hexo博客目錄中的<code>source/_data</code>（如果沒有 _data 文件夾，請自行創建），創建一個文件<code>link.yml</code></p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"><span class="token punctuation">-</span> <span class="token key atrule">class_name</span><span class="token punctuation">:</span> 友情鏈接  <span class="token key atrule">class_desc</span><span class="token punctuation">:</span> 那些人，那些事  <span class="token key atrule">link_list</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Hexo      <span class="token key atrule">link</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//hexo.io/zh<span class="token punctuation">-</span>tw/      <span class="token key atrule">avatar</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg      <span class="token key atrule">descr</span><span class="token punctuation">:</span> 快速、簡單且強大的網誌框架<span class="token punctuation">-</span> <span class="token key atrule">class_name</span><span class="token punctuation">:</span> 網站  <span class="token key atrule">class_desc</span><span class="token punctuation">:</span> 值得推薦的網站  <span class="token key atrule">link_list</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Youtube      <span class="token key atrule">link</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//www.youtube.com/      <span class="token key atrule">avatar</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png      <span class="token key atrule">descr</span><span class="token punctuation">:</span> 視頻網站    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Weibo      <span class="token key atrule">link</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//www.weibo.com/      <span class="token key atrule">avatar</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//i.loli.net/2020/05/14/TLJBum386vcnI1P.png      <span class="token key atrule">descr</span><span class="token punctuation">:</span> 中國最大社交分享平臺    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Twitter      <span class="token key atrule">link</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//twitter.com/      <span class="token key atrule">avatar</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png      <span class="token key atrule">descr</span><span class="token punctuation">:</span> 社交分享平臺<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>class_name</code>  和 <code>class_desc</code> 支持 html 格式書寫，如不需要，也可以留空。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="flink-add-2"><p>從 <code>4.0.0</code> 開始，支持從遠程加載友情鏈接，遠程拉取只支持 <code>json</code>。</p><p>注意： 選擇遠程加載後，本地生成的方法會無效。</p><p>在  <code>source/link/index.md</code> 這個文件的 front-matter 添加遠程鏈接</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">flink_url: xxxxx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Json 的格式</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span>  <span class="token punctuation">{</span>    <span class="token property">"class_name"</span><span class="token operator">:</span> <span class="token string">"友情鏈接"</span><span class="token punctuation">,</span>    <span class="token property">"class_desc"</span><span class="token operator">:</span> <span class="token string">"那些人，那些事"</span><span class="token punctuation">,</span>    <span class="token property">"link_list"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">{</span>        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Hexo"</span><span class="token punctuation">,</span>        <span class="token property">"link"</span><span class="token operator">:</span> <span class="token string">"https://hexo.io/zh-tw/"</span><span class="token punctuation">,</span>        <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg"</span><span class="token punctuation">,</span>        <span class="token property">"descr"</span><span class="token operator">:</span> <span class="token string">"快速、簡單且強大的網誌框架"</span>      <span class="token punctuation">}</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    <span class="token property">"class_name"</span><span class="token operator">:</span> <span class="token string">"網站"</span><span class="token punctuation">,</span>    <span class="token property">"class_desc"</span><span class="token operator">:</span> <span class="token string">"值得推薦的網站"</span><span class="token punctuation">,</span>    <span class="token property">"link_list"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">{</span>        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Youtube"</span><span class="token punctuation">,</span>        <span class="token property">"link"</span><span class="token operator">:</span> <span class="token string">"https://www.youtube.com/"</span><span class="token punctuation">,</span>        <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png"</span><span class="token punctuation">,</span>        <span class="token property">"descr"</span><span class="token operator">:</span> <span class="token string">"視頻網站"</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Weibo"</span><span class="token punctuation">,</span>        <span class="token property">"link"</span><span class="token operator">:</span> <span class="token string">"https://www.weibo.com/"</span><span class="token punctuation">,</span>        <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png"</span><span class="token punctuation">,</span>        <span class="token property">"descr"</span><span class="token operator">:</span> <span class="token string">"中國最大社交分享平臺"</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Twitter"</span><span class="token punctuation">,</span>        <span class="token property">"link"</span><span class="token operator">:</span> <span class="token string">"https://twitter.com/"</span><span class="token punctuation">,</span>        <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png"</span><span class="token punctuation">,</span>        <span class="token property">"descr"</span><span class="token operator">:</span> <span class="token string">"社交分享平臺"</span>      <span class="token punctuation">}</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="友情鏈接界面設置"><a href="#友情鏈接界面設置" class="headerlink" title="友情鏈接界面設置"></a>友情鏈接界面設置</h3><p>由 2.2.0 起，友情鏈接界面可以由用戶自己自定義，只需要在友情鏈接的md檔設置就行，以普通的Markdown格式書寫。</p><h2 id="圖庫"><a href="#圖庫" class="headerlink" title="圖庫"></a>圖庫</h2><p>圖庫頁面只是普通的頁面，你只需要<code>hexo n page xxxxx</code> 創建你的頁面就行</p><p>然後使用標簽外掛 <a href="https://butterfly.js.org/posts/4aa8abbe/#Gallery%E7%9B%B8%E5%86%8A%E5%9C%96%E5%BA%AB">galleryGroup</a>，具體用法請查看對應的內容。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">&lt;div class="gallery<span class="token punctuation">-</span>group<span class="token punctuation">-</span>main"<span class="token punctuation">&gt;</span><span class="token punctuation">{</span>% galleryGroup '壁紙' '收藏的一些壁紙' '/gallery/wallpaper/' https<span class="token punctuation">:</span>//i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %<span class="token punctuation">}</span><span class="token punctuation">{</span>% galleryGroup '漫威' '關於漫威的圖片' '/gallery/marvel/' https<span class="token punctuation">:</span>//i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg %<span class="token punctuation">}</span><span class="token punctuation">{</span>% galleryGroup 'OH MY GIRL' '關於OH MY GIRL的圖片' '/gallery/ohmygirl/' https<span class="token punctuation">:</span>//i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg %<span class="token punctuation">}</span>&lt;/div<span class="token punctuation">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src="https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png" alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">壁紙</div>  <p>收藏的一些壁紙</p>  <a href="/gallery/wallpaper/index.html"></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src="https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg" alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">漫威</div>  <p>關於漫威的圖片</p>  <a href="/gallery/marvel/index.html"></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src="https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg" alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>關於OH MY GIRL的圖片</p>  <a href="/gallery/ohmygirl/index.html"></a>  </figcaption>  </figure>  </div><h3 id="子頁面"><a href="#子頁面" class="headerlink" title="子頁面"></a>子頁面</h3><p>子頁面也是普通的頁面，你只需要<code>hexo n page xxxxx</code> 創建你的頁面就行</p><p>然後使用標簽外掛 <a href="/posts/4aa8abbe.html#Gallery%E7%9B%B8%E5%86%8A">gallery</a>，具體用法請查看對應的內容。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">{</span>% gallery %<span class="token punctuation">}</span><span class="token tag">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span>(https<span class="token punctuation">:</span>//i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)<span class="token tag">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span>(https<span class="token punctuation">:</span>//i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)<span class="token tag">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span>(https<span class="token punctuation">:</span>//i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)<span class="token tag">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span>(https<span class="token punctuation">:</span>//i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)<span class="token tag">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span>(https<span class="token punctuation">:</span>//i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)<span class="token tag">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span>(https<span class="token punctuation">:</span>//i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)<span class="token tag">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span>(https<span class="token punctuation">:</span>//i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)<span class="token tag">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span>(https<span class="token punctuation">:</span>//i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)<span class="token punctuation">{</span>% endgallery %<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg"><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg"><br><img src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg"><br><img src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg"><br><img src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg"><br><img src="https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg"><br><img src="https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg"><br><img src="https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg"></p>          </div><div class="note pink icon flat"><i class="note-icon fas fa-sitemap"></i><p>如果你想要使用 <code>/photo/ohmygirl</code> 這樣的鏈接顯示你的圖片內容</p><p>你可以把創建好的 <code>ohmygirl</code>整個文件夾移到 <code>photo</code>文件夾裏去</p></div><h2 id="404頁面"><a href="#404頁面" class="headerlink" title="404頁面"></a>404頁面</h2><p>主題內置了一個簡單的404頁面，可在設置中開啟</p><div class="note info flat"><p>本地預覽時，訪問出錯的網站是不會跳到404頁面的。</p><p>如需本地預覽，請訪問<code>http://localhost:4000/404.html</code></p></div><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># A simple 404 page</span><span class="token key atrule">error_404</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">subtitle</span><span class="token punctuation">:</span> <span class="token string">"頁面沒有找到"</span>  <span class="token key atrule">background</span><span class="token punctuation">:</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-error404.png"></p><a class="btn-beautify block pink right larger" href="/posts/4aa8abbe.html" title="🛠 Butterfly 安裝文檔(三) 主題配置"><i class="far fa-hand-point-right"></i><span>🛠 Butterfly 安裝文檔(三) 主題配置</span></a>]]></content>
      
      
      <categories>
          
          <category> Docs文檔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Hexo </tag>
            
            <tag> 主題 </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly 安裝文檔(一) 快速開始</title>
      <link href="/posts/21cfbf15.html"/>
      <url>/posts/21cfbf15.html</url>
      
        <content type="html"><![CDATA[<div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>📖  本教程更新於 2022 年 02 月 13 日，教程的內容針對最新<strong>穩定版</strong>而更新（如果你是舊版，教程會有些出入，請留意）</p><p>🦋  Butterfly 已經更新到 <a href="https://github.com/jerryc127/hexo-theme-butterfly/releases/tag/4.1.0">4.1.0</a></p></div><div class="note green icon flat"><i class="note-icon fas fa-rocket"></i><p> 📚  文檔目錄</p><p><a href="#">Post not found: Butterfly-安裝文檔-一-快速開始 🚀 快速開始</a> - <a href="#">Post not found: Butterfly-安裝文檔-二-主題頁面 📑 主題頁面</a> - <a href="#">Post not found: Butterfly-安裝文檔-三-主題配置-1 🛠 主題配置-1</a> - <a href="#">Post not found: Butterfly-安裝文檔-四-主題配置-2 ⚔️ 主題配置-2</a> - <a href="#">Post not found: Butterfly-安裝文檔-五-主題問答 ❓ 主題問答</a> - <a href="#">Post not found: Butterfly-安裝文檔-六-進階教程 ⚡️ 進階教程</a> - <a href="#">Post not found: Butterfly-安裝文檔-七-更新日誌 ✨ 更新日誌</a> - <a href="#">Post not found: Butterfly-打賞 🤞 打賞</a></p></div><div class="note orange icon flat"><i class="note-icon fas fa-magic"></i><p>你可以通過右下角的 <strong>簡</strong> 按鈕切換為簡體顯示 </p></div><hr><p><code>hexo-theme-butterfly</code>是基於 <a href="https://github.com/Molunerfinn/hexo-theme-melody">hexo-theme-melody</a> 的基礎上進行開發的。</p><h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><div class="tabs" id="butterfly-install"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#butterfly-install-1"><i class="fab fa-github-square"></i>Git安裝 (Github)</button></li><li class="tab"><button type="button" data-href="#butterfly-install-2"><i class="fab fa-git-square"></i>Git安裝 (Gitee)</button></li><li class="tab"><button type="button" data-href="#butterfly-install-3"><i class="fab fa-npm"></i>npm安裝</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="butterfly-install-1"><p><strong>穩定版【建議】</strong></p><p>在你的 Hexo 根目錄裏</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">git clone <span class="token operator">-</span>b master https:<span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com/jerryc127/hexo-theme-butterfly<span class="token punctuation">.</span>git themes/butterfly<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>測試版</strong></p><blockquote><p>測試版可能存在 bug，追求穩定的請安裝穩定版</p></blockquote><p>如果想要安裝比較新的 dev 分支，可以</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">git clone <span class="token operator">-</span>b dev https:<span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com/jerryc127/hexo-theme-butterfly<span class="token punctuation">.</span>git themes/butterfly<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="note info flat"><p>升級方法：在主題目錄下，運行 <code>git pull</code></p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="butterfly-install-2"><p><strong>穩定版【建議】</strong></p><p>在你的 Hexo 根目錄裏</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">git clone <span class="token operator">-</span>b master https:<span class="token operator">/</span><span class="token operator">/</span>gitee<span class="token punctuation">.</span>com/immyw/hexo-theme-butterfly<span class="token punctuation">.</span>git themes/butterfly<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>測試版</strong></p><blockquote><p>測試版可能存在Bugs，追求穩定的請安裝穩定版</p></blockquote><p>如果想要安裝比較新的dev分支，可以</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">git clone <span class="token operator">-</span>b dev https:<span class="token operator">/</span><span class="token operator">/</span>gitee<span class="token punctuation">.</span>com/immyw/hexo-theme-butterfly<span class="token punctuation">.</span>git themes/butterfly<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="note info flat"><p>升級方法：在主題目錄下，運行<code>git pull</code></p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="butterfly-install-3"><blockquote><p>此方法只支持 Hexo 5.0.0 以上版本</p><p><em><strong>通過 npm 安裝並不會在 themes 裏生成主題文件夾，而是在 node_modules 裏生成</strong></em></p></blockquote><p>在你的 Hexo 根目錄裏</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">npm i hexo-theme-butterfly<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="note info flat"><p>升級方法：在 Hexo 根目錄下，運行 <code>npm update hexo-theme-butterfly</code></p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="應用主題"><a href="#應用主題" class="headerlink" title="應用主題"></a>應用主題</h2><p>修改 Hexo 根目錄下的 <code>_config.yml</code>，把主題改為<code>butterfly</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">theme</span><span class="token punctuation">:</span> butterfly<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="安裝插件"><a href="#安裝插件" class="headerlink" title="安裝插件"></a>安裝插件</h2><p>如果你沒有 pug 以及 stylus 的渲染器，請下載安裝：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">npm install hexo-renderer-pug hexo-renderer-stylus <span class="token operator">--</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="升級建議"><a href="#升級建議" class="headerlink" title="升級建議"></a>升級建議</h2><div class="note blue icon flat"><i class="note-icon fas fa-train"></i><p>升級完成後，請到 Github 的 <a href="https://github.com/jerryc127/hexo-theme-butterfly/releases">Releases</a> 界面 或者 <a href="https://butterfly.js.org/posts/198a4240/">文檔七</a> 查看新版的更新內容。</p><p>裏面有標注  <code>_config</code> 文件的變更內容（如有），請根據實際情況更新你的配置內容。</p></div><p>為了減少升級主題後帶來的不便，請使用以下方法（<strong>建議，可以不做</strong>）。</p><p>在 hexo 的根目錄創建一個文件 <code>_config.butterfly.yml</code>，並把<strong>主題</strong>目錄的 <code>_config.yml</code> <strong>內容</strong>複製到 <code>_config.butterfly.yml</code> 去。( <strong>注意: 複製的是主題的 <code>_config.yml</code> ,而不是 hexo 的 <code>_config.yml</code></strong>)</p><blockquote><p><strong>注意：</strong> 不要把主題目錄的 <code>_config.yml</code> 刪掉</p></blockquote><blockquote><p><strong>注意：</strong> 以後只需要在 <code>_config.butterfly.yml</code>進行配置就行。<br>如果使用了 <code>_config.butterfly.yml</code>， 配置主題的 <code>_config.yml</code> 將不會有效果。</p></blockquote><p>Hexo會自動<strong>合併</strong>主題中的<code>_config.yml</code>和 <code>_config.butterfly.yml</code>裏的配置，如果存在同名配置，會使用<code>_config.butterfly.yml</code>的配置，其優先度較高。</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-docs-install-suggestion-1.png" alt="image-20200805191531090"></p><a class="btn-beautify block right larger" href="/posts/dc584b87.html" title="📑 Butterfly 安裝文檔(二) 主題頁面"><i class="far fa-hand-point-right"></i><span>📑 Butterfly 安裝文檔(二) 主題頁面</span></a>]]></content>
      
      
      <categories>
          
          <category> Docs文檔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Hexo </tag>
            
            <tag> 主題 </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Built-in Tag Plugins (Hexo內置標籤外掛)</title>
      <link href="/posts/39b121ef.html"/>
      <url>/posts/39b121ef.html</url>
      
        <content type="html"><![CDATA[<p>Tag plugins are different from post tags. They are ported from Octopress and provide a useful way for you to quickly add specific content to your posts.</p><h2 id="Block-Quote"><a href="#Block-Quote" class="headerlink" title="Block Quote"></a>Block Quote</h2><p>Perfect for adding quotes to your post, with optional author, source and title information.</p><p><strong>Alias:</strong> quote</p><pre class="line-numbers language-none"><code class="language-none">{% blockquote [author[, source]] [link] [source_link_title] %}content{% endblockquote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><p><strong>No arguments. Plain blockquote.</strong></p><pre class="line-numbers language-none"><code class="language-none">{% blockquote %}Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.{% endblockquote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p></blockquote><p><strong>Quote from a book</strong></p><pre class="line-numbers language-none"><code class="language-none">{% blockquote David Levithan, Wide Awake %}Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.{% endblockquote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p><footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote><p><strong>Quote from Twitter</strong></p><pre class="line-numbers language-none"><code class="language-none">{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}NEW: DevDocs now comes with syntax highlighting. http://devdocs.io{% endblockquote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href="http://devdocs.io/">http://devdocs.io</a></p><footer><strong>@DevDocs</strong><cite><a href="https://twitter.com/devdocs/status/356095192085962752">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote><p><strong>Quote from an article on the web</strong></p><pre class="line-numbers language-none"><code class="language-none">{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}Every interaction is both precious and an opportunity to delight.{% endblockquote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>Every interaction is both precious and an opportunity to delight.</p><footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html">Welcome to Island Marketing</a></cite></footer></blockquote><h2 id="Code-Block"><a href="#Code-Block" class="headerlink" title="Code Block"></a>Code Block</h2><p>Useful feature for adding code snippets to your post.</p><p><strong>Alias:</strong> code</p><pre class="line-numbers language-none"><code class="language-none">{% codeblock [title] [lang:language] [url] [link text] [additional options] %}code snippet{% endcodeblock %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>Specify additional options in <code>option:value</code> format, e.g. <code>line_number:false first_line:5</code>.</p><table><thead><tr><th>Extra Options</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>line_number</code></td><td>Show line number</td><td><code>true</code></td></tr><tr><td><code>highlight</code></td><td>Enable code highlighting</td><td><code>true</code></td></tr><tr><td><code>first_line</code></td><td>Specify the first line number</td><td><code>1</code></td></tr><tr><td><code>mark</code></td><td>Line highlight specific line(s), each value separated by a comma. Specify number range using a dash<br>Example: <code>mark:1,4-7,10</code> will mark line 1, 4 to 7 and 10.</td><td></td></tr><tr><td><code>wrap</code></td><td>Wrap the code block in <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table"><code>&lt;table&gt;</code></a></td><td><code>true</code></td></tr></tbody></table><h3 id="Examples-1"><a href="#Examples-1" class="headerlink" title="Examples"></a>Examples</h3><p><strong>A plain code block</strong></p><pre class="line-numbers language-none"><code class="language-none">{% codeblock %}alert('Hello World!');{% endcodeblock %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">alert('Hello World!');<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>Specifying the language</strong></p><pre class="line-numbers language-none"><code class="language-none">{% codeblock lang:objc %}[rectangle setX: 10 y: 10 width: 20 height: 20];{% endcodeblock %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-objc" data-language="objc"><code class="language-objc"><span class="token punctuation">[</span>rectangle setX<span class="token punctuation">:</span> <span class="token number">10</span> y<span class="token punctuation">:</span> <span class="token number">10</span> width<span class="token punctuation">:</span> <span class="token number">20</span> height<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>Adding a caption to the code block</strong></p><pre class="line-numbers language-none"><code class="language-none">{% codeblock Array.map %}array.map(callback[, thisArg]){% endcodeblock %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><div class="caption"><span>Array.map</span></div><code class="language-none">array.map(callback[, thisArg])<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>Adding a caption and a URL</strong></p><pre class="line-numbers language-none"><code class="language-none">{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}_.compact([0, 1, false, 2, '', 3]);=&gt; [1, 2, 3]{% endcodeblock %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><div class="caption"><span>_.compact</span><a href="http://underscorejs.org/#compact">Underscore.js</a></div><code class="language-none">_.compact([0, 1, false, 2, '', 3]);=&gt; [1, 2, 3]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="Backtick-Code-Block"><a href="#Backtick-Code-Block" class="headerlink" title="Backtick Code Block"></a>Backtick Code Block</h2><p>This is identical to using a code block, but instead uses three backticks to delimit the block.</p>``` [language] [title] [url] [link text]code snippet```<h2 id="Pull-Quote"><a href="#Pull-Quote" class="headerlink" title="Pull Quote"></a>Pull Quote</h2><p>To add pull quotes to your posts:</p><pre class="line-numbers language-none"><code class="language-none">{% pullquote [class] %}content{% endpullquote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Left"><a href="#Left" class="headerlink" title="Left"></a>Left</h3><pre class="line-numbers language-none"><code class="language-none">{% pullquote left %}Lorem ipsum dolor sit amet, consectetur adipiscing elit.{% endpullquote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote class="pullquote left"><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p></blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tempus molestie arcu, et fringilla mauris placerat ac. Nullam luctus bibendum risus. Ut cursus sed ipsum feugiat egestas. Suspendisse elementum, velit eu consequat consequat, augue lorem dapibus libero, eget pulvinar dolor est sit amet nulla. Suspendisse a porta tortor, et posuere mi. Pellentesque ultricies, mi quis volutpat malesuada, erat felis vulputate nisl, ac congue ante tortor ut ante. Proin aliquam sem vel mauris tincidunt, eget scelerisque tortor euismod. Nulla tincidunt enim nec commodo dictum. Mauris id sapien et orci gravida luctus id ut dui. In vel vulputate odio. Duis vel turpis molestie, scelerisque enim eu, lobortis eros. Cras at ipsum gravida, sagittis ante vel, viverra tellus. Nunc mauris turpis, elementum ullamcorper nisl pretium, ultrices cursus justo. Mauris porttitor commodo eros, ac ornare orci interdum in. Cras fermentum cursus leo sed mattis. In dignissim lorem sem, sit amet elementum mauris venenatis ac.</p><h3 id="Right"><a href="#Right" class="headerlink" title="Right"></a>Right</h3><pre class="line-numbers language-none"><code class="language-none">{% pullquote right %}Lorem ipsum dolor sit amet, consectetur adipiscing elit.{% endpullquote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote class="pullquote right"><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p></blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ligula justo, lobortis sit amet semper vel, dignissim sit amet libero. Praesent ac tempus ligula. Maecenas at gravida odio. Etiam tristique volutpat lacus eu faucibus. Donec non tempus arcu. Phasellus adipiscing, mauris nec mollis egestas, ipsum nunc auctor velit, et rhoncus lorem ipsum at ante. Praesent et sem in velit volutpat auctor. Duis vel mauris nulla. Maecenas mattis interdum ante, quis sagittis nibh cursus et. Nulla facilisi. Morbi convallis gravida tortor, ut fermentum enim gravida et. Nunc vel dictum nisl, non ultrices libero. Proin vestibulum felis eget orci consectetur lobortis. Vestibulum augue nulla, iaculis vitae augue vehicula, dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.</p><h2 id="jsFiddle"><a href="#jsFiddle" class="headerlink" title="jsFiddle"></a>jsFiddle</h2><p>To embed a jsFiddle snippet:</p><pre class="line-numbers language-none"><code class="language-none">{% jsfiddle shorttag [tabs] [skin] [width] [height] %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">{% jsfiddle ccWP7 %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><iframe scrolling="no" width="100%" height="300" src="https://jsfiddle.net/ccWP7/embedded/js,resources,html,css,result/light" frameborder="0" loading="lazy" allowfullscreen=""></iframe><h2 id="Gist"><a href="#Gist" class="headerlink" title="Gist"></a>Gist</h2><p>To embed a Gist snippet:</p><pre class="line-numbers language-none"><code class="language-none">{% gist gist_id [filename] %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% gist 996818 %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><script src="//gist.github.com/996818.js"></script><h2 id="iframe"><a href="#iframe" class="headerlink" title="iframe"></a>iframe</h2><p>To embed an iframe:</p><pre class="line-numbers language-none"><code class="language-none">{% iframe url [width] [height] %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">{% iframe 'https://butterfly.js.org/' 100% 300px %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><iframe src="https://butterfly.js.org/" width="100%" height="300px" frameborder="0" loading="lazy" allowfullscreen=""></iframe><h2 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h2><p>Inserts an image with specified size.</p><pre class="line-numbers language-none"><code class="language-none">{% img [class names] /path/to/image [width] [height] '"title text" "alt text"' %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/posts/39b121ef.htm/avatar.png" class="test"><h2 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h2><p>Inserts a link with <code>target="_blank"</code> attribute.</p><pre class="line-numbers language-none"><code class="language-none">{% link text url [external] [title] %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><a href="https://butterfly.js.org/" title="" target="">Docs</a><h2 id="Include-Code"><a href="#Include-Code" class="headerlink" title="Include Code"></a>Include Code</h2><p>Inserts code snippets in <code>source/downloads/code</code> folder. The folder location can be specified through the <code>code_dir</code> option in the config.</p><pre class="line-numbers language-none"><code class="language-none">{% include_code [title] [lang:language] [from:line] [to:line] path/to/file %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Examples-2"><a href="#Examples-2" class="headerlink" title="Examples"></a>Examples</h3><p><strong>Embed the whole content of test.js</strong></p><pre class="line-numbers language-none"><code class="language-none">{% include_code lang:javascript test.js %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>Embed line 3 only</strong></p><pre class="line-numbers language-none"><code class="language-none">{% include_code lang:javascript from:3 to:3 test.js %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>Embed line 5 to 8</strong></p><pre class="line-numbers language-none"><code class="language-none">{% include_code lang:javascript from:5 to:8 test.js %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>Embed line 5 to the end of file</strong></p><pre class="line-numbers language-none"><code class="language-none">{% include_code lang:javascript from:5 test.js %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>Embed line 1 to 8</strong></p><pre class="line-numbers language-none"><code class="language-none">{% include_code lang:javascript to:8 test.js %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="YouTube"><a href="#YouTube" class="headerlink" title="YouTube"></a>YouTube</h2><p>Inserts a YouTube video.</p><pre class="line-numbers language-none"><code class="language-none">{% youtube video_id %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="video-container"><iframe src="https://www.youtube.com/embed/iDjQSdN_ig8" frameborder="0" loading="lazy" allowfullscreen=""></iframe></div><h2 id="Vimeo"><a href="#Vimeo" class="headerlink" title="Vimeo"></a>Vimeo</h2><p>Inserts a responsive or specified size Vimeo video.</p><pre class="line-numbers language-none"><code class="language-none">{% vimeo video_id [width] [height] %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="video-container"><iframe src="https://player.vimeo.com/video/124876737" frameborder="0" loading="lazy" allowfullscreen=""></iframe></div><h2 id="Include-Posts"><a href="#Include-Posts" class="headerlink" title="Include Posts"></a>Include Posts</h2><p>Include links to other posts.</p><pre class="line-numbers language-none"><code class="language-none">{% post_path filename %}{% post_link filename [title] [escape] %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>You can ignore permalink and folder information, like languages and dates, when using this tag.</p><p>For instance: <code>{% post_link how-to-bake-a-cake %}</code>.</p><p>This will work as long as the filename of the post is <code>how-to-bake-a-cake.md</code>, even if the post is located at <code>source/posts/2015-02-my-family-holiday</code> and has permalink <code>2018/en/how-to-bake-a-cake</code>.</p><p>You can customize the text to display, instead of displaying the post’s title. Using <code>post_path</code> inside Markdown syntax <code>[]()</code> is not supported.</p><p>Post’s title and custom text are escaped by default. You can use the <code>escape</code> option to disable escaping.</p><p>For instance:</p><p><strong>Display title of the post.</strong></p><p><code>{% post_link 標籤外掛-Tag-Plugins %}</code></p><a href="#">Post not found: 標籤外掛-Tag-Plugins</a><p><strong>Display custom text.</strong></p><p><code>{% post_link 標籤外掛-Tag-Plugins 'Link to a post' %}</code></p><a href="#">Post not found: 標籤外掛-Tag-Plugins Link to a post</a><p><strong>Escape title.</strong></p><pre class="line-numbers language-none"><code class="language-none">{% post_link 標籤外掛-Tag-Plugins 'How to use &lt;b&gt; tag in title' %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><a href="#">Post not found: 標籤外掛-Tag-Plugins How to use <b> tag in title</b></a><p><strong>Do not escape title.</strong></p><pre class="line-numbers language-none"><code class="language-none">{% post_link 標籤外掛-Tag-Plugins '&lt;b&gt;bold&lt;/b&gt; custom title' false %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><a href="#">Post not found: 標籤外掛-Tag-Plugins <b>bold</b> custom title false</a><h2 id="Include-Assets"><a href="#Include-Assets" class="headerlink" title="Include Assets"></a>Include Assets</h2><p>Include post assets.</p><pre class="line-numbers language-none"><code class="language-none">{% asset_path filename %}{% asset_img filename [title] %}{% asset_link filename [title] [escape] %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="Raw"><a href="#Raw" class="headerlink" title="Raw"></a>Raw</h2><p>If certain content is causing processing issues in your posts, wrap it with the <code>raw</code> tag to avoid rendering errors.</p><pre class="line-numbers language-none"><code class="language-none">{% raw %}content{% endraw %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Demo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 標籤外掛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>no cover</title>
      <link href="/posts/913b2502.html"/>
      <url>/posts/913b2502.html</url>
      
        <content type="html"><![CDATA[<p>This post no cover</p>]]></content>
      
      
      <categories>
          
          <category> Demo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> demo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>標籤外掛(Tag Plugins)</title>
      <link href="/posts/2df239ce.html"/>
      <url>/posts/2df239ce.html</url>
      
        <content type="html"><![CDATA[<h2 id="Tabs"><a href="#Tabs" class="headerlink" title="Tabs"></a>Tabs</h2><div class="tabs" id="tags"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tags-1">出師表</button></li><li class="tab"><button type="button" data-href="#tags-2">圖庫</button></li><li class="tab"><button type="button" data-href="#tags-3">李白</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tags-1"><p>臣亮言：先帝創業未半而中道崩殂，今天下三分，益州疲弊，此誠危急存亡之秋也。然侍衞之臣不懈於內，忠志之士忘身於外者，蓋追先帝之殊遇，欲報之於陛下也。誠宜開張聖聽，以光先帝遺德，恢弘志士之氣，不宜妄自菲薄，引喻失義，以塞忠諫之路也。<br>宮中府中，俱為一體；陟罰臧否，不宜異同：若有作奸犯科及為忠善者，宜付有司論其刑賞，以昭陛下平明之理；不宜偏私，使內外異法也。<br>侍中、侍郎郭攸之、費禕、董允等，此皆良實，志慮忠純，是以先帝簡拔以遺陛下：愚以為宮中之事，事無大小，悉以諮之，然後施行，必能裨補闕漏，有所廣益。<br>將軍向寵，性行淑均，曉暢軍事，試用於昔日，先帝稱之曰“能”，是以眾議舉寵為督：愚以為營中之事，悉以諮之，必能使行陣和睦，優劣得所。<br>親賢臣，遠小人，此先漢所以興隆也；親小人，遠賢臣，此後漢所以傾頹也。先帝在時，每與臣論此事，未嘗不歎息痛恨於桓、靈也。侍中、尚書、長史、參軍，此悉貞良死節之臣，願陛下親之、信之，則漢室之隆，可計日而待也。<br>臣本布衣，躬耕於南陽，苟全性命於亂世，不求聞達於諸侯。先帝不以臣卑鄙，猥自枉屈，三顧臣於草廬之中，諮臣以當世之事，由是感激，遂許先帝以驅馳。後值傾覆，受任於敗軍之際，奉命於危難之間：爾來二十有一年矣。<br>先帝知臣謹慎，故臨崩寄臣以大事也。受命以來，夙夜憂歎，恐託付不效，以傷先帝之明；故五月渡瀘，深入不毛。今南方已定，兵甲已足，當獎率三軍，北定中原，庶竭駑鈍，攘除奸兇，興復漢室，還於舊都。此臣所以報先帝而忠陛下之職分也。至於斟酌損益，進盡忠言，則攸之、禕、允之任也。<br>願陛下託臣以討賊興復之效，不效，則治臣之罪，以告先帝之靈。若無興德之言，則責攸之、禕、允等之慢，以彰其咎；陛下亦宜自謀，以諮諏善道，察納雅言，深追先帝遺詔。臣不勝受恩感激。<br>今當遠離，臨表涕零，不知所言。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tags-2"><div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Jj8FXuKVlOea4Ec.jpg"><br><img src="https://i.loli.net/2019/12/25/eqBGrXx9tWsZOao.jpg"><br><img src="https://i.loli.net/2019/12/25/LjW2CfNSD7OaY4v.jpg"><br><img src="https://i.loli.net/2019/12/25/pGIhaPjxtl438U9.jpg"><br><img src="https://i.loli.net/2019/12/25/hzjJBR2x5SEmsbC.jpg"><br><img src="https://i.loli.net/2019/12/25/ucNDmUqQkrFfAWv.jpg"><br><img src="https://i.loli.net/2019/12/25/oj1wAnGSKtFvXIJ.jpg"></p>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tags-3"><p>李白（701年5月19日－762年11月30日），字太白，號青蓮居士，中國唐朝詩人，自言祖籍隴西成紀（今甘肅省天水市秦安縣），先世西涼武昭王李暠之後，與李唐皇室同宗。幼時內遷，寄籍劍南道綿州（今四川省江油市青蓮鎮）。另外，郭沫若研究認為李白出生於吉爾吉斯碎葉河上的碎葉城，屬唐安西都護府（今楚河州托克馬克市），該説有一定影響。有「詩仙」、「詩俠」、「酒仙」、「謫仙人」等稱呼，活躍於盛唐，為傑出的浪漫主義詩人。與杜甫合稱「李杜」。被賀知章驚呼為「天上謫仙」。</p><div class="tabs" id="李白詩集"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#李白詩集-1">行路難</button></li><li class="tab"><button type="button" data-href="#李白詩集-2">將進酒</button></li><li class="tab"><button type="button" data-href="#李白詩集-3">清平調</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="李白詩集-1"><p>金樽清酒鬥十千，玉盤珍羞值萬錢。<br>停杯投箸不能食，拔劍四顧心茫然。<br>欲渡黃河冰塞川，將登太行雪暗天。<br>閒來垂釣碧溪上，忽復乘舟夢日邊。<br>行路難，行路難，多歧路，今安在？<br>長風破浪會有時，直掛雲帆濟滄海。<br>大道如青天，我獨不得出。<br>羞逐長安社中兒，赤雞白狗賭梨慄。<br>彈劍作歌奏苦聲，曳裾王門不稱情。<br>淮陰市井笑韓信，漢朝公卿忌賈生。<br>君不見昔時燕家重郭隗，擁篲折節無嫌猜。<br>劇辛樂毅感恩分，輸肝剖膽效英才。<br>昭王白骨縈蔓草，誰人更掃黃金台？<br>行路難，歸去來！<br>有耳莫洗潁川水，有口莫食首陽蕨。<br>含光混世貴無名，何用孤高比雲月？<br>吾觀自古賢達人，功成不退皆殞身。<br>子胥既棄吳江上，屈原終投湘水濱。<br>陸機雄才豈自保，李斯税駕苦不早。<br>華亭鶴唳詎可聞，上蔡蒼鷹何足道。<br>君不見吳中張翰稱達生，秋風忽憶江東行。<br>且樂生前一杯酒，何須身後千載名！</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="李白詩集-2"><p>君不見，黃河之水天上來，<br>奔流到海不復回？<br>君不見，高堂明鏡悲白髮，<br>朝如青絲暮成雪？<br>人生得意須盡歡，<br>莫使金樽空對月。<br>天生我材必有用，<br>千金散盡還復來。<br>烹羊宰牛且為樂，<br>會須一飲三百杯。<br>岑夫子，丹丘生，<br>將進酒，君莫停。<br>與君歌一曲，<br>請君為我側耳聽：<br>鐘鼓饌玉不足貴，<br>但願長醉不願醒。<br>古來聖賢皆寂寞，<br>惟有飲者留其名。<br>陳王昔時宴平樂，<br>斗酒十千恣歡謔。<br>主人何為言小錢？<br>徑須沽取對君酌。<br>五花馬，千金裘。<br>呼兒將出換美酒，<br>與爾同銷萬古愁。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="李白詩集-3"><p>《清平調詞三首》是唐代大詩人李白的組詩作品，共三首七言樂府詩。第一首從空間角度寫，以牡丹花比楊貴妃的美豔；第二首從時間角度寫，表現楊貴妃的受寵幸；第三首總承一、二兩首，把牡丹和楊貴妃與君王糅合，融為一體。全詩構思精巧，辭藻豔麗，將花與人渾融在一起寫，描繪出人花交映、迷離恍惚的景象，顯示了詩人高超的藝術功力。</p><div class="tabs" id="清平調"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#清平調-1">清平調(一)</button></li><li class="tab"><button type="button" data-href="#清平調-2">清平調(二)</button></li><li class="tab"><button type="button" data-href="#清平調-3">清平調(三)</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="清平調-1"><p>雲想衣裳花想容，春風拂檻露華濃；<br>　<br>若非羣玉山頭見，會向瑤台月下逢。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="清平調-2"><p>一枝紅豔露凝香，雲雨巫山空斷腸。<br>　<br>借問漢宮誰得似？可憐飛燕倚新粧。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="清平調-3"><p>名花傾國兩相歡，常得君王帶笑看。<br>　<br>解識春風無限恨，沉香亨北倚闌千。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h2><h3 id="Inline"><a href="#Inline" class="headerlink" title="Inline"></a>Inline</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">This is my website, click the button {% btn 'https://butterfly.js.org',Butterfly %}This is my website, click the button {% btn 'https://butterfly.js.org',Butterfly,,outline%}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>This is my website, click the button <a class="btn-beautify " href="https://butterfly.js.org" title="Butterfly"><span>Butterfly</span></a></p><p>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org" title="Butterfly"><span>Butterfly</span></a></p><h3 id="Block"><a href="#Block" class="headerlink" title="Block"></a>Block</h3><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">This is my website, click the button  {% btn 'https://butterfly.js.org',Butterfly,far fa-hand-point-right,block larger %}This is my website, click the button  {% btn 'https://butterfly.js.org',Butterfly,far fa-hand-point-right,block center larger %}This is my website, click the button  {% btn 'https://butterfly.js.org',Butterfly,far fa-hand-point-right,block right blue larger %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><a class="btn-beautify block larger" href="https://butterfly.js.org" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify block center larger" href="https://butterfly.js.org" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify block right blue larger" href="https://butterfly.js.org" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><h3 id="option"><a href="#option" class="headerlink" title="option"></a>option</h3><blockquote><p>more than one button in center</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-center<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>{% btn 'https://butterfly.js.org',Butterfly,far fa-hand-point-right,larger %}{% btn 'https://butterfly.js.org',Butterfly,far fa-hand-point-right,blue larger %}{% btn 'https://butterfly.js.org',Butterfly,far fa-hand-point-right,pink larger %}{% btn 'https://butterfly.js.org',Butterfly,far fa-hand-point-right,red larger %}{% btn 'https://butterfly.js.org',Butterfly,far fa-hand-point-right,purple larger %}{% btn 'https://butterfly.js.org',Butterfly,far fa-hand-point-right,orange larger %}{% btn 'https://butterfly.js.org',Butterfly,far fa-hand-point-right,green larger %}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="btn-center"><a class="btn-beautify larger" href="https://butterfly.js.org" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify blue larger" href="https://butterfly.js.org" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify pink larger" href="https://butterfly.js.org" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify red larger" href="https://butterfly.js.org" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify purple larger" href="https://butterfly.js.org" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify orange larger" href="https://butterfly.js.org" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify green larger" href="https://butterfly.js.org" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></div><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-center<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>{% btn 'https://butterfly.js.org',Butterfly,far fa-hand-point-right,outline larger %}{% btn 'https://butterfly.js.org',Butterfly,far fa-hand-point-right,outline blue larger %}{% btn 'https://butterfly.js.org',Butterfly,far fa-hand-point-right,outline pink larger %}{% btn 'https://butterfly.js.org',Butterfly,far fa-hand-point-right,outline red larger %}{% btn 'https://butterfly.js.org',Butterfly,far fa-hand-point-right,outline purple larger %}{% btn 'https://butterfly.js.org',Butterfly,far fa-hand-point-right,outline orange larger %}{% btn 'https://butterfly.js.org',Butterfly,far fa-hand-point-right,outline green larger %}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="btn-center"><a class="btn-beautify outline larger" href="https://butterfly.js.org" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline blue larger" href="https://butterfly.js.org" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline pink larger" href="https://butterfly.js.org" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline red larger" href="https://butterfly.js.org" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline purple larger" href="https://butterfly.js.org" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline orange larger" href="https://butterfly.js.org" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline green larger" href="https://butterfly.js.org" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></div><h2 id="mermaid"><a href="#mermaid" class="headerlink" title="mermaid"></a>mermaid</h2><div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  pie    title Key elements in Product X    "Calcium" : 42.96    "Potassium" : 50.05    "Magnesium" : 10.01    "Iron" :  5  </pre></div><div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  gantt    title A Gantt Diagram    dateFormat  YYYY-MM-DD    section Section    A task           :a1, 2014-01-01, 30d    Another task     :after a1  , 20d    section Another    Task in sec      :2014-01-12  , 12d    another task      : 24d  </pre></div><div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  gantt    title A Gantt Diagram    dateFormat  YYYY-MM-DD    section Section    A task           :a1, 2014-01-01, 30d    Another task     :after a1  , 20d    section Another    Task in sec      :2014-01-12  , 12d    another task      : 24d  </pre></div><h2 id="Note-Bootstrap-Callout"><a href="#Note-Bootstrap-Callout" class="headerlink" title="Note (Bootstrap Callout)"></a>Note (Bootstrap Callout)</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><blockquote><p>simple</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note simple %}默認 提示塊標籤{% endnote %}{% note default simple %}default 提示塊標籤{% endnote %}{% note primary simple %}primary 提示塊標籤{% endnote %}{% note success simple %}success 提示塊標籤{% endnote %}{% note info simple %}info 提示塊標籤{% endnote %}{% note warning simple %}warning 提示塊標籤{% endnote %}{% note danger simple %}danger 提示塊標籤{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note flat"><p>默認 提示塊標籤</p></div><div class="note default flat"><p>default 提示塊標籤</p></div><div class="note primary flat"><p>primary 提示塊標籤</p></div><div class="note success flat"><p>success 提示塊標籤</p></div><div class="note info flat"><p>info 提示塊標籤</p></div><div class="note warning flat"><p>warning 提示塊標籤</p></div><div class="note danger flat"><p>danger 提示塊標籤</p></div><blockquote><p>modern</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note modern %}默認 提示塊標籤{% endnote %}{% note default modern %}default 提示塊標籤{% endnote %}{% note primary modern %}primary 提示塊標籤{% endnote %}{% note success modern %}success 提示塊標籤{% endnote %}{% note info modern %}info 提示塊標籤{% endnote %}{% note warning modern %}warning 提示塊標籤{% endnote %}{% note danger modern %}danger 提示塊標籤{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note modern"><p>默認 提示塊標籤</p></div><div class="note default modern"><p>default 提示塊標籤</p></div><div class="note primary modern"><p>primary 提示塊標籤</p></div><div class="note success modern"><p>success 提示塊標籤</p></div><div class="note info modern"><p>info 提示塊標籤</p></div><div class="note warning modern"><p>warning 提示塊標籤</p></div><div class="note danger modern"><p>danger 提示塊標籤</p></div><blockquote><p>flat</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note flat %}默認 提示塊標籤{% endnote %}{% note default flat %}default 提示塊標籤{% endnote %}{% note primary flat %}primary 提示塊標籤{% endnote %}{% note success flat %}success 提示塊標籤{% endnote %}{% note info flat %}info 提示塊標籤{% endnote %}{% note warning flat %}warning 提示塊標籤{% endnote %}{% note danger flat %}danger 提示塊標籤{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note flat"><p>默認 提示塊標籤</p></div><div class="note default flat"><p>default 提示塊標籤</p></div><div class="note primary flat"><p>primary 提示塊標籤</p></div><div class="note success flat"><p>success 提示塊標籤</p></div><div class="note info flat"><p>info 提示塊標籤</p></div><div class="note warning flat"><p>warning 提示塊標籤</p></div><div class="note danger flat"><p>danger 提示塊標籤</p></div><blockquote><p>disabled</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note disabled %}默認 提示塊標籤{% endnote %}{% note default disabled %}default 提示塊標籤{% endnote %}{% note primary disabled %}primary 提示塊標籤{% endnote %}{% note success disabled %}success 提示塊標籤{% endnote %}{% note info disabled %}info 提示塊標籤{% endnote %}{% note warning disabled %}warning 提示塊標籤{% endnote %}{% note danger disabled %}danger 提示塊標籤{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note disabled"><p>默認 提示塊標籤</p></div><div class="note default disabled"><p>default 提示塊標籤</p></div><div class="note primary disabled"><p>primary 提示塊標籤</p></div><div class="note success disabled"><p>success 提示塊標籤</p></div><div class="note info disabled"><p>info 提示塊標籤</p></div><div class="note warning disabled"><p>warning 提示塊標籤</p></div><div class="note danger disabled"><p>danger 提示塊標籤</p></div><blockquote><p>no-icon</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note no-icon %}默認 提示塊標籤{% endnote %}{% note default no-icon %}default 提示塊標籤{% endnote %}{% note primary no-icon %}primary 提示塊標籤{% endnote %}{% note success no-icon %}success 提示塊標籤{% endnote %}{% note info no-icon %}info 提示塊標籤{% endnote %}{% note warning no-icon %}warning 提示塊標籤{% endnote %}{% note danger no-icon %}danger 提示塊標籤{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note no-icon flat"><p>默認 提示塊標籤</p></div><div class="note default no-icon flat"><p>default 提示塊標籤</p></div><div class="note primary no-icon flat"><p>primary 提示塊標籤</p></div><div class="note success no-icon flat"><p>success 提示塊標籤</p></div><div class="note info no-icon flat"><p>info 提示塊標籤</p></div><div class="note warning no-icon flat"><p>warning 提示塊標籤</p></div><div class="note danger no-icon flat"><p>danger 提示塊標籤</p></div><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><blockquote><p>simple</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note 'fab fa-cc-visa' simple %}你是刷 Visa 還是 UnionPay{% endnote %}{% note blue 'fas fa-bullhorn' simple %}2021年快到了....{% endnote %}{% note pink 'fas fa-car-crash' simple %}小心開車 安全至上{% endnote %}{% note red 'fas fa-fan' simple%}這是三片呢？還是四片？{% endnote %}{% note orange 'fas fa-battery-half' simple %}你是刷 Visa 還是 UnionPay{% endnote %}{% note purple 'far fa-hand-scissors' simple %}剪刀石頭布{% endnote %}{% note green 'fab fa-internet-explorer' simple %}前端最討厭的瀏覽器{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note icon simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note blue icon simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon simple"><i class="note-icon fas fa-car-crash"></i><p>小心開車 安全至上</p></div><div class="note red icon simple"><i class="note-icon fas fa-fan"></i><p>這是三片呢？還是四片？</p></div><div class="note orange icon simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note purple icon simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石頭布</p></div><div class="note green icon simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最討厭的瀏覽器</p></div><blockquote><p>modern</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note 'fab fa-cc-visa' modern %}你是刷 Visa 還是 UnionPay{% endnote %}{% note blue 'fas fa-bullhorn' modern %}2021年快到了....{% endnote %}{% note pink 'fas fa-car-crash' modern %}小心開車 安全至上{% endnote %}{% note red 'fas fa-fan' modern%}這是三片呢？還是四片？{% endnote %}{% note orange 'fas fa-battery-half' modern %}你是刷 Visa 還是 UnionPay{% endnote %}{% note purple 'far fa-hand-scissors' modern %}剪刀石頭布{% endnote %}{% note green 'fab fa-internet-explorer' modern %}前端最討厭的瀏覽器{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note icon modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon modern"><i class="note-icon fas fa-car-crash"></i><p>小心開車 安全至上</p></div><div class="note red icon modern"><i class="note-icon fas fa-fan"></i><p>這是三片呢？還是四片？</p></div><div class="note orange icon modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note purple icon modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石頭布</p></div><div class="note green icon modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最討厭的瀏覽器</p></div><blockquote><p>flat</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note 'fab fa-cc-visa' flat %}你是刷 Visa 還是 UnionPay{% endnote %}{% note blue 'fas fa-bullhorn' flat %}2021年快到了....{% endnote %}{% note pink 'fas fa-car-crash' flat %}小心開車 安全至上{% endnote %}{% note red 'fas fa-fan' flat%}這是三片呢？還是四片？{% endnote %}{% note orange 'fas fa-battery-half' flat %}你是刷 Visa 還是 UnionPay{% endnote %}{% note purple 'far fa-hand-scissors' flat %}剪刀石頭布{% endnote %}{% note green 'fab fa-internet-explorer' flat %}前端最討厭的瀏覽器{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note icon flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note blue icon flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon flat"><i class="note-icon fas fa-car-crash"></i><p>小心開車 安全至上</p></div><div class="note red icon flat"><i class="note-icon fas fa-fan"></i><p>這是三片呢？還是四片？</p></div><div class="note orange icon flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note purple icon flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石頭布</p></div><div class="note green icon flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最討厭的瀏覽器</p></div><blockquote><p>disabled</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note 'fab fa-cc-visa' disabled %}你是刷 Visa 還是 UnionPay{% endnote %}{% note blue 'fas fa-bullhorn' disabled %}2021年快到了....{% endnote %}{% note pink 'fas fa-car-crash' disabled %}小心開車 安全至上{% endnote %}{% note red 'fas fa-fan' disabled %}這是三片呢？還是四片？{% endnote %}{% note orange 'fas fa-battery-half' disabled %}你是刷 Visa 還是 UnionPay{% endnote %}{% note purple 'far fa-hand-scissors' disabled %}剪刀石頭布{% endnote %}{% note green 'fab fa-internet-explorer' disabled %}前端最討厭的瀏覽器{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note icon disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note blue icon disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon disabled"><i class="note-icon fas fa-car-crash"></i><p>小心開車 安全至上</p></div><div class="note red icon disabled"><i class="note-icon fas fa-fan"></i><p>這是三片呢？還是四片？</p></div><div class="note orange icon disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note purple icon disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石頭布</p></div><div class="note green icon disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最討厭的瀏覽器</p></div><blockquote><p>no-icon</p></blockquote><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">{% note no-icon %}你是刷 Visa 還是 UnionPay{% endnote %}{% note blue no-icon %}2021年快到了....{% endnote %}{% note pink no-icon %}小心開車 安全至上{% endnote %}{% note red no-icon %}這是三片呢？還是四片？{% endnote %}{% note orange no-icon %}你是刷 Visa 還是 UnionPay{% endnote %}{% note purple no-icon %}剪刀石頭布{% endnote %}{% note green no-icon %}前端最討厭的瀏覽器{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="note no-icon flat"><p>你是刷 Visa 還是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了….</p></div><div class="note pink no-icon flat"><p>小心開車 安全至上</p></div><div class="note red no-icon flat"><p>這是三片呢？還是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 還是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石頭布</p></div><div class="note green no-icon flat"><p>前端最討厭的瀏覽器</p></div><h2 id="Gallery-相冊圖庫"><a href="#Gallery-相冊圖庫" class="headerlink" title="Gallery 相冊圖庫"></a>Gallery 相冊圖庫</h2><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src="https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png" alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">壁紙</div>  <p>收藏的一些壁紙</p>  <a href="/Gallery/wallpaper"></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src="https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg" alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">漫威</div>  <p>關於漫威的圖片</p>  <a href="/Gallery/marvel"></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src="https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg" alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>關於OH MY GIRL的圖片</p>  <a href="/Gallery/ohmygirl"></a>  </figcaption>  </figure>  </div><h2 id="Gallery-相冊"><a href="#Gallery-相冊" class="headerlink" title="Gallery 相冊"></a>Gallery 相冊</h2><div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Jj8FXuKVlOea4Ec.jpg"><br><img src="https://i.loli.net/2019/12/25/eqBGrXx9tWsZOao.jpg"><br><img src="https://i.loli.net/2019/12/25/LjW2CfNSD7OaY4v.jpg"><br><img src="https://i.loli.net/2019/12/25/pGIhaPjxtl438U9.jpg"><br><img src="https://i.loli.net/2019/12/25/hzjJBR2x5SEmsbC.jpg"><br><img src="https://i.loli.net/2019/12/25/ucNDmUqQkrFfAWv.jpg"><br><img src="https://i.loli.net/2019/12/25/oj1wAnGSKtFvXIJ.jpg"></p>          </div><h2 id="tag-hide"><a href="#tag-hide" class="headerlink" title="tag-hide"></a>tag-hide</h2><p>隱藏文字，點擊顯示文章</p><h3 id="hide-inline"><a href="#hide-inline" class="headerlink" title="hide-inline"></a>hide-inline</h3><p>哪個英文字母最酷？ <span class="hide-inline"><button type="button" class="hide-button" style="background-color: #FF7242;color: #fff">查看答案  </button><span class="hide-content">因為西裝褲(C裝酷)</span></span></p><p>門裡站著一個人? <span class="hide-inline"><button type="button" class="hide-button" style="">Click  </button><span class="hide-content">閃</span></span></p><h3 id="hide-block"><a href="#hide-block" class="headerlink" title="hide-block"></a>hide-block</h3><p>美女</p><div class="hide-block"><button type="button" class="hide-button" style="">查看答案    </button><div class="hide-content"><div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg"><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg"><br><img src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg"><br><img src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg"><br><img src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg"><br><img src="https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg"><br><img src="https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg"><br><img src="https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg"></p>          </div></div></div><h3 id="hide-toggle"><a href="#hide-toggle" class="headerlink" title="hide-toggle"></a>hide-toggle</h3><details class="toggle"><summary class="toggle-button" style="">Butterfly安裝方法</summary><div class="toggle-content"><p>在你的博客根目錄裏</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果想要安裝比較新的dev分支，可以</p><pre class="line-numbers language-git" data-language="git"><code class="language-git">git clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg"><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg"><br><img src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg"><br><img src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg"><br><img src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg"><br><img src="https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg"><br><img src="https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg"><br><img src="https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg"></p>          </div></div></details>]]></content>
      
      
      <categories>
          
          <category> Demo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 標籤外掛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Localizable.strings来增加本地化功能</title>
      <link href="/posts/15034.html"/>
      <url>/posts/15034.html</url>
      
        <content type="html"><![CDATA[<h2 id="让app支持各种语言"><a href="#让app支持各种语言" class="headerlink" title="让app支持各种语言"></a>让app支持各种语言</h2><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOS-Localizable-strings/1.jpg"><br>首先创建一个Strings File<br>一般我们命名为 Localizable.strings</p><p>在Localizable.strings的属性中设置下localization, 点击后如下</p><p><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOS-Localizable-strings/2.jpg"></p><p>会多一个English 和Chinese…的标签</p><p>而后，我们进入项目工程，进入如下界面：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOS-Localizable-strings/3.jpg"></p><p>点击Localizations 中的加号，添加语言<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOS-Localizable-strings/4.jpg"></p><p>勾选需要本地化的文件，可以只勾选Localizable.strings<br>操作完了之后情况如下：<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOS-Localizable-strings/5.jpg"></p><p>而后根据键值来分别设定英语和汉语或其他语言所对应的词语，段落…<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/iOS-Localizable-strings/6.jpg"></p><p>That’s all, thank you !</p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Code Highlight Style test</title>
      <link href="/posts/9db656e5.html"/>
      <url>/posts/9db656e5.html</url>
      
        <content type="html"><![CDATA[<p>Make sure all the code blocks highlighted correctly. All the code samples are come from the demo of <a href="https://highlightjs.org/">https://highlightjs.org</a></p><span id="more"></span><pre class="line-numbers language-none"><code class="language-none">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-rust" data-language="rust"><code class="language-rust"><span class="token attribute attr-name">#[derive(Debug)]</span><span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">State</span> <span class="token punctuation">{</span>    <span class="token class-name">Start</span><span class="token punctuation">,</span>    <span class="token class-name">Transient</span><span class="token punctuation">,</span>    <span class="token class-name">Closed</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token operator">&amp;</span><span class="token lifetime-annotation symbol">'a</span> <span class="token keyword">str</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">State</span> <span class="token punctuation">{</span>    <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token lifetime-annotation symbol">'a</span> <span class="token keyword">str</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>        <span class="token keyword">match</span> s <span class="token punctuation">{</span>            <span class="token string">"start"</span> <span class="token operator">=&gt;</span> <span class="token class-name">State</span><span class="token punctuation">::</span><span class="token class-name">Start</span><span class="token punctuation">,</span>            <span class="token string">"closed"</span> <span class="token operator">=&gt;</span> <span class="token class-name">State</span><span class="token punctuation">::</span><span class="token class-name">Closed</span><span class="token punctuation">,</span>            _ <span class="token operator">=&gt;</span> <span class="token macro property">unreachable!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span>  <span class="token punctuation">{</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"apples"</span><span class="token punctuation">,</span>    <span class="token property">"count"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">12000</span><span class="token punctuation">,</span> <span class="token number">20000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"description"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token property">"text"</span><span class="token operator">:</span> <span class="token string">"..."</span><span class="token punctuation">,</span> <span class="token property">"sensitive"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"oranges"</span><span class="token punctuation">,</span>    <span class="token property">"count"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">17500</span><span class="token punctuation">,</span> <span class="token null keyword">null</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"description"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token property">"text"</span><span class="token operator">:</span> <span class="token string">"..."</span><span class="token punctuation">,</span> <span class="token property">"sensitive"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@requires_authorization</span><span class="token keyword">def</span> <span class="token function">somefunc</span><span class="token punctuation">(</span>param1<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span> param2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">r'''A docstring'''</span>    <span class="token keyword">if</span> param1 <span class="token operator">&gt;</span> param2<span class="token punctuation">:</span> <span class="token comment"># interesting</span>        <span class="token keyword">print</span> <span class="token string">'Gre\'ater'</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>param2 <span class="token operator">-</span> param1 <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> 0b10l<span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token boolean">None</span><span class="token keyword">class</span> <span class="token class-name">SomeClass</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> message <span class="token operator">=</span> <span class="token triple-quoted-string string">'''interpreter... prompt'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">body</span> <span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>application/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">function</span> <span class="token function">$init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">checked</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>title<span class="token punctuation">'</span></span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>  <span class="token comment">&lt;!-- here goes the rest of the page --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">$initHighlight</span><span class="token punctuation">(</span><span class="token parameter">block<span class="token punctuation">,</span> cls</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">try</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>cls<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\bno\-highlight\b</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token function">process</span><span class="token punctuation">(</span>block<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">)</span> <span class="token operator">+</span>             <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"> class="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>cls<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">"</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">/* handle exception */</span>  <span class="token punctuation">}</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> classes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">checkCondition</span><span class="token punctuation">(</span>classes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'undefined'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>      <span class="token operator">&lt;</span>web<span class="token operator">-</span>component<span class="token operator">&gt;</span><span class="token punctuation">{</span>block<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>web<span class="token operator">-</span>component<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>  <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">export</span> $initHighlight<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">/* An annoying "Hello World" example */</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">0xFFFF</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello, World!"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  <span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token char">'\n'</span><span class="token punctuation">;</span>  unordered_map <span class="token operator">&lt;</span>string<span class="token punctuation">,</span> vector<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> <span class="token operator">&gt;</span> m<span class="token punctuation">;</span>  m<span class="token punctuation">[</span><span class="token string">"key"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"\\\\"</span><span class="token punctuation">;</span> <span class="token comment">// this is an error</span>  <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">2e3</span> <span class="token operator">+</span> <span class="token number">12l</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token string">"topic"</span> <span class="token punctuation">(</span>    <span class="token string">"id"</span> <span class="token keyword">serial</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    <span class="token string">"forum_id"</span> <span class="token keyword">integer</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    <span class="token string">"subject"</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token string">"topic"</span><span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> forum_id <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token string">"forum_id"</span><span class="token punctuation">)</span><span class="token keyword">REFERENCES</span> <span class="token string">"forum"</span> <span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- Initials</span><span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token string">"topic"</span> <span class="token punctuation">(</span><span class="token string">"forum_id"</span><span class="token punctuation">,</span> <span class="token string">"subject"</span><span class="token punctuation">)</span><span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'D''artagnian'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-objectivec" data-language="objectivec"><code class="language-objectivec"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">import</span> <span class="token expression"><span class="token operator">&lt;</span>UIKit<span class="token operator">/</span>UIKit<span class="token punctuation">.</span>h<span class="token operator">&gt;</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">import</span> <span class="token string">"Dependency.h"</span></span><span class="token keyword">@protocol</span> WorldDataSource<span class="token operator">@</span>optional<span class="token operator">-</span> <span class="token punctuation">(</span>NSString<span class="token operator">*</span><span class="token punctuation">)</span>worldName<span class="token punctuation">;</span><span class="token operator">@</span>required<span class="token operator">-</span> <span class="token punctuation">(</span>BOOL<span class="token punctuation">)</span>allowsToLive<span class="token punctuation">;</span><span class="token keyword">@end</span><span class="token keyword">@property</span> <span class="token punctuation">(</span>nonatomic<span class="token punctuation">,</span> readonly<span class="token punctuation">)</span> NSString <span class="token operator">*</span>title<span class="token punctuation">;</span><span class="token operator">-</span> <span class="token punctuation">(</span>IBAction<span class="token punctuation">)</span> show<span class="token punctuation">;</span><span class="token keyword">@end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @author John Smith &lt;john.smith@example.com&gt;*/</span><span class="token keyword">package</span> <span class="token namespace">l2f<span class="token punctuation">.</span>gameserver<span class="token punctuation">.</span>model</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">L2Char</span> <span class="token keyword">extends</span> <span class="token class-name">L2Object</span> <span class="token punctuation">{</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Short</span> ERROR <span class="token operator">=</span> <span class="token number">0x0001</span><span class="token punctuation">;</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> z<span class="token punctuation">)</span> <span class="token punctuation">{</span>    _ai <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Should not be called"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&gt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// wtf!?</span>      <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">Foundation</span><span class="token attribute atrule">@objc</span> <span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span> <span class="token class-name">Entity</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">!</span>  <span class="token keyword">var</span> age<span class="token punctuation">:</span>  <span class="token class-name">Int</span><span class="token operator">!</span>  <span class="token keyword">init</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">/* /* ... */ */</span>  <span class="token punctuation">}</span>  <span class="token comment">// Return a descriptive string for this person</span>  <span class="token keyword">func</span> <span class="token function-definition function">description</span><span class="token punctuation">(</span>offset<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> is </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">age <span class="token operator">+</span> offset</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> years old"</span></span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token atrule"><span class="token rule">@font-face</span></span> <span class="token punctuation">{</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> Chunkfive<span class="token punctuation">;</span> <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">'Chunkfive.otf'</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">body, .usertext</span> <span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> #F0F0F0<span class="token punctuation">;</span> <span class="token property">background</span><span class="token punctuation">:</span> #600<span class="token punctuation">;</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> Chunkfive<span class="token punctuation">,</span> sans<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@import</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>print.css<span class="token punctuation">)</span></span><span class="token punctuation">;</span></span><span class="token atrule"><span class="token rule">@media</span> print</span> <span class="token punctuation">{</span>  <span class="token selector">a[href^=http]::after</span> <span class="token punctuation">{</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token function">attr</span><span class="token punctuation">(</span>href<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby"><span class="token comment"># The Greeter class</span><span class="token keyword">class</span> <span class="token class-name">Greeter</span>  <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">initialize</span></span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>    <span class="token variable">@name</span> <span class="token operator">=</span> name<span class="token punctuation">.</span>capitalize  <span class="token keyword">end</span>  <span class="token keyword">def</span> <span class="token method-definition"><span class="token function">salute</span></span>    puts <span class="token string-literal"><span class="token string">"Hello </span><span class="token interpolation"><span class="token delimiter punctuation">#{</span><span class="token content"><span class="token variable">@name</span></span><span class="token delimiter punctuation">}</span></span><span class="token string">!"</span></span>  <span class="token keyword">end</span><span class="token keyword">end</span>g <span class="token operator">=</span> <span class="token class-name">Greeter</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"world"</span></span><span class="token punctuation">)</span>g<span class="token punctuation">.</span>salute<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-makefile" data-language="makefile"><code class="language-makefile"><span class="token comment"># Makefile</span>BUILDDIR      <span class="token operator">=</span> _buildEXTRAS       <span class="token operator">?=</span> <span class="token variable">$</span><span class="token punctuation">(</span>BUILDDIR<span class="token punctuation">)</span>/extras<span class="token builtin-target builtin">.PHONY</span><span class="token punctuation">:</span> main clean<span class="token target symbol">main</span><span class="token punctuation">:</span><span class="token operator">@</span>echo <span class="token string">"Building main facility..."</span>build_main <span class="token variable">$</span><span class="token punctuation">(</span>BUILDDIR<span class="token punctuation">)</span><span class="token target symbol">clean</span><span class="token punctuation">:</span>rm -rf <span class="token variable">$</span><span class="token punctuation">(</span>BUILDDIR<span class="token punctuation">)</span>/*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ch <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">float64</span><span class="token punctuation">)</span>    ch <span class="token operator">&lt;-</span> <span class="token number">1.0e10</span>    <span class="token comment">// magic number</span>    x<span class="token punctuation">,</span> ok <span class="token operator">:=</span> <span class="token operator">&lt;-</span> ch    <span class="token keyword">defer</span> fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">`exitting now\`</span><span class="token punctuation">)</span>    <span class="token keyword">go</span> <span class="token function">println</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token string">"hello world!"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token comment">###### CONFIG</span><span class="token assign-left variable">ACCEPTED_HOSTS</span><span class="token operator">=</span><span class="token string">"/root/.hag_accepted.conf"</span><span class="token assign-left variable">BE_VERBOSE</span><span class="token operator">=</span>false<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token environment constant">$UID</span>"</span> -ne <span class="token number">0</span> <span class="token punctuation">]</span><span class="token keyword">then</span>  <span class="token builtin class-name">echo</span> <span class="token string">"Superuser rights required"</span>  <span class="token builtin class-name">exit</span> <span class="token number">2</span><span class="token keyword">fi</span><span class="token function-name function">genApacheConf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token builtin class-name">echo</span> -e <span class="token string">"# Host <span class="token variable">${HOME_DIR}</span><span class="token variable">$1</span>/<span class="token variable">$2</span> :"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-ini" data-language="ini"><code class="language-ini"><span class="token comment">; boilerplate</span><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">package</span><span class="token punctuation">]</span></span><span class="token key attr-name">name</span> <span class="token punctuation">=</span> <span class="token value attr-value">"<span class="token inner-value">some_name</span>"</span><span class="token key attr-name">authors</span> <span class="token punctuation">=</span> <span class="token value attr-value">["Author"]</span><span class="token key attr-name">description</span> <span class="token punctuation">=</span> <span class="token value attr-value">"This is \</span>a description"<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">[lib</span><span class="token punctuation">]</span></span>]<span class="token key attr-name">name</span> <span class="token punctuation">=</span> <span class="token value attr-value">${NAME}</span><span class="token key attr-name">default</span> <span class="token punctuation">=</span> <span class="token value attr-value">True</span><span class="token key attr-name">auto</span> <span class="token punctuation">=</span> <span class="token value attr-value">no</span><span class="token key attr-name">counter</span> <span class="token punctuation">=</span> <span class="token value attr-value">1_000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Demo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> highlight </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模式匹配摘录</title>
      <link href="/posts/26239.html"/>
      <url>/posts/26239.html</url>
      
        <content type="html"><![CDATA[<h1 id="模式匹配摘录"><a href="#模式匹配摘录" class="headerlink" title="模式匹配摘录"></a>模式匹配摘录</h1><p>========================<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D%E6%91%98%E5%BD%95/%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D%E6%91%98%E5%BD%95.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>闭包循环引用</title>
      <link href="/posts/22939.html"/>
      <url>/posts/22939.html</url>
      
        <content type="html"><![CDATA[<h1 id="闭包循环引用"><a href="#闭包循环引用" class="headerlink" title="闭包循环引用"></a>闭包循环引用</h1><p>========================<br>我们在闭包的基础概念中讲到闭包是引用类型的，因此，与Objective-C的block一样，可能导致循环引用的问题。</p><h2 id="问题的产生"><a href="#问题的产生" class="headerlink" title="问题的产生"></a>问题的产生</h2><p>当我们给一个类指定一个闭包属性时，这个类的实例便包含了闭包的一个引用。如果在这个闭包中，又引用了类实例本身，这时闭包便创建了一个指向类实例的强引用，这种情况下，又产生了循环引用。</p><p>如代码清单1所示：HTMLElement类定义了一个闭包属性asHTML。在这个闭包中引用了self，即闭包捕获了self，这就意味着闭包维护了一个指向HTMLElement实例的强引用。这样就在两者间创建了一个强引用循环。</p><h4 id="代码清单1：闭包循环引用"><a href="#代码清单1：闭包循环引用" class="headerlink" title="代码清单1：闭包循环引用"></a>代码清单1：闭包循环引用</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">class</span> <span class="token class-name">HTMLElement</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> name<span class="token punctuation">:</span><span class="token class-name">String</span>    <span class="token keyword">let</span> text<span class="token punctuation">:</span><span class="token class-name">String</span><span class="token operator">?</span>        <span class="token attribute atrule">@lazy</span> <span class="token keyword">var</span> asHTML<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token keyword">let</span> text <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>text <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string-literal"><span class="token string">"&lt;</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token keyword">self</span><span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">]]&gt;</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token keyword">self</span><span class="token punctuation">.</span>text</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&lt;/</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token keyword">self</span><span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&gt;"</span></span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string-literal"><span class="token string">"&lt;</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token keyword">self</span><span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> /&gt;"</span></span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>        <span class="token keyword">init</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span><span class="token class-name">String</span><span class="token punctuation">,</span> text<span class="token punctuation">:</span><span class="token class-name">String</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token nil constant">nil</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">self</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name        <span class="token keyword">self</span><span class="token punctuation">.</span>text <span class="token operator">=</span> text    <span class="token punctuation">}</span>        <span class="token keyword">deinit</span> <span class="token punctuation">{</span>        <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> is being deinitialized"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>我们可以通过“捕获列表”来解决这种循环引用问题。“捕获列表”定义了在闭包内部捕获的引用类型的使用规则。与两个类之间的强引用循环一样，我们声明每一个捕获引用为weak或者unowned引用。选择weak或者unowned依赖于两者之间的关系。</p><p>一个“捕获列表项”是一个weak(unowned)—类实例引用对。它们放在[]中，项与项之间使用“,”号隔开。</p><p>当闭包和捕获实例总是相互引用，且两者同时释放时，我们将“捕获引用”设置为unowned。如果“捕获引用”可能在某个点被设置成nil，则将其设置为weak。weak引用通常都是optional类型，当引用的实例被释放时，被设置成nil。</p><p>在代码清单1中，我们可以用unowned来处理这种循环引用问题。如代码清单2所示：</p><h4 id="代码清单2：unowned引用"><a href="#代码清单2：unowned引用" class="headerlink" title="代码清单2：unowned引用"></a>代码清单2：unowned引用</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">class</span> <span class="token class-name">HTMLElement</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> name<span class="token punctuation">:</span><span class="token class-name">String</span>    <span class="token keyword">let</span> text<span class="token punctuation">:</span><span class="token class-name">String</span><span class="token operator">?</span>        <span class="token attribute atrule">@lazy</span> <span class="token keyword">var</span> asHTML<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token punctuation">[</span><span class="token keyword">unowned</span> <span class="token keyword">self</span><span class="token punctuation">]</span> <span class="token keyword">in</span>        <span class="token keyword">if</span> <span class="token keyword">let</span> text <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>text <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string-literal"><span class="token string">"&lt;</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token keyword">self</span><span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">]]&gt;</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token keyword">self</span><span class="token punctuation">.</span>text</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&lt;/</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token keyword">self</span><span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&gt;"</span></span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string-literal"><span class="token string">"&lt;</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token keyword">self</span><span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> /&gt;"</span></span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>        <span class="token keyword">init</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span><span class="token class-name">String</span><span class="token punctuation">,</span> text<span class="token punctuation">:</span><span class="token class-name">String</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token nil constant">nil</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">self</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name        <span class="token keyword">self</span><span class="token punctuation">.</span>text <span class="token operator">=</span> text    <span class="token punctuation">}</span>        <span class="token keyword">deinit</span> <span class="token punctuation">{</span>        <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> is being deinitialized"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这种情况下，闭包维护了HTMLElement实例的一个unowned引用，而不再是一个强引用。</p><p>注：虽然在闭包中多次引用了self，但闭包只会维护HTMLElement实例的一个引用</p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift反射摘录</title>
      <link href="/posts/26121.html"/>
      <url>/posts/26121.html</url>
      
        <content type="html"><![CDATA[<h1 id="Swift反射摘录"><a href="#Swift反射摘录" class="headerlink" title="Swift反射摘录"></a>Swift反射摘录</h1><p>========================<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/Swift%E5%8F%8D%E5%B0%84%E6%91%98%E5%BD%95/Swift%E5%8F%8D%E5%B0%84%E6%91%98%E5%BD%95.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将framework提交至cocoapods工作记录</title>
      <link href="/posts/62594.html"/>
      <url>/posts/62594.html</url>
      
        <content type="html"><![CDATA[<h1 id="将framework提交至cocoapods工作记录"><a href="#将framework提交至cocoapods工作记录" class="headerlink" title="将framework提交至cocoapods工作记录"></a>将framework提交至cocoapods工作记录</h1><p>========================</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % <span class="token function">git</span> commit -m <span class="token string">"Initial release of InterfaceKit"</span><span class="token punctuation">[</span>master <span class="token punctuation">(</span>root-commit<span class="token punctuation">)</span> a1942f6<span class="token punctuation">]</span> Initial release of InterfaceKit <span class="token number">155</span> files changed, <span class="token number">21738</span> insertions<span class="token punctuation">(</span>+<span class="token punctuation">)</span> create mode <span class="token number">100644</span> .github/ISSUE_TEMPLATE.md create mode <span class="token number">100644</span> .github/Pull_request_template.md create mode <span class="token number">100644</span> .github/workflows/podspecs.yml create mode <span class="token number">100644</span> .github/workflows/tests.yml create mode <span class="token number">100644</span> .gitignore create mode <span class="token number">100644</span> .jazzy.yaml create mode <span class="token number">100644</span> .ruby-gemset create mode <span class="token number">100644</span> .ruby-version create mode <span class="token number">100644</span> .swift-version create mode <span class="token number">100644</span> .swiftformat create mode <span class="token number">100644</span> .swiftlint.yml create mode <span class="token number">100644</span> .swiftpm/xcode/package.xcworkspace/contents.xcworkspacedata create mode <span class="token number">100644</span> .swiftpm/xcode/package.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist create mode <span class="token number">100644</span> CHANGELOG.md create mode <span class="token number">100644</span> CHANGELOG.zh-Hans.md create mode <span class="token number">100644</span> CONTRIBUTING.md create mode <span class="token number">100644</span> CONTRIBUTING.zh-Hans.md create mode <span class="token number">100644</span> CartfileExample/Cartfile create mode <span class="token number">100644</span> Code of Conduct.md create mode <span class="token number">100644</span> Code of Conduct.zh-Hans.md create mode <span class="token number">100644</span> Docs/Structs.html create mode <span class="token number">100644</span> Docs/Structs/InterfaceView.html create mode <span class="token number">100644</span> Docs/Structs/InterfaceViewController.html create mode <span class="token number">100644</span> Docs/Structs/NSInterfaceView.html create mode <span class="token number">100644</span> Docs/Structs/NSInterfaceViewController.html create mode <span class="token number">100644</span> Docs/Structs/WKInterfaceView.html create mode <span class="token number">100644</span> Docs/badge.svg create mode <span class="token number">100644</span> Docs/css/highlight.css create mode <span class="token number">100644</span> Docs/css/jazzy.css create mode <span class="token number">100644</span> Docs/docsets/.docset/Contents/Info.plist create mode <span class="token number">100644</span> Docs/docsets/.docset/Contents/Resources/Documents/Structs.html create mode <span class="token number">100644</span> Docs/docsets/.docset/Contents/Resources/Documents/Structs/InterfaceView.html create mode <span class="token number">100644</span> Docs/docsets/.docset/Contents/Resources/Documents/Structs/InterfaceViewController.html create mode <span class="token number">100644</span> Docs/docsets/.docset/Contents/Resources/Documents/Structs/NSInterfaceView.html create mode <span class="token number">100644</span> Docs/docsets/.docset/Contents/Resources/Documents/Structs/NSInterfaceViewController.html create mode <span class="token number">100644</span> Docs/docsets/.docset/Contents/Resources/Documents/Structs/WKInterfaceView.html create mode <span class="token number">100644</span> Docs/docsets/.docset/Contents/Resources/Documents/badge.svg create mode <span class="token number">100644</span> Docs/docsets/.docset/Contents/Resources/Documents/css/highlight.css create mode <span class="token number">100644</span> Docs/docsets/.docset/Contents/Resources/Documents/css/jazzy.css create mode <span class="token number">100755</span> Docs/docsets/.docset/Contents/Resources/Documents/img/carat.png create mode <span class="token number">100755</span> Docs/docsets/.docset/Contents/Resources/Documents/img/dash.png create mode <span class="token number">100755</span> Docs/docsets/.docset/Contents/Resources/Documents/img/gh.png create mode <span class="token number">100644</span> Docs/docsets/.docset/Contents/Resources/Documents/img/spinner.gif create mode <span class="token number">100644</span> Docs/docsets/.docset/Contents/Resources/Documents/index.html create mode <span class="token number">100755</span> Docs/docsets/.docset/Contents/Resources/Documents/js/jazzy.js create mode <span class="token number">100644</span> Docs/docsets/.docset/Contents/Resources/Documents/js/jazzy.search.js create mode <span class="token number">100644</span> Docs/docsets/.docset/Contents/Resources/Documents/js/jquery.min.js create mode <span class="token number">100644</span> Docs/docsets/.docset/Contents/Resources/Documents/js/lunr.min.js create mode <span class="token number">100644</span> Docs/docsets/.docset/Contents/Resources/Documents/js/typeahead.jquery.js create mode <span class="token number">100644</span> Docs/docsets/.docset/Contents/Resources/Documents/search.json create mode <span class="token number">100644</span> Docs/docsets/.docset/Contents/Resources/Documents/undocumented.json create mode <span class="token number">100644</span> Docs/docsets/.docset/Contents/Resources/docSet.dsidx create mode <span class="token number">100644</span> Docs/docsets/.tgz create mode <span class="token number">100644</span> Docs/docsets/InterfaceKit.docset/Contents/Info.plist create mode <span class="token number">100644</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/Structs.html create mode <span class="token number">100644</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/Structs/InterfaceView.html create mode <span class="token number">100644</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/Structs/InterfaceViewController.html create mode <span class="token number">100644</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/Structs/NSInterfaceView.html create mode <span class="token number">100644</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/Structs/NSInterfaceViewController.html create mode <span class="token number">100644</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/Structs/WKInterfaceView.html create mode <span class="token number">100644</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/badge.svg create mode <span class="token number">100644</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/css/highlight.css create mode <span class="token number">100644</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/css/jazzy.css create mode <span class="token number">100755</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/img/carat.png create mode <span class="token number">100755</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/img/dash.png create mode <span class="token number">100755</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/img/gh.png create mode <span class="token number">100644</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/img/spinner.gif create mode <span class="token number">100644</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/index.html create mode <span class="token number">100755</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/js/jazzy.js create mode <span class="token number">100644</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/js/jazzy.search.js create mode <span class="token number">100644</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/js/jquery.min.js create mode <span class="token number">100644</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/js/lunr.min.js create mode <span class="token number">100644</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/js/typeahead.jquery.js create mode <span class="token number">100644</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/search.json create mode <span class="token number">100644</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/Documents/undocumented.json create mode <span class="token number">100644</span> Docs/docsets/InterfaceKit.docset/Contents/Resources/docSet.dsidx create mode <span class="token number">100644</span> Docs/docsets/InterfaceKit.tgz create mode <span class="token number">100644</span> Docs/docsets/InterfaceKit.xml create mode <span class="token number">100755</span> Docs/img/carat.png create mode <span class="token number">100755</span> Docs/img/dash.png create mode <span class="token number">100755</span> Docs/img/gh.png create mode <span class="token number">100644</span> Docs/img/spinner.gif create mode <span class="token number">100644</span> Docs/index.html create mode <span class="token number">100755</span> Docs/js/jazzy.js create mode <span class="token number">100644</span> Docs/js/jazzy.search.js create mode <span class="token number">100644</span> Docs/js/jquery.min.js create mode <span class="token number">100644</span> Docs/js/lunr.min.js create mode <span class="token number">100644</span> Docs/js/typeahead.jquery.js create mode <span class="token number">100644</span> Docs/search.json create mode <span class="token number">100644</span> Docs/undocumented.json create mode <span class="token number">100644</span> Example/iOSExample/EApp.swift create mode <span class="token number">100644</span> Example/iOSExample/Example.xcodeproj/project.pbxproj create mode <span class="token number">100644</span> Example/iOSExample/Example.xcodeproj/project.xcworkspace/contents.xcworkspacedata create mode <span class="token number">100644</span> Example/iOSExample/Example.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist create mode <span class="token number">100644</span> Example/iOSExample/Example/Info.plist create mode <span class="token number">100644</span> Example/iOSExample/Example/Preview Content/Preview Assets.xcassets/Contents.json create mode <span class="token number">100644</span> Example/macOSExample/macOSExample.xcodeproj/project.pbxproj create mode <span class="token number">100644</span> Example/macOSExample/macOSExample.xcodeproj/project.xcworkspace/contents.xcworkspacedata create mode <span class="token number">100644</span> Example/macOSExample/macOSExample.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist create mode <span class="token number">100644</span> Example/macOSExample/macOSExample/Info.plist create mode <span class="token number">100644</span> Example/macOSExample/macOSExample/Preview Content/Preview Assets.xcassets/Contents.json create mode <span class="token number">100644</span> Example/macOSExample/macOSExample/macOSExample.entitlements create mode <span class="token number">100644</span> Example/tvOSExample/tvOSExample.xcodeproj/project.pbxproj create mode <span class="token number">100644</span> Example/tvOSExample/tvOSExample.xcodeproj/project.xcworkspace/contents.xcworkspacedata create mode <span class="token number">100644</span> Example/tvOSExample/tvOSExample.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist create mode <span class="token number">100644</span> Example/tvOSExample/tvOSExample/Info.plist create mode <span class="token number">100644</span> Example/tvOSExample/tvOSExample/Preview Content/Preview Assets.xcassets/Contents.json create mode <span class="token number">100644</span> Example/watchOSExample/watchOSExample WatchKit App/Assets.xcassets/AccentColor.colorset/Contents.json create mode <span class="token number">100644</span> Example/watchOSExample/watchOSExample WatchKit App/Assets.xcassets/AppIcon.appiconset/Contents.json create mode <span class="token number">100644</span> Example/watchOSExample/watchOSExample WatchKit App/Assets.xcassets/Contents.json create mode <span class="token number">100644</span> Example/watchOSExample/watchOSExample WatchKit App/Info.plist create mode <span class="token number">100644</span> Example/watchOSExample/watchOSExample WatchKit Extension/Info.plist create mode <span class="token number">100644</span> Example/watchOSExample/watchOSExample WatchKit Extension/Preview Content/Preview Assets.xcassets/Contents.json create mode <span class="token number">100644</span> Example/watchOSExample/watchOSExample.xcodeproj/project.pbxproj create mode <span class="token number">100644</span> Example/watchOSExample/watchOSExample.xcodeproj/project.xcworkspace/contents.xcworkspacedata create mode <span class="token number">100644</span> Example/watchOSExample/watchOSExample.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist create mode <span class="token number">100644</span> Gemfile create mode <span class="token number">100644</span> InterfaceKit.podspec create mode <span class="token number">100644</span> InterfaceKit.xcframework.zip create mode <span class="token number">100644</span> InterfaceKit.xcodeproj/project.pbxproj create mode <span class="token number">100644</span> InterfaceKit.xcodeproj/project.xcworkspace/contents.xcworkspacedata create mode <span class="token number">100644</span> InterfaceKit.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist create mode <span class="token number">100644</span> InterfaceKit.xcodeproj/xcshareddata/xcschemes/InterfaceKit.xcscheme create mode <span class="token number">100644</span> InterfaceKit.xcworkspace/contents.xcworkspacedata create mode <span class="token number">100644</span> InterfaceKit.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist create mode <span class="token number">100644</span> InterfaceKit/Info.plist create mode <span class="token number">100644</span> InterfaceKit/InterfaceKit.h create mode <span class="token number">100644</span> InterfaceKitTests/Info.plist create mode <span class="token number">100644</span> InterfaceKitTests/InterfaceKitTests.swift create mode <span class="token number">100644</span> LICENSE create mode <span class="token number">100644</span> LICENSE.md create mode <span class="token number">100644</span> LICENSE.zh-Hans.md create mode <span class="token number">100644</span> Package.swift create mode <span class="token number">100644</span> Pictures/CartfileLocation.png create mode <span class="token number">100644</span> Pictures/China.png create mode <span class="token number">100644</span> Pictures/PodfileLocation.png create mode <span class="token number">100644</span> Pictures/SwiftPackageManager.png create mode <span class="token number">100644</span> Pictures/add_framework.png create mode <span class="token number">100644</span> Pictures/copy_files.png create mode <span class="token number">100644</span> Pictures/drag_framework.png create mode <span class="token number">100644</span> Pictures/unzip.png create mode <span class="token number">100644</span> Pictures/use_frameworks.png create mode <span class="token number">100644</span> Pictures/use_xcframeworks.png create mode <span class="token number">100755</span> PodfileExample/Podfile create mode <span class="token number">100644</span> README.md create mode <span class="token number">100644</span> README.zh-Hans.md create mode <span class="token number">100644</span> Sources/InterfaceKit/NSInterface.swift create mode <span class="token number">100644</span> Sources/InterfaceKit/UIInterface.swift create mode <span class="token number">100644</span> Sources/InterfaceKit/WKInterface.swift create mode <span class="token number">100644</span> Tests/InterfaceKitTests/InterfaceKitTests.swift create mode <span class="token number">100644</span> Tests/InterfaceKitTests/XCTestManifests.swift create mode <span class="token number">100644</span> Tests/LinuxMain.swift create mode <span class="token number">100644</span> Vision.md create mode <span class="token number">100644</span> Vision.zh-Hans.md create mode <span class="token number">100644</span> codecov.ymlzhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % <span class="token function">git</span> pushTo https://github.com/adong666666/InterfaceKit.git <span class="token operator">!</span> <span class="token punctuation">[</span>rejected<span class="token punctuation">]</span>        master -<span class="token operator">&gt;</span> master <span class="token punctuation">(</span>fetch first<span class="token punctuation">)</span>error: failed to push some refs to <span class="token string">'https://github.com/adong666666/InterfaceKit.git'</span>hint: Updates were rejected because the remote contains work that you <span class="token keyword">do</span>hint: not have locally. This is usually caused by another repository pushinghint: to the same ref. You may want to first integrate the remote changeshint: <span class="token punctuation">(</span>e.g., <span class="token string">'git pull ...'</span><span class="token punctuation">)</span> before pushing again.hint: See the <span class="token string">'Note about fast-forwards'</span> <span class="token keyword">in</span> <span class="token string">'git push --help'</span> <span class="token keyword">for</span> details.zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % <span class="token function">git</span> push -fEnumerating objects: <span class="token number">162</span>, done.Counting objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">162</span>/162<span class="token punctuation">)</span>, done.Delta compression using up to <span class="token number">16</span> threadsCompressing objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">145</span>/145<span class="token punctuation">)</span>, done.Writing objects: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">162</span>/162<span class="token punctuation">)</span>, <span class="token number">8.12</span> MiB <span class="token operator">|</span> <span class="token number">45.00</span> KiB/s, done.Total <span class="token number">162</span> <span class="token punctuation">(</span>delta <span class="token number">28</span><span class="token punctuation">)</span>, reused <span class="token number">0</span> <span class="token punctuation">(</span>delta <span class="token number">0</span><span class="token punctuation">)</span>remote: Resolving deltas: <span class="token number">100</span>% <span class="token punctuation">(</span><span class="token number">28</span>/28<span class="token punctuation">)</span>, done.To https://github.com/adong666666/InterfaceKit.git + 7d1efa9<span class="token punctuation">..</span>.a1942f6 master -<span class="token operator">&gt;</span> master <span class="token punctuation">(</span>forced update<span class="token punctuation">)</span>zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % <span class="token function">git</span> tag <span class="token number">5.4</span>.0zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % <span class="token function">git</span> push --tagTotal <span class="token number">0</span> <span class="token punctuation">(</span>delta <span class="token number">0</span><span class="token punctuation">)</span>, reused <span class="token number">0</span> <span class="token punctuation">(</span>delta <span class="token number">0</span><span class="token punctuation">)</span>To https://github.com/adong666666/InterfaceKit.git * <span class="token punctuation">[</span>new tag<span class="token punctuation">]</span>         <span class="token number">5.4</span>.0 -<span class="token operator">&gt;</span> <span class="token number">5.4</span>.0zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % pod lib lint -<span class="token operator">&gt;</span> InterfaceKit <span class="token punctuation">(</span><span class="token number">5.4</span>.0<span class="token punctuation">)</span>    - NOTE  <span class="token operator">|</span> <span class="token punctuation">[</span>InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more<span class="token punctuation">..</span>.<span class="token punctuation">]</span> xcodebuild:  note: Using new build system    - NOTE  <span class="token operator">|</span> <span class="token punctuation">[</span>InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more<span class="token punctuation">..</span>.<span class="token punctuation">]</span> xcodebuild:  note: Building targets <span class="token keyword">in</span> parallel    - NOTE  <span class="token operator">|</span> <span class="token punctuation">[</span>InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more<span class="token punctuation">..</span>.<span class="token punctuation">]</span> xcodebuild:  note: Using codesigning identity override: -    - NOTE  <span class="token operator">|</span> <span class="token punctuation">[</span>InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more<span class="token punctuation">..</span>.<span class="token punctuation">]</span> xcodebuild:  note: Planning build    - NOTE  <span class="token operator">|</span> <span class="token punctuation">[</span>InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more<span class="token punctuation">..</span>.<span class="token punctuation">]</span> xcodebuild:  note: Constructing build description    - NOTE  <span class="token operator">|</span> <span class="token punctuation">[</span>InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more<span class="token punctuation">..</span>.<span class="token punctuation">]</span> xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist <span class="token function">file</span> and one is not being generated automatically. <span class="token punctuation">(</span>in target <span class="token string">'App'</span> from project <span class="token string">'App'</span><span class="token punctuation">)</span>    - NOTE  <span class="token operator">|</span> <span class="token punctuation">[</span>InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more<span class="token punctuation">..</span>.<span class="token punctuation">]</span> xcodebuild:  note: Using codesigning identity override: InterfaceKit passed validation.zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit % pod trunk push InterfaceKit.podspecUpdating spec repo <span class="token variable"><span class="token variable">`</span>trunk<span class="token variable">`</span></span>Validating podspec -<span class="token operator">&gt;</span> InterfaceKit <span class="token punctuation">(</span><span class="token number">5.4</span>.0<span class="token punctuation">)</span>    - NOTE  <span class="token operator">|</span> <span class="token punctuation">[</span>InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more<span class="token punctuation">..</span>.<span class="token punctuation">]</span> xcodebuild:  note: Using new build system    - NOTE  <span class="token operator">|</span> <span class="token punctuation">[</span>InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more<span class="token punctuation">..</span>.<span class="token punctuation">]</span> xcodebuild:  note: Building targets <span class="token keyword">in</span> parallel    - NOTE  <span class="token operator">|</span> <span class="token punctuation">[</span>InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more<span class="token punctuation">..</span>.<span class="token punctuation">]</span> xcodebuild:  note: Using codesigning identity override: -    - NOTE  <span class="token operator">|</span> <span class="token punctuation">[</span>InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more<span class="token punctuation">..</span>.<span class="token punctuation">]</span> xcodebuild:  note: Planning build    - NOTE  <span class="token operator">|</span> <span class="token punctuation">[</span>InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more<span class="token punctuation">..</span>.<span class="token punctuation">]</span> xcodebuild:  note: Constructing build description    - NOTE  <span class="token operator">|</span> <span class="token punctuation">[</span>InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more<span class="token punctuation">..</span>.<span class="token punctuation">]</span> xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist <span class="token function">file</span> and one is not being generated automatically. <span class="token punctuation">(</span>in target <span class="token string">'App'</span> from project <span class="token string">'App'</span><span class="token punctuation">)</span>    - NOTE  <span class="token operator">|</span> <span class="token punctuation">[</span>InterfaceKit/UIKit, InterfaceKit/AppKit, InterfaceKit/WatchKit, and more<span class="token punctuation">..</span>.<span class="token punctuation">]</span> xcodebuild:  note: Using codesigning identity override: Updating spec repo <span class="token variable"><span class="token variable">`</span>trunk<span class="token variable">`</span></span>-------------------------------------------------------------------------------- 🎉  Congrats 🚀  InterfaceKit <span class="token punctuation">(</span><span class="token number">5.4</span>.0<span class="token punctuation">)</span> successfully published 📅  April 30th, <span class="token number">10</span>:04 🌎  https://cocoapods.org/pods/InterfaceKit 👍  Tell your friends<span class="token operator">!</span>--------------------------------------------------------------------------------zhangsaidong@zhangsaidongs-MacBook-Pro InterfaceKit %       <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">Last login: Thu Jan 17 17:43:47 on ttys001iMac-2:~ adong666666$ cd CommonUseiMac-2:CommonUse adong666666$ git add .giMac-2:CommonUse adong666666$ git push origin masterEverything up-to-dateiMac-2:CommonUse adong666666$ git add .iMac-2:CommonUse adong666666$ git commit -m "fix description"[master 7d4ebe8] fix description 1 file changed, 1 insertion(+), 1 deletion(-)iMac-2:CommonUse adong666666$ git push origin masgtererror: src refspec masgter does not match any.error: 推送一些引用到 'https://github.com/adong666666/CommonUse.git' 失败iMac-2:CommonUse adong666666$ git push origin master枚举对象: 5, 完成.对象计数中: 100% (5/5), 完成.使用 4 个线程进行压缩压缩对象中: 100% (3/3), 完成.写入对象中: 100% (3/3), 293 bytes | 293.00 KiB/s, 完成.总共 3 （差异 2），复用 0 （差异 0）remote: Resolving deltas: 100% (2/2), completed with 2 local objects.To https://github.com/adong666666/CommonUse.git   1618908..7d4ebe8  master -&gt; masteriMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ git add .iMac-2:CommonUse adong666666$ git commit -m "fix description"[master a7b439f] fix description 1 file changed, 1 insertion(+), 1 deletion(-)iMac-2:CommonUse adong666666$ git push origin masterpod l枚举对象: 5, 完成.对象计数中: 100% (5/5), 完成.使用 4 个线程进行压缩压缩对象中: 100% (3/3), 完成.写入对象中: 100% (3/3), 305 bytes | 305.00 KiB/s, 完成.总共 3 （差异 2），复用 0 （差异 0）remote: Resolving deltas: 100% (2/2), completed with 2 local objects. liTo https://github.com/adong666666/CommonUse.git   7d4ebe8..a7b439f  master -&gt; masterniMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ git add .iMac-2:CommonUse adong666666$ git commit -m "fix podspec"[master 09fbf0d] fix podspec 1 file changed, 1 insertion(+), 1 deletion(-)iMac-2:CommonUse adong666666$ git push origin master枚举对象: 5, 完成.对象计数中: 100% (5/5), 完成.使用 4 个线程进行压缩压缩对象中: 100% (3/3), 完成.写入对象中: 100% (3/3), 299 bytes | 299.00 KiB/s, 完成.总共 3 （差异 2），复用 0 （差异 0）remote: Resolving deltas: 100% (2/2), completed with 2 local objects.To https://github.com/adong666666/CommonUse.git   a7b439f..09fbf0d  master -&gt; masteriMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - WARN  | [iOS] swift: The validator used Swift 3.2 by default because no Swift version was specified. To specify a Swift version during validation, add the `swift_version` attribute in your podspec. Note that usage of the `--swift-version` parameter or a `.swift-version` file is now deprecated.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')    - NOTE  | xcodebuild:  warning: Swift 3 mode has been deprecated and will be removed in a later version of Xcode. Please migrate "App" to Swift 4.2 using "Convert &gt; To Current Swift Syntax…" in the Edit menu. (in target 'App')    - NOTE  | xcodebuild:  warning: Swift 3 mode has been deprecated and will be removed in a later version of Xcode. Please migrate "CommonUse" to Swift 4.2 using "Convert &gt; To Current Swift Syntax…" in the Edit menu. (in target 'CommonUse')[!] CommonUse did not pass validation, due to 2 warnings (but you can use `--allow-warnings` to ignore them).You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint[!] Unable to find a podspec in the working directoryiMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse.podspec    - ERROR | spec: The specification defined in `/Users/adong666666/CommonUse/CommonUse.podspec` could not be loaded.[!] Invalid `CommonUse.podspec` file: syntax error, unexpected ',', expecting =&gt;...source_files  = {'CommonUse.h','UIColor-extension.swift','in......                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...e.h','UIColor-extension.swift','info.plist','README.md','FIL......                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...-extension.swift','info.plist','README.md','FILE_LICENSE','C......                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...wift','info.plist','README.md','FILE_LICENSE','CommonUse.pod......                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...st','README.md','FILE_LICENSE','CommonUse.podspec'}...                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected '}', expecting keyword_end. #  from /Users/adong666666/CommonUse/CommonUse.podspec:94 #  ------------------------------------------- #   &gt;    s.source_files  = {'CommonUse.h','UIColor-extension.swift','info.plist','README.md','FILE_LICENSE','CommonUse.podspec'} #    #s.exclude_files = "Classes/Exclude" #  -------------------------------------------[!] /Users/adong666666/CommonUse/CommonUse.podspec did not pass validation, due to 1 error.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse.podspec    - ERROR | spec: The specification defined in `/Users/adong666666/CommonUse/CommonUse.podspec` could not be loaded.[!] Invalid `CommonUse.podspec` file: syntax error, unexpected ',', expecting =&gt;...source_files  = {'CommonUse.h','UIColor-extension.swift','in......                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...e.h','UIColor-extension.swift','info.plist','README.md','FIL......                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...-extension.swift','info.plist','README.md','FILE_LICENSE'}...                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...wift','info.plist','README.md','FILE_LICENSE'}...                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected '}', expecting keyword_end. #  from /Users/adong666666/CommonUse/CommonUse.podspec:94 #  ------------------------------------------- #   &gt;    s.source_files  = {'CommonUse.h','UIColor-extension.swift','info.plist','README.md','FILE_LICENSE'} #    #s.exclude_files = "Classes/Exclude" #  -------------------------------------------[!] /Users/adong666666/CommonUse/CommonUse.podspec did not pass validation, due to 1 error.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse.podspec    - ERROR | spec: The specification defined in `/Users/adong666666/CommonUse/CommonUse.podspec` could not be loaded.[!] Invalid `CommonUse.podspec` file: syntax error, unexpected ',', expecting =&gt;...source_files  = {'CommonUse.h','UIColor-extension.swift','in......                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...e.h','UIColor-extension.swift','info.plist','README.md','FIL......                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...-extension.swift','info.plist','README.md','FILE_LICENSE'}...                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...wift','info.plist','README.md','FILE_LICENSE'}...                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected '}', expecting keyword_end. #  from /Users/adong666666/CommonUse/CommonUse.podspec:94 #  ------------------------------------------- #   &gt;    s.source_files  = {'CommonUse.h','UIColor-extension.swift','info.plist','README.md','FILE_LICENSE'} #    #s.exclude_files = "Classes/Exclude" #  -------------------------------------------[!] /Users/adong666666/CommonUse/CommonUse.podspec did not pass validation, due to 1 error.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse.podspec    - ERROR | spec: The specification defined in `/Users/adong666666/CommonUse/CommonUse.podspec` could not be loaded.[!] Invalid `CommonUse.podspec` file: syntax error, unexpected ',', expecting =&gt;...source_files  = {"CommonUse.h","UIColor-extension.swift","in......                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...e.h","UIColor-extension.swift","info.plist","README.md","FIL......                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...-extension.swift","info.plist","README.md","FILE_LICENSE"}...                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected ',', expecting keyword_end...wift","info.plist","README.md","FILE_LICENSE"}...                               ^/Users/adong666666/CommonUse/CommonUse.podspec:94: syntax error, unexpected '}', expecting keyword_end. #  from /Users/adong666666/CommonUse/CommonUse.podspec:94 #  ------------------------------------------- #   &gt;    s.source_files  = {"CommonUse.h","UIColor-extension.swift","info.plist","README.md","FILE_LICENSE"} #    #s.exclude_files = "Classes/Exclude" #  -------------------------------------------[!] /Users/adong666666/CommonUse/CommonUse.podspec did not pass validation, due to 1 error.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - WARN  | [iOS] swift: The validator used Swift 3.2 by default because no Swift version was specified. To specify a Swift version during validation, add the `swift_version` attribute in your podspec. Note that usage of the `--swift-version` parameter or a `.swift-version` file is now deprecated.    - ERROR | [iOS] xcodebuild: Returned an unsuccessful exit code. You can use `--verbose` for more information.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')    - NOTE  | xcodebuild:  warning: Swift 3 mode has been deprecated and will be removed in a later version of Xcode. Please migrate "App" to Swift 4.2 using "Convert &gt; To Current Swift Syntax…" in the Edit menu. (in target 'App')    - NOTE  | [iOS] xcodebuild:  warning: no rule to process file '/Users/adong666666/CommonUse/FILE_LICENSE' of type 'text' for architecture 'i386' (in target 'CommonUse')    - NOTE  | [iOS] xcodebuild:  warning: no rule to process file '/Users/adong666666/CommonUse/README.md' of type 'net.daringfireball.markdown' for architecture 'i386' (in target 'CommonUse')    - NOTE  | xcodebuild:  warning: Swift 3 mode has been deprecated and will be removed in a later version of Xcode. Please migrate "CommonUse" to Swift 4.2 using "Convert &gt; To Current Swift Syntax…" in the Edit menu. (in target 'CommonUse')    - NOTE  | [iOS] xcodebuild:  warning: no rule to process file '/Users/adong666666/CommonUse/FILE_LICENSE' of type 'text' for architecture 'x86_64' (in target 'CommonUse')    - NOTE  | [iOS] xcodebuild:  warning: no rule to process file '/Users/adong666666/CommonUse/README.md' of type 'net.daringfireball.markdown' for architecture 'x86_64' (in target 'CommonUse')    - NOTE  | [iOS] xcodebuild:  warning: duplicate output file '/Users/adong666666/Library/Developer/Xcode/DerivedData/App-cvugokihoxbywecvhxmarqbtbgah/Build/Products/Release-iphonesimulator/CommonUse/CommonUse.framework/Info.plist' on task: ProcessInfoPlistFile /Users/adong666666/Library/Developer/Xcode/DerivedData/App-cvugokihoxbywecvhxmarqbtbgah/Build/Products/Release-iphonesimulator/CommonUse/CommonUse.framework/Info.plist Target Support Files/CommonUse/Info.plist (in target 'CommonUse')    - NOTE  | [iOS] xcodebuild:  error: Multiple commands produce '/Users/adong666666/Library/Developer/Xcode/DerivedData/App-cvugokihoxbywecvhxmarqbtbgah/Build/Products/Release-iphonesimulator/CommonUse/CommonUse.framework/Info.plist':[!] CommonUse did not pass validation, due to 1 error and 2 warnings.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - ERROR | [iOS] file patterns: The `source_files` pattern did not match any file.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 error and 1 warning.You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - WARN  | [iOS] swift: The validator used Swift 3.2 by default because no Swift version was specified. To specify a Swift version during validation, add the `swift_version` attribute in your podspec. Note that usage of the `--swift-version` parameter or a `.swift-version` file is now deprecated.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')    - NOTE  | xcodebuild:  warning: Swift 3 mode has been deprecated and will be removed in a later version of Xcode. Please migrate "App" to Swift 4.2 using "Convert &gt; To Current Swift Syntax…" in the Edit menu. (in target 'App')    - NOTE  | xcodebuild:  warning: Swift 3 mode has been deprecated and will be removed in a later version of Xcode. Please migrate "CommonUse" to Swift 4.2 using "Convert &gt; To Current Swift Syntax…" in the Edit menu. (in target 'CommonUse')[!] CommonUse did not pass validation, due to 2 warnings (but you can use `--allow-warnings` to ignore them).You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - WARN  | summary: The summary is not meaningful.    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] CommonUse did not pass validation, due to 1 warning (but you can use `--allow-warnings` to ignore it).You can use the `--no-clean` option to inspect any issue.iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.1)    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')CommonUse passed validation.iMac-2:CommonUse adong666666$ pod trunk push Common.podspec [!] The specified path `Common.podspec` does not point to an existing podspec file.Usage:    $ pod trunk push [PATH]      Publish the podspec at `PATH` to make it available to all users of the      ‘master’ spec-repo. If `PATH` is not provided, defaults to the current      directory.      Before pushing the podspec to cocoapods.org, this will perform a local      lint of the podspec, including a build of the library. However, it remains      *your* responsibility to ensure that the published podspec will actually      work for your users. Thus it is recommended that you *first* try to use      the podspec to integrate the library into your demo and/or real      application.      If this is the first time you publish a spec for this pod, you will      automatically be registered as the ‘owner’ of this pod. (Note that ‘owner’      in this case implies a person that is allowed to publish new versions and      add other ‘owners’, not necessarily the library author.)Options:    --allow-warnings           Allows push even if there are lint warnings    --use-libraries            Linter uses static libraries to install the spec    --swift-version=VERSION    The SWIFT_VERSION that should be used to lint the                               spec. This takes precedence over a .swift-version                               file.    --skip-import-validation   Lint skips validating that the pod can be                               imported    --skip-tests               Lint skips building and running tests during                               validation    --silent                   Show nothing    --verbose                  Show more debugging information    --no-ansi                  Show output without ANSI codes    --help                     Show help banner of specified commandiMac-2:CommonUse adong666666$ pod trunk push CommonUse.podspec Updating spec repo `master`CocoaPods 1.6.0.beta.2 is available.To update use: `sudo gem install cocoapods --pre`[!] This is a test version we'd love you to try.For more information, see https://blog.cocoapods.org and the CHANGELOG for this version at https://github.com/CocoaPods/CocoaPods/releases/tag/1.6.0.beta.2Validating podspec -&gt; CommonUse (0.0.1)    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')[!] Unable to accept duplicate entry for: CommonUse (0.0.1)iMac-2:CommonUse adong666666$ pod lib lint -&gt; CommonUse (0.0.3)    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')CommonUse passed validation.iMac-2:CommonUse adong666666$ pod trunk push CommonUse.podspecUpdating spec repo `master`CocoaPods 1.6.0.beta.2 is available.To update use: `sudo gem install cocoapods --pre`[!] This is a test version we'd love you to try.For more information, see https://blog.cocoapods.org and the CHANGELOG for this version at https://github.com/CocoaPods/CocoaPods/releases/tag/1.6.0.beta.2Validating podspec -&gt; CommonUse (0.0.3)    - NOTE  | xcodebuild:  note: Using new build system    - NOTE  | [iOS] xcodebuild:  note: Planning build    - NOTE  | [iOS] xcodebuild:  note: Constructing build description    - NOTE  | [iOS] xcodebuild:  warning: Skipping code signing because the target does not have an Info.plist file. (in target 'App')Updating spec repo `master`CocoaPods 1.6.0.beta.2 is available.To update use: `sudo gem install cocoapods --pre`[!] This is a test version we'd love you to try.For more information, see https://blog.cocoapods.org and the CHANGELOG for this version at https://github.com/CocoaPods/CocoaPods/releases/tag/1.6.0.beta.2-------------------------------------------------------------------------------- 🎉  Congrats 🚀  CommonUse (0.0.3) successfully published 📅  January 17th, 06:01 🌎  https://cocoapods.org/pods/CommonUse 👍  Tell your friends!--------------------------------------------------------------------------------iMac-2:CommonUse adong666666$ <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> cocoapods </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将framework提交至cocoapods摘录</title>
      <link href="/posts/61504.html"/>
      <url>/posts/61504.html</url>
      
        <content type="html"><![CDATA[<h1 id="将framework提交至cocoapods摘录"><a href="#将framework提交至cocoapods摘录" class="headerlink" title="将framework提交至cocoapods摘录"></a>将framework提交至cocoapods摘录</h1><p>========================<br>看图秒懂系列<br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%B0%86framework%E6%8F%90%E4%BA%A4%E8%87%B3cocoapods/%E5%88%B6%E4%BD%9C%E8%87%AA%E5%B7%B1%E7%9A%84cocoapods%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93.jpg"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%B0%86framework%E6%8F%90%E4%BA%A4%E8%87%B3cocoapods/%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E6%97%B6%E5%8F%AF%E8%83%BD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%982.jpg"><br><img src="https://cdn.jsdelivr.net/gh/adong666666/source_cdn/_posts/%E5%B0%86framework%E6%8F%90%E4%BA%A4%E8%87%B3cocoapods/%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E6%97%B6%E5%8F%AF%E8%83%BD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%981.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 移动开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> framework </tag>
            
            <tag> cocoapods </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107.html"/>
      <url>/posts/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 脚本语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
            <tag> 博文 </tag>
            
            <tag> hexo </tag>
            
            <tag> ejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown Style test</title>
      <link href="/posts/89757140.html"/>
      <url>/posts/89757140.html</url>
      
        <content type="html"><![CDATA[<p>This post is originated from <a href="https://gist.github.com/apackeer/4159268">here</a> and is used for testing markdown style. This post contains nearly every markdown usage. Make sure all the markdown elements below show up correctly.</p><span id="more"></span><hr><h2 id="Headers"><a href="#Headers" class="headerlink" title="Headers"></a>Headers</h2><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> H1</span><span class="token title important"><span class="token punctuation">##</span> H2</span><span class="token title important"><span class="token punctuation">###</span> H3</span><span class="token title important"><span class="token punctuation">####</span> H4</span><span class="token title important"><span class="token punctuation">#####</span> H5</span><span class="token title important"><span class="token punctuation">######</span> H6</span>Alternatively, for H1 and H2, an underline-ish style:<span class="token title important">Alt-H1<span class="token punctuation">======</span></span><span class="token title important">Alt-H2<span class="token punctuation">------</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="H1"><a href="#H1" class="headerlink" title="H1"></a>H1</h1><h2 id="H2"><a href="#H2" class="headerlink" title="H2"></a>H2</h2><h3 id="H3"><a href="#H3" class="headerlink" title="H3"></a>H3</h3><h4 id="H4"><a href="#H4" class="headerlink" title="H4"></a>H4</h4><h5 id="H5"><a href="#H5" class="headerlink" title="H5"></a>H5</h5><h6 id="H6"><a href="#H6" class="headerlink" title="H6"></a>H6</h6><p>Alternatively, for H1 and H2, an underline-ish style:</p><h1 id="Alt-H1"><a href="#Alt-H1" class="headerlink" title="Alt-H1"></a>Alt-H1</h1><h2 id="Alt-H2"><a href="#Alt-H2" class="headerlink" title="Alt-H2"></a>Alt-H2</h2><h2 id="Emphasis"><a href="#Emphasis" class="headerlink" title="Emphasis"></a>Emphasis</h2><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">Emphasis, aka italics, with <span class="token italic"><span class="token punctuation">*</span><span class="token content">asterisks</span><span class="token punctuation">*</span></span> or <span class="token italic"><span class="token punctuation">_</span><span class="token content">underscores</span><span class="token punctuation">_</span></span>.Strong emphasis, aka bold, with <span class="token bold"><span class="token punctuation">**</span><span class="token content">asterisks</span><span class="token punctuation">**</span></span> or <span class="token bold"><span class="token punctuation">__</span><span class="token content">underscores</span><span class="token punctuation">__</span></span>.Combined emphasis with <span class="token bold"><span class="token punctuation">**</span><span class="token content">asterisks and <span class="token italic"><span class="token punctuation">_</span><span class="token content">underscores</span><span class="token punctuation">_</span></span></span><span class="token punctuation">**</span></span>.Strikethrough uses two tildes. <span class="token strike"><span class="token punctuation">~~</span><span class="token content">Scratch this.</span><span class="token punctuation">~~</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Emphasis, aka italics, with <em>asterisks</em> or <em>underscores</em>.</p><p>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.</p><p>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.</p><p>Strikethrough uses two tildes. <del>Scratch this.</del></p><h2 id="Lists"><a href="#Lists" class="headerlink" title="Lists"></a>Lists</h2><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> First ordered list item<span class="token list punctuation">2.</span> Another item  <span class="token list punctuation">*</span> Unordered sub-list.<span class="token list punctuation">1.</span> Actual numbers don't matter, just that it's a number  <span class="token list punctuation">1.</span> Ordered sub-list<span class="token list punctuation">4.</span> And another item.   You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).   To have a line break without a paragraph, you will need to use two trailing spaces.     Note that this line is separate, but within the same paragraph.     (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)<span class="token list punctuation">*</span> Unordered list can use asterisks<span class="token list punctuation">-</span> Or minuses<span class="token list punctuation">+</span> Or pluses<span class="token list punctuation">-</span> Paragraph In unordered list  For example like this.Common Paragraph with some text.And more text.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>First ordered list item</li><li>Another item</li></ol><ul><li>Unordered sub-list.</li></ul><ol><li><p>Actual numbers don’t matter, just that it’s a number</p></li><li><p>Ordered sub-list</p></li><li><p>And another item.</p><p>You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we’ll use three here to also align the raw Markdown).</p><p>To have a line break without a paragraph, you will need to use two trailing spaces.<br>Note that this line is separate, but within the same paragraph.<br>(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p></li></ol><ul><li>Unordered list can use asterisks</li></ul><ul><li>Or minuses</li></ul><ul><li>Or pluses</li></ul><ul><li><p>Paragraph In unordered list</p><p>For example like this.</p></li></ul><p>Common Paragraph with some text.<br>And more text.</p><h2 id="Inline-HTML"><a href="#Inline-HTML" class="headerlink" title="Inline HTML"></a>Inline HTML</h2><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>To reboot your computer, press <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>kbd</span><span class="token punctuation">&gt;</span></span>ctrl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>kbd</span><span class="token punctuation">&gt;</span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>kbd</span><span class="token punctuation">&gt;</span></span>alt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>kbd</span><span class="token punctuation">&gt;</span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>kbd</span><span class="token punctuation">&gt;</span></span>del<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>kbd</span><span class="token punctuation">&gt;</span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>To reboot your computer, press <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>del</kbd>.</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">&gt;</span></span>Definition list<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">&gt;</span></span>Is something people use sometimes.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">&gt;</span></span><span class="token code keyword">    &lt;dt&gt;Markdown in HTML&lt;/dt&gt;    &lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><dl>    <dt>Definition list</dt>    <dd>Is something people use sometimes.</dd><pre><code>&lt;dt&gt;Markdown in HTML&lt;/dt&gt;&lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;</code></pre></dl><h2 id="Links"><a href="#Links" class="headerlink" title="Links"></a>Links</h2><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url">[<span class="token content">I'm an inline-style link</span>](<span class="token url">https://www.google.com</span>)</span><span class="token url">[<span class="token content">I'm an inline-style link with title</span>](<span class="token url">https://www.google.com</span> <span class="token string">"Google's Homepage"</span>)</span><span class="token url">[<span class="token content">I'm a reference-style link</span>][<span class="token variable">Arbitrary case-insensitive reference text</span>]</span><span class="token url">[<span class="token content">I'm a relative reference to a repository file</span>](<span class="token url">../blob/master/LICENSE</span>)</span><span class="token url">[<span class="token content">You can use numbers for reference-style link definitions</span>][<span class="token variable">1</span>]</span>Or leave it empty and use the [link text itself]Some text to show that the reference links can follow later.<span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">arbitrary case-insensitive reference text</span><span class="token punctuation">]</span><span class="token punctuation">:</span> https://hexo.io</span><span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> https://hexo.io/docs/</span><span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">link text itself</span><span class="token punctuation">]</span><span class="token punctuation">:</span> https://hexo.io/api/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://www.google.com/">I’m an inline-style link</a></p><p><a href="https://www.google.com/" title="Google's Homepage">I’m an inline-style link with title</a></p><p><a href="https://hexo.io/">I’m a reference-style link</a></p><p><a href="../blob/master/LICENSE">I’m a relative reference to a repository file</a></p><p><a href="https://hexo.io/docs/">You can use numbers for reference-style link definitions</a></p><p>Or leave it empty and use the <a href="https://hexo.io/api/">link text itself</a></p><p>Some text to show that the reference links can follow later.</p><h2 id="Images"><a href="#Images" class="headerlink" title="Images"></a>Images</h2><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">hover to see the title text:Inline-style:<span class="token url"><span class="token operator">!</span>[<span class="token content">alt text</span>](<span class="token url">https://hexo.io/icon/favicon-196x196.png</span> <span class="token string">"Logo Title Text 1"</span>)</span>Reference-style:<span class="token url"><span class="token operator">!</span>[<span class="token content">alt text</span>][<span class="token variable">logo</span>]</span><span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">logo</span><span class="token punctuation">]</span><span class="token punctuation">:</span> https://hexo.io/icon/favicon-196x196.png <span class="token string">"Logo Title Text 2"</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>hover to see the title text:</p><p>Inline-style:</p><p><img src="https://hexo.io/icon/favicon-196x196.png" alt="alt text" title="Logo Title Text 1"></p><p>Reference-style:<br><img src="https://hexo.io/icon/favicon-196x196.png" alt="alt text" title="Logo Title Text 2"></p><h2 id="Code-and-Syntax-Highlighting"><a href="#Code-and-Syntax-Highlighting" class="headerlink" title="Code and Syntax Highlighting"></a>Code and Syntax Highlighting</h2><p>Inline <code>code</code> has <code>back-ticks around</code> it.</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> s <span class="token operator">=</span> <span class="token string">"JavaScript syntax highlighting"</span><span class="token punctuation">;</span><span class="token function">alert</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">s <span class="token operator">=</span> <span class="token string">"Python syntax highlighting"</span><span class="token keyword">print</span> s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">No language indicated, so no syntax highlighting.But let's throw in a &lt;b&gt;tag&lt;/b&gt;.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="Tables"><a href="#Tables" class="headerlink" title="Tables"></a>Tables</h2><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token table"><span class="token table-header-row"><span class="token punctuation">|</span><span class="token table-header important">                </span><span class="token punctuation">|</span><span class="token table-header important">ASCII                          </span><span class="token punctuation">|</span><span class="token table-header important">HTML                         </span><span class="token punctuation">|</span></span><span class="token table-line"><span class="token punctuation">|</span><span class="token punctuation">----------------</span><span class="token punctuation">|</span><span class="token punctuation">-------------------------------</span><span class="token punctuation">|</span><span class="token punctuation">-----------------------------</span><span class="token punctuation">|</span></span><span class="token table-data-rows"><span class="token punctuation">|</span><span class="token table-data">Single backticks</span><span class="token punctuation">|</span><span class="token table-data"><span class="token code-snippet code keyword">`'Isn't this fun?'`</span>            </span><span class="token punctuation">|</span><span class="token table-data">'Isn't this fun?'            </span><span class="token punctuation">|</span><span class="token punctuation">|</span><span class="token table-data">Quotes          </span><span class="token punctuation">|</span><span class="token table-data"><span class="token code-snippet code keyword">`"Isn't this fun?"`</span>            </span><span class="token punctuation">|</span><span class="token table-data">"Isn't this fun?"            </span><span class="token punctuation">|</span><span class="token punctuation">|</span><span class="token table-data">Dashes          </span><span class="token punctuation">|</span><span class="token table-data"><span class="token code-snippet code keyword">`-- is en-dash, --- is em-dash`</span></span><span class="token punctuation">|</span><span class="token table-data">-- is en-dash, --- is em-dash</span><span class="token punctuation">|</span></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th></th><th>ASCII</th><th>HTML</th></tr></thead><tbody><tr><td>Single backticks</td><td><code>'Isn't this fun?'</code></td><td>‘Isn’t this fun?’</td></tr><tr><td>Quotes</td><td><code>"Isn't this fun?"</code></td><td>“Isn’t this fun?”</td></tr><tr><td>Dashes</td><td><code>-- is en-dash, --- is em-dash</code></td><td>– is en-dash, — is em-dash</td></tr></tbody></table><p>Colons can be used to align columns.</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token table"><span class="token table-header-row"><span class="token punctuation">|</span><span class="token table-header important"> Tables        </span><span class="token punctuation">|</span><span class="token table-header important"> Are           </span><span class="token punctuation">|</span><span class="token table-header important"> Cool  </span><span class="token punctuation">|</span></span><span class="token table-line"><span class="token punctuation">|</span> <span class="token punctuation">-------------</span> <span class="token punctuation">|</span><span class="token punctuation">:-------------:</span><span class="token punctuation">|</span> <span class="token punctuation">-----:</span><span class="token punctuation">|</span></span><span class="token table-data-rows"><span class="token punctuation">|</span><span class="token table-data"> col 3 is      </span><span class="token punctuation">|</span><span class="token table-data"> right-aligned </span><span class="token punctuation">|</span><span class="token table-data">  </span><span class="token punctuation">|</span><span class="token punctuation">|</span><span class="token table-data"> col 2 is      </span><span class="token punctuation">|</span><span class="token table-data"> centered      </span><span class="token punctuation">|</span><span class="token table-data">    </span><span class="token punctuation">|</span><span class="token punctuation">|</span><span class="token table-data"> zebra stripes </span><span class="token punctuation">|</span><span class="token table-data"> are neat      </span><span class="token punctuation">|</span><span class="token table-data">   </span></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>Tables</th><th align="center">Are</th><th align="right">Cool</th></tr></thead><tbody><tr><td>col 3 is</td><td align="center">right-aligned</td><td align="right"></td></tr><tr><td>col 2 is</td><td align="center">centered</td><td align="right"></td></tr><tr><td>zebra stripes</td><td align="center">are neat</td><td align="right"></td></tr></tbody></table><p>The outer pipes (|) are optional, and you don’t need to make the raw Markdown line up prettily. You can also use inline Markdown.</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token table"><span class="token table-header-row"><span class="token table-header important">Markdown </span><span class="token punctuation">|</span><span class="token table-header important"> Less </span><span class="token punctuation">|</span><span class="token table-header important"> Pretty</span></span><span class="token table-line"><span class="token punctuation">---</span> <span class="token punctuation">|</span> <span class="token punctuation">---</span> <span class="token punctuation">|</span> <span class="token punctuation">---</span></span><span class="token table-data-rows"><span class="token table-data"><span class="token italic"><span class="token punctuation">*</span><span class="token content">Still</span><span class="token punctuation">*</span></span> </span><span class="token punctuation">|</span><span class="token table-data"> <span class="token code-snippet code keyword">`renders`</span> </span><span class="token punctuation">|</span><span class="token table-data"> <span class="token bold"><span class="token punctuation">**</span><span class="token content">nicely</span><span class="token punctuation">**</span></span></span><span class="token table-data">1 </span><span class="token punctuation">|</span><span class="token table-data"> 2 </span><span class="token punctuation">|</span><span class="token table-data"> 3</span></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>Markdown</th><th>Less</th><th>Pretty</th></tr></thead><tbody><tr><td><em>Still</em></td><td><code>renders</code></td><td><strong>nicely</strong></td></tr><tr><td>1</td><td>2</td><td>3</td></tr></tbody></table><blockquote><p>You can find more information about <strong>LaTeX</strong> mathematical expressions <a href="https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference">here</a>.</p></blockquote><h2 id="Blockquotes"><a href="#Blockquotes" class="headerlink" title="Blockquotes"></a>Blockquotes</h2><blockquote><p>Blockquotes are very handy in email to emulate reply text.<br>This line is part of the same quote.</p></blockquote><p>Quote break.</p><blockquote><p>This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can <em>put</em> <strong>Markdown</strong> into a blockquote.</p></blockquote><h2 id="Horizontal-Rule"><a href="#Horizontal-Rule" class="headerlink" title="Horizontal Rule"></a>Horizontal Rule</h2><p>Three or more…</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token hr punctuation">---</span>Hyphens<span class="token hr punctuation">***</span>Asterisks___Underscores<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p>Hyphens</p><hr><p>Asterisks</p><hr><p>Underscores</p><h2 id="Line-Breaks"><a href="#Line-Breaks" class="headerlink" title="Line Breaks"></a>Line Breaks</h2><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">Here's a line for us to start with.This line is separated from the one above by two newlines, so it will be a <span class="token italic"><span class="token punctuation">*</span><span class="token content">separate paragraph</span><span class="token punctuation">*</span></span>.This line is also a separate paragraph, but...This line is only separated by a single newline, so it's a separate line in the <span class="token italic"><span class="token punctuation">*</span><span class="token content">same paragraph</span><span class="token punctuation">*</span></span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Here’s a line for us to start with.</p><p>This line is separated from the one above by two newlines, so it will be a <em>separate paragraph</em>.</p><p>This line is also a separate paragraph, but…<br>This line is only separated by a single newline, so it’s a separate line in the <em>same paragraph</em>.</p><hr><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">This is a regular paragraph.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>Foo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>This is another regular paragraph.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>This is a regular paragraph.</p><table>    <tbody><tr>        <td>Foo</td>    </tr></tbody></table><p>This is another regular paragraph.</p><h2 id="Youtube-videos"><a href="#Youtube-videos" class="headerlink" title="Youtube videos"></a>Youtube videos</h2><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.youtube.com/watch?feature=player_embedded&amp;v=ARted4RniaU<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://img.youtube.com/vi/ARted4RniaU/0.jpg<span class="token punctuation">"</span></span><span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IMAGE ALT TEXT HERE<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>240<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>180<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>Pure markdown version:<span class="token url">[<span class="token content">![IMAGE ALT TEXT HERE</span>](<span class="token url">https://img.youtube.com/vi/ARted4RniaU/0.jpg</span>)</span>](https://www.youtube.com/watch?v=ARted4RniaU)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://www.youtube.com/watch?feature=player_embedded&amp;v=ARted4RniaU" target="_blank"><img src="https://img.youtube.com/vi/ARted4RniaU/0.jpg" alt="IMAGE ALT TEXT HERE" width="240" height="180" border="10"></a></p><p>Pure markdown version:</p><p><a href="https://www.youtube.com/watch?v=ARted4RniaU"><img src="https://img.youtube.com/vi/ARted4RniaU/0.jpg" alt="IMAGE ALT TEXT HERE"></a></p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> highlight </tag>
            
            <tag> Bar </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
